[{
  "_id": {
    "$oid": "66456604650be02224b4d586"
  },
  "directoryId": 126,
  "lastOrder": 9,
  "content": {
    "50285824-bf0b-4c16-b2dd-adb0017e0158": {
      "id": "50285824-bf0b-4c16-b2dd-adb0017e0158",
      "value": [
        {
          "_id": "c42e80dc-0453-4b05-a73a-e524cd38aac4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "링크",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "링크"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66456604650be02224b4d587"
  },
  "directoryId": 152,
  "lastOrder": 4,
  "content": {
    "0b2bb5d1-2402-4ada-8375-b77cb8b3df41": {
      "id": "0b2bb5d1-2402-4ada-8375-b77cb8b3df41",
      "value": [
        {
          "_id": "7853ebb9-dab5-4591-9fa6-8903436e7915",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "58416a21-4f6d-43be-b76a-12b955c8acf2": {
      "id": "58416a21-4f6d-43be-b76a-12b955c8acf2",
      "value": [
        {
          "_id": "51f31878-dd4c-4a63-ad48-ffcc09a789bc",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "8e6a120f-ec96-4e14-ae5a-d5263eb45507": {
      "id": "8e6a120f-ec96-4e14-ae5a-d5263eb45507",
      "value": [
        {
          "_id": "15ce0837-8c3a-4ee5-a940-e8d1cc33e0fb",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "a0c0a153-d8ea-49e8-a5be-1ecaa2880900": {
      "id": "a0c0a153-d8ea-49e8-a5be-1ecaa2880900",
      "value": [
        {
          "_id": "718d729c-10f0-4fa6-87a8-083cbe8476a7",
          "type": "paragraph",
          "children": [
            {
              "text": "이주미입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "e9a6cc79-8ce7-435e-82ac-2bab9944e51d": {
      "id": "e9a6cc79-8ce7-435e-82ac-2bab9944e51d",
      "value": [
        {
          "_id": "e847cf60-4cb4-4742-9c01-de776ce08cec",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664595a8fb70d608b3fc5a0b"
  },
  "directoryId": 127,
  "lastOrder": 7,
  "content": {
    "1085f83e-9de8-45df-a120-7929981565f8": {
      "id": "1085f83e-9de8-45df-a120-7929981565f8",
      "value": [
        {
          "_id": "a23c1298-bb7e-465f-9199-48eaf5b61d96",
          "type": "paragraph",
          "children": [
            {
              "text": "저장이 잘 되었느냐?",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "1f3ef756-b4fa-4373-a20b-8e9d416e2b4d": {
      "id": "1f3ef756-b4fa-4373-a20b-8e9d416e2b4d",
      "value": [
        {
          "_id": "a894a598-aa0f-4830-ae5e-4762aa550095",
          "type": "code",
          "children": [
            {
              "text": "hello world",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "javascript",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "3d1bd58d-13f4-4156-afbe-12d891d69a4d": {
      "id": "3d1bd58d-13f4-4156-afbe-12d891d69a4d",
      "value": [
        {
          "_id": "b543a4ea-ca60-4b03-baf9-7e920950c93d",
          "type": "paragraph",
          "children": [
            {
              "text": "ㄴㅇㅎㅁㄴㅇㅎㅁㄴㅇ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "895d9bcb-cd71-4b6e-bdef-59564810ae48": {
      "id": "895d9bcb-cd71-4b6e-bdef-59564810ae48",
      "value": [
        {
          "_id": "18d42639-a1b1-4cfe-bfd2-61e456486dda",
          "type": "paragraph",
          "children": [
            {
              "text": "저장이 되어라",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "a2be2bf8-af9d-49ed-8b93-d2aa11f4c4ce": {
      "id": "a2be2bf8-af9d-49ed-8b93-d2aa11f4c4ce",
      "value": [
        {
          "_id": "1f9fad4d-1d1c-4212-aa31-01d6c8f2b493",
          "type": "paragraph",
          "children": [
            {
              "text": "이것도 저장됨?",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "a52bb9aa-1b92-4bb8-b197-3f04d03c9b9f": {
      "id": "a52bb9aa-1b92-4bb8-b197-3f04d03c9b9f",
      "value": [
        {
          "_id": "22caa88a-5f89-4110-bf1a-8fef56b130e5",
          "type": "paragraph",
          "children": [
            {
              "text": "이것도 저장이 될라",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "a8c43a07-c5d6-41f3-a4f8-b5732c70059e": {
      "id": "a8c43a07-c5d6-41f3-a4f8-b5732c70059e",
      "value": [
        {
          "_id": "b813d3c8-f9e1-492a-9e46-d1c05259aa18",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "bb84dce7-746c-4c41-a29a-a564498874ea": {
      "id": "bb84dce7-746c-4c41-a29a-a564498874ea",
      "value": [
        {
          "_id": "6239e574-4fcb-495b-ad1e-16c19d1c0cda",
          "type": "paragraph",
          "children": [
            {
              "text": "여기는 127",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6645ad2ccac7627238f5b0f1"
  },
  "directoryId": 191,
  "lastOrder": 19,
  "content": {
    "16301633-4000-4dc2-b2aa-df9fcf576801": {
      "id": "16301633-4000-4dc2-b2aa-df9fcf576801",
      "value": [
        {
          "_id": "2ab0b522-2bb7-4af3-aa0e-d567fcd6f060",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "16f948ab-d201-47aa-b7a0-e732c127aed5": {
      "id": "16f948ab-d201-47aa-b7a0-e732c127aed5",
      "value": [
        {
          "_id": "fd717377-6aa4-4696-a472-ac12a77adf98",
          "type": "code",
          "children": [
            {
              "text": "2024-05-16T14:49:59.767+09:00 ERROR 13812 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "1879e4fc-c5a3-4e48-a426-e249262adec2": {
      "id": "1879e4fc-c5a3-4e48-a426-e249262adec2",
      "value": [
        {
          "_id": "c44b8284-e37f-4930-921e-3f71bc5a014e",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "29c6de66-26cb-463d-92b9-4e56fe362eb8": {
      "id": "29c6de66-26cb-463d-92b9-4e56fe362eb8",
      "value": [
        {
          "_id": "4c41a37d-95ef-4619-9302-1ab0552e12a1",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "31f393fc-2a42-44b1-acda-62ea654b2d9d": {
      "id": "31f393fc-2a42-44b1-acda-62ea654b2d9d",
      "value": [
        {
          "_id": "429c38d2-d12d-4213-b820-308d58b78d40",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T10:30:33.732+09:00 ERROR 13264 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "41072978-162a-4fb0-9d63-f3e92a77f538": {
      "id": "41072978-162a-4fb0-9d63-f3e92a77f538",
      "value": [
        {
          "_id": "d380e13f-3829-4a3f-925e-5972548999b0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "5e2e2734-96f4-4cbd-bc8f-530f3e104a2c": {
      "id": "5e2e2734-96f4-4cbd-bc8f-530f3e104a2c",
      "value": [
        {
          "_id": "fae779bd-9cfd-4712-8eed-ee0dfa7a7b10",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "5f31e3e9-5166-451f-b755-9aaf82efa2e1": {
      "id": "5f31e3e9-5166-451f-b755-9aaf82efa2e1",
      "value": [
        {
          "_id": "b20aadc6-36c7-461e-ad64-9dde50dac77c",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "690af2fe-c5b0-4bb0-a3a4-0951974a3391": {
      "id": "690af2fe-c5b0-4bb0-a3a4-0951974a3391",
      "value": [
        {
          "_id": "af23d21a-7391-4011-b3c7-f46a40775b3f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "705c1941-0fb9-40a6-a189-c57a121047e1": {
      "id": "705c1941-0fb9-40a6-a189-c57a121047e1",
      "value": [
        {
          "_id": "393514f6-cd52-47f5-a9ac-c74af859cb9b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "88b73f03-bbac-44c8-918a-42e1a980846f": {
      "id": "88b73f03-bbac-44c8-918a-42e1a980846f",
      "value": [
        {
          "_id": "455d97fb-931b-4fe3-aa7e-10d7685f49a2",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "899e3a71-e136-4db2-a0ca-552d593ffff1": {
      "id": "899e3a71-e136-4db2-a0ca-552d593ffff1",
      "value": [
        {
          "_id": "8f0f2e6b-32c3-460d-b498-0c13e174e8ac",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "8f5b19e2-a276-47c5-a33c-8b0388a824af": {
      "id": "8f5b19e2-a276-47c5-a33c-8b0388a824af",
      "value": [
        {
          "_id": "87916737-8a2e-481b-8f28-1d3dd5fd7691",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "9754a913-303a-4f4e-8bbd-3e5f9533f807": {
      "id": "9754a913-303a-4f4e-8bbd-3e5f9533f807",
      "value": [
        {
          "_id": "1de6d12f-9ece-4322-b706-d7b57ff2b84c",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "9c25b046-69d7-48ea-8bc6-d10b6754267b": {
      "id": "9c25b046-69d7-48ea-8bc6-d10b6754267b",
      "value": [
        {
          "_id": "caefa553-5868-4672-b5eb-b60193e4809d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "bf0dca42-8d20-4b39-948b-fe9a0f70c1e2": {
      "id": "bf0dca42-8d20-4b39-948b-fe9a0f70c1e2",
      "value": [
        {
          "_id": "a70b8126-5d73-4831-893f-fca3c3a784f4",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "d26a5089-d422-48ce-87c2-82b033982db5": {
      "id": "d26a5089-d422-48ce-87c2-82b033982db5",
      "value": [
        {
          "_id": "46d10178-7ebc-4b25-b7cf-a6041613ba00",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "dbaf39b7-103e-474e-9bfd-8889db610f4a": {
      "id": "dbaf39b7-103e-474e-9bfd-8889db610f4a",
      "value": [
        {
          "_id": "bc3bb69c-7687-45fe-8214-2b268815bc7a",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "e40f7716-1856-425d-b489-81eafa30956f": {
      "id": "e40f7716-1856-425d-b489-81eafa30956f",
      "value": [
        {
          "_id": "197097a4-ff46-46c7-bcfe-accbadd5c8bd",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "efd3dbf7-4522-4108-b25e-d606bc74aa99": {
      "id": "efd3dbf7-4522-4108-b25e-d606bc74aa99",
      "value": [
        {
          "_id": "7fcdb487-5e4d-4e2d-b094-4aadb7ea172a",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다.\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6645bac622553e7eccabfab6"
  },
  "directoryId": 192,
  "lastOrder": 3,
  "content": {
    "12214423-205d-416f-8aac-fad3b7f15c94": {
      "id": "12214423-205d-416f-8aac-fad3b7f15c94",
      "value": [
        {
          "_id": "8b45f15c-7625-4c4d-85ea-7c1e72b7988d",
          "type": "paragraph",
          "children": [
            {
              "text": "오늘은 어떤 에러가 났을까요?",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "16ac36dd-f91b-411a-b582-b5c9ef285f00": {
      "id": "16ac36dd-f91b-411a-b582-b5c9ef285f00",
      "value": [
        {
          "_id": "cfb2269a-1dd8-4124-8674-53a9efb5e1a0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6645bac622553e7eccabfab7"
  },
  "directoryId": 193,
  "lastOrder": 0,
  "content": {
    "12214423-205d-416f-8aac-fad3b7f15c94": {
      "id": "12214423-205d-416f-8aac-fad3b7f15c94",
      "value": [
        {
          "_id": "8b45f15c-7625-4c4d-85ea-7c1e72b7988d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6645c293ef35ee1703e88639"
  },
  "directoryId": 2,
  "lastOrder": 1,
  "content": {
    "a10a4656-4ca4-4271-86cc-3cb1351ed3a6": {
      "id": "a10a4656-4ca4-4271-86cc-3cb1351ed3a6",
      "value": [
        {
          "_id": "ae39c537-dba2-4192-8b40-cf8ab8c84a46",
          "type": "paragraph",
          "children": [
            {
              "text": "파일 내용 테스트",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66463432cd20b0518153520a"
  },
  "directoryId": 141,
  "lastOrder": 50,
  "content": {
    "05110851-ff74-4f98-be6c-d6e06cbb55ad": {
      "id": "05110851-ff74-4f98-be6c-d6e06cbb55ad",
      "value": [
        {
          "_id": "da7a226a-d67f-42dd-a5c1-dd1147fff2b8",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "0bb78e4c-5503-4150-9028-009d492759a8": {
      "id": "0bb78e4c-5503-4150-9028-009d492759a8",
      "value": [
        {
          "_id": "1c96c12d-ae4d-426e-ab6e-fed12020943a",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "0d34db71-76a9-4ffa-af38-7c4d1ba5e856": {
      "id": "0d34db71-76a9-4ffa-af38-7c4d1ba5e856",
      "value": [
        {
          "_id": "02b9d895-e7ff-45e8-be3e-b6ad06dbe97e",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "11445d6d-febd-409c-ba0c-7c165c1b48ab": {
      "id": "11445d6d-febd-409c-ba0c-7c165c1b48ab",
      "value": [
        {
          "_id": "7492ec03-fe5f-49fb-b33d-ba268b941b69",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "115c6a63-5cf0-44d3-b4f9-21e3e646e29b": {
      "id": "115c6a63-5cf0-44d3-b4f9-21e3e646e29b",
      "value": [
        {
          "_id": "9de6668a-cc68-464f-a8fd-7b2b8bdd7589",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "13ef7b59-f007-42ec-a2c0-a772e9a9dd7a": {
      "id": "13ef7b59-f007-42ec-a2c0-a772e9a9dd7a",
      "value": [
        {
          "_id": "e1f78f6e-9da9-4b85-8ef3-ccb71cc6fe79",
          "type": "code",
          "children": [
            {
              "text": "3\r\r\n?@?@?\r\r\n..b\r\r\n�ФФ�\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "1904780f-7a25-420e-a291-d957b752fda0": {
      "id": "1904780f-7a25-420e-a291-d957b752fda0",
      "value": [
        {
          "_id": "8f2785bc-568f-46ee-8af3-847095c73a32",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "19fa4189-280b-4406-8b1b-073d92ac734f": {
      "id": "19fa4189-280b-4406-8b1b-073d92ac734f",
      "value": [
        {
          "_id": "6194dbac-f6a6-4734-89b2-c0590c7f8604",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "239a3483-a654-49e4-8203-7c0de52a8fee": {
      "id": "239a3483-a654-49e4-8203-7c0de52a8fee",
      "value": [
        {
          "_id": "b3789e3d-fa1d-40dc-9cdf-aafd6ef4c212",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 21,
        "depth": 0
      }
    },
    "4be01eae-c08e-4650-8a76-3c5db916e8af": {
      "id": "4be01eae-c08e-4650-8a76-3c5db916e8af",
      "value": [
        {
          "_id": "408f2645-fe58-4d18-aa3f-8a99020fb44d",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "533d188f-6403-4bf6-8442-b620debf3e1e": {
      "id": "533d188f-6403-4bf6-8442-b620debf3e1e",
      "value": [
        {
          "_id": "be3dad89-1d6a-4d8a-be88-d2ce7455877e",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "53fd78f2-9c3b-4623-9d1d-172e4916de97": {
      "id": "53fd78f2-9c3b-4623-9d1d-172e4916de97",
      "value": [
        {
          "_id": "7c2e2aaa-a27d-4224-9f63-7cb1d62fb224",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 28,
        "depth": 0
      }
    },
    "615bb6d7-267f-4d6a-9bf2-cf23e43b9ffb": {
      "id": "615bb6d7-267f-4d6a-9bf2-cf23e43b9ffb",
      "value": [
        {
          "_id": "36ba1d5e-9f25-4b5a-8890-00b075d260d9",
          "type": "paragraph",
          "children": [
            {
              "text": "저는 황찬준입니다",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "highlight": {
                "color": "#C4554D"
              }
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "65904f35-0257-49c6-bc8c-369e6e969909": {
      "id": "65904f35-0257-49c6-bc8c-369e6e969909",
      "value": [
        {
          "_id": "b118e25b-e970-4941-8ad8-d61b8ec9f4ea",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "72cab165-7191-4f0b-8ca8-50076e1837b9": {
      "id": "72cab165-7191-4f0b-8ca8-50076e1837b9",
      "value": [
        {
          "_id": "356a1573-25a1-4eae-8be3-8ac1406ff3d8",
          "type": "image",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "checked": false,
            "sizes": {
              "width": 300,
              "height": 231
            },
            "src": "https://i.namu.wiki/i/vjgQc_4iFL9x8_HBZGm1gnPZTaFGGfhWesoHG90cksz39YRCbUGDPlVEKfdgI-6ZWFqpK3bEb25E8m5DxmMVNQ.webp",
            "fit": "contain"
          }
        }
      ],
      "type": "Image",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "856d25ea-b0ca-411b-af2d-95284919428b": {
      "id": "856d25ea-b0ca-411b-af2d-95284919428b",
      "value": [
        {
          "_id": "02328df8-3e86-46ce-890b-49fad572e44d",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "9032acdb-5f36-49f7-9f16-ffed5f1f375e": {
      "id": "9032acdb-5f36-49f7-9f16-ffed5f1f375e",
      "value": [
        {
          "_id": "4221d6ae-a8fd-452f-b771-43b8c120e917",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 11\r\r\n    print(\"�ФФ�\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "96878ae9-919a-4aca-810f-442a70870530": {
      "id": "96878ae9-919a-4aca-810f-442a70870530",
      "value": [
        {
          "_id": "9d3bfd08-9ea5-4158-b771-4c3ceb481f88",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "a004264d-3fd0-45c3-8209-067bb30e81e1": {
      "id": "a004264d-3fd0-45c3-8209-067bb30e81e1",
      "value": [
        {
          "_id": "6b3f8f77-bca6-42e4-a82c-9f7c187e6cc3",
          "type": "code",
          "children": [
            {
              "text": "3\r\r\n?@?@?\r\r\n..b\r\r\n�ФФ�\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "a1f2ae58-a5b7-4847-9eac-e97ba5ae0f81": {
      "id": "a1f2ae58-a5b7-4847-9eac-e97ba5ae0f81",
      "value": [
        {
          "_id": "ae0133c3-34bb-42a9-ae6b-b5e63bd6c373",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 11\r\r\n    print(\"�ФФ�\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 23,
        "depth": 0
      }
    },
    "a8a70fb5-f4dc-46c5-b491-792b08fa5780": {
      "id": "a8a70fb5-f4dc-46c5-b491-792b08fa5780",
      "value": [
        {
          "_id": "2533165b-2a63-43c0-a0d5-b26405c1193a",
          "type": "paragraph",
          "children": [
            {
              "text": "안녕하세요",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a9ec6495-c77b-4b39-b6f5-a7744ba88efa": {
      "id": "a9ec6495-c77b-4b39-b6f5-a7744ba88efa",
      "value": [
        {
          "_id": "f0bb4306-bf57-4b09-bec8-0dee96d5667d",
          "type": "blockquote",
          "children": [
            {
              "text": "안녕하세요 저는 황찬준이라니까요~~",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "adba3453-5149-4c9e-b65a-c21f14bf1aa8": {
      "id": "adba3453-5149-4c9e-b65a-c21f14bf1aa8",
      "value": [
        {
          "_id": "413e1048-a03d-4a24-9c9a-fabc7eb6deda",
          "type": "code",
          "children": [
            {
              "text": "'1'��(��) ���� �Ǵ� �ܺ� ����, ������ �� �ִ� ���α׷�, �Ǵ�\r\r\n��ġ ������ �ƴմϴ�.\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "b47d0eca-7b2f-4256-a1e4-bc6835f1db4f": {
      "id": "b47d0eca-7b2f-4256-a1e4-bc6835f1db4f",
      "value": [
        {
          "_id": "e071ee00-7c83-4508-9287-39583b69d0a0",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "c4eb65f3-ca80-4f37-bafd-a2f9d3e3b724": {
      "id": "c4eb65f3-ca80-4f37-bafd-a2f9d3e3b724",
      "value": [
        {
          "_id": "5edf541e-b9cf-4412-8aa7-1bdf5d164989",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "d2098f2f-d2f6-4f00-bedc-6e63bcb6b1b5": {
      "id": "d2098f2f-d2f6-4f00-bedc-6e63bcb6b1b5",
      "value": [
        {
          "_id": "20c61f78-95f0-4abc-89cd-50de3375f1fc",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py\", line 11\r\r\n    print(\"ㅠㅠㅠ\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "dbcbfdcc-e920-4c78-b4fd-460f6999c4ed": {
      "id": "dbcbfdcc-e920-4c78-b4fd-460f6999c4ed",
      "value": [
        {
          "_id": "80d9c7f7-6f7e-4c6e-90f9-cd25d0fcfdb2",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "dd1e63a3-1526-4099-b65a-c801af98178d": {
      "id": "dd1e63a3-1526-4099-b65a-c801af98178d",
      "value": [
        {
          "_id": "a6607ae6-3e37-44d8-9517-9ebb15f8eff4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "e26e61c6-92a4-47d1-9465-e86211559ab7": {
      "id": "e26e61c6-92a4-47d1-9465-e86211559ab7",
      "value": [
        {
          "_id": "27841e0f-0e51-41e1-897c-bee1fe5bbef1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "e5b742a9-af4c-404f-8df4-45a145ab7b84": {
      "id": "e5b742a9-af4c-404f-8df4-45a145ab7b84",
      "value": [
        {
          "_id": "7e7f7a07-8697-4e66-b8c3-32509b0a8e63",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "f7c7fbd6-dd21-4215-8768-7ec42b686710": {
      "id": "f7c7fbd6-dd21-4215-8768-7ec42b686710",
      "value": [
        {
          "_id": "af9e76da-9e47-4c26-bc34-6fca6d63c38c",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 9\r\r\n    print(\"?@?@?\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 29,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66463432cd20b0518153520b"
  },
  "directoryId": 143,
  "lastOrder": 0,
  "content": {
    "a8a70fb5-f4dc-46c5-b491-792b08fa5780": {
      "id": "a8a70fb5-f4dc-46c5-b491-792b08fa5780",
      "value": [
        {
          "_id": "2533165b-2a63-43c0-a0d5-b26405c1193a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646575acd20b0518153520d"
  },
  "directoryId": 198,
  "lastOrder": 62,
  "content": {
    "0607ec49-a472-4b5e-b86b-b60f92f217ea": {
      "id": "0607ec49-a472-4b5e-b86b-b60f92f217ea",
      "value": [
        {
          "_id": "c28edc0c-a595-467d-955b-850c2c17532f",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 13\r\r\n    print(\"????\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 46,
        "depth": 0
      }
    },
    "06bb8afd-9f21-436b-ba3b-29700d9adbf5": {
      "id": "06bb8afd-9f21-436b-ba3b-29700d9adbf5",
      "value": [
        {
          "_id": "1424aff0-e6d2-4eb8-9c57-d76d1260472b",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 36,
        "depth": 0
      }
    },
    "096ff7ca-dc4a-44f1-ba61-9788e7743387": {
      "id": "096ff7ca-dc4a-44f1-ba61-9788e7743387",
      "value": [
        {
          "_id": "e59b84eb-db9e-4037-9d8d-9ec4052019dd",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "0c504910-3a7f-40f6-a165-5b325b2f7bbb": {
      "id": "0c504910-3a7f-40f6-a165-5b325b2f7bbb",
      "value": [
        {
          "_id": "efdf4019-6037-48ad-a187-0059d7df3b05",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "0de1576b-0c3e-4970-93f8-73dea4803e73": {
      "id": "0de1576b-0c3e-4970-93f8-73dea4803e73",
      "value": [
        {
          "_id": "4638a528-ef24-4faa-bba0-37bb88b1b003",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\nprint(\"Hello World\")\r\nprint(\"?@?@?\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "147247d0-db6e-4b87-96fc-2d5f34bb44d2": {
      "id": "147247d0-db6e-4b87-96fc-2d5f34bb44d2",
      "value": [
        {
          "_id": "88b27955-d297-43e3-9c86-2351a1aae1f2",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 39,
        "depth": 0
      }
    },
    "1a2aa0f9-1d82-41c9-90b9-29144687aca1": {
      "id": "1a2aa0f9-1d82-41c9-90b9-29144687aca1",
      "value": [
        {
          "_id": "208ac957-cb37-4e65-bd37-650f4f7cd7e6",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n한 문장으로 요약하면 \"다음 문장을 한 문장으로 바꿔줘.\" 가 될 것 같습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 37,
        "depth": 0
      }
    },
    "223e05aa-3f67-491e-be57-d0f1657a2b10": {
      "id": "223e05aa-3f67-491e-be57-d0f1657a2b10",
      "value": [
        {
          "_id": "4b0bb246-c879-4c6c-9517-97b9a7b7a82b",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 28,
        "depth": 0
      }
    },
    "22917c77-9a16-49d5-b13d-d234a10fab5c": {
      "id": "22917c77-9a16-49d5-b13d-d234a10fab5c",
      "value": [
        {
          "_id": "3cff3153-116e-423b-b99b-a2344aeff9b3",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "2ce9b9f3-8e13-4010-be2f-39c7f7c3f922": {
      "id": "2ce9b9f3-8e13-4010-be2f-39c7f7c3f922",
      "value": [
        {
          "_id": "14a2b400-6153-4c7a-80a9-9db7a4bfc246",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 12\r\r\n    print(\"Hello World\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "32926a80-1c79-4196-82a6-bde9fac03801": {
      "id": "32926a80-1c79-4196-82a6-bde9fac03801",
      "value": [
        {
          "_id": "24d69ae9-4727-4ec0-9758-bcf491245355",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파이썬 파일 'ex.py'의 12번 줄에서 괄호 '('가 닫히지 않아서 문법 오류가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "32d35886-bcf5-4eab-a0a8-6a37a7092428": {
      "id": "32d35886-bcf5-4eab-a0a8-6a37a7092428",
      "value": [
        {
          "_id": "88a26885-e715-4091-854b-00b15249e054",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "3f998948-9b52-4876-9e6b-0f9803b34291": {
      "id": "3f998948-9b52-4876-9e6b-0f9803b34291",
      "value": [
        {
          "_id": "53cf89a5-8073-48b0-b50a-b97c08e6a691",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "40a427f3-9549-49a3-96be-6ed5c0aeb1a9": {
      "id": "40a427f3-9549-49a3-96be-6ed5c0aeb1a9",
      "value": [
        {
          "_id": "040dee16-0c02-4554-9136-0b2ccddda4f5",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 12\r\r\n    print(\"Hello World\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "41c57e66-0ff4-461b-9a6f-ded27593416b": {
      "id": "41c57e66-0ff4-461b-9a6f-ded27593416b",
      "value": [
        {
          "_id": "0b5e7743-7eea-4c70-8f45-a12693fe7a6b",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "4cbaa790-8123-47c9-b65c-bedbf3c65a0f": {
      "id": "4cbaa790-8123-47c9-b65c-bedbf3c65a0f",
      "value": [
        {
          "_id": "f84b2462-76a6-4ae0-8a51-9d95a2c821a3",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 55,
        "depth": 0
      }
    },
    "560a872c-ee73-45d9-8ab0-abbf50e4835e": {
      "id": "560a872c-ee73-45d9-8ab0-abbf50e4835e",
      "value": [
        {
          "_id": "18aa48a8-1d1b-46bb-ad8f-b6301ae8fc6e",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 38,
        "depth": 0
      }
    },
    "567edff1-09d8-46a2-bf70-0ca5fe10c99a": {
      "id": "567edff1-09d8-46a2-bf70-0ca5fe10c99a",
      "value": [
        {
          "_id": "8b918d72-a068-4bec-8a96-fc71a757f2da",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 58,
        "depth": 0
      }
    },
    "5dd2fb67-90d2-4826-98b0-0f4137da8acf": {
      "id": "5dd2fb67-90d2-4826-98b0-0f4137da8acf",
      "value": [
        {
          "_id": "0bb8c74c-6e33-470a-a3cd-785faa3d96ac",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 52,
        "depth": 1
      }
    },
    "5f8bd10a-49cb-47d1-ab6b-671b3f6fe054": {
      "id": "5f8bd10a-49cb-47d1-ab6b-671b3f6fe054",
      "value": [
        {
          "_id": "0cc2ef4d-3e46-4bab-8acd-5400b3d69f13",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "62e93ccc-5e40-4ea5-ab0e-bf7479254a15": {
      "id": "62e93ccc-5e40-4ea5-ab0e-bf7479254a15",
      "value": [
        {
          "_id": "1699e2dd-7168-46d3-8436-19779a12c589",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 47,
        "depth": 0
      }
    },
    "64d8977f-8b77-4749-8dec-de2c6d957752": {
      "id": "64d8977f-8b77-4749-8dec-de2c6d957752",
      "value": [
        {
          "_id": "fe8906fb-67bf-41bb-ab8c-0e72200265a0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "66deb909-6c4e-4700-b720-76df65ac5784": {
      "id": "66deb909-6c4e-4700-b720-76df65ac5784",
      "value": [
        {
          "_id": "11efdfc6-49d2-4a71-9c7e-c7c77740eb9b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n한 문장으로 변형해주실 수 있으면 다시 요청해주세요.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 39,
        "depth": 0
      }
    },
    "699af992-84ea-493c-8786-070644b58c1d": {
      "id": "699af992-84ea-493c-8786-070644b58c1d",
      "value": [
        {
          "_id": "f3126ee7-801b-4651-9531-7456201dfc7d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n문자열을 닫는 괄호가 누락된 문법 오류가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 61,
        "depth": 0
      }
    },
    "6a637100-6579-4c3f-b47e-6e3a1687ac33": {
      "id": "6a637100-6579-4c3f-b47e-6e3a1687ac33",
      "value": [
        {
          "_id": "4b2bf23b-0577-4a56-8104-3249bb2cf694",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n문장이 닫히지 않아 SyntaxError가 발생했습니다",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "6b56d507-9228-4392-84c3-64217b969da7": {
      "id": "6b56d507-9228-4392-84c3-64217b969da7",
      "value": [
        {
          "_id": "743b8c38-cf25-4ce6-a181-2ea7409a6300",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")\r\nprint(\"????\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 54,
        "depth": 1
      }
    },
    "6fd067b3-e24d-4b84-8fff-d7405760f6cf": {
      "id": "6fd067b3-e24d-4b84-8fff-d7405760f6cf",
      "value": [
        {
          "_id": "82faac18-bd42-4f62-ba34-850a3bcba794",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 \"ex.py\"의 13번 라인에 괄호가 닫지 않은 SyntaxError 발생.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "73acc35f-ae34-407c-b7b2-c6a6a6558892": {
      "id": "73acc35f-ae34-407c-b7b2-c6a6a6558892",
      "value": [
        {
          "_id": "2f09683a-9196-4953-b6ae-6d5c5c3577ed",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 34,
        "depth": 1
      }
    },
    "77428a78-022b-4f48-8f38-fd9d6e146acf": {
      "id": "77428a78-022b-4f48-8f38-fd9d6e146acf",
      "value": [
        {
          "_id": "86458770-8ee4-486f-b850-b8873dcb6bbd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "79e8d8e7-ad97-4087-a61f-23f74f008217": {
      "id": "79e8d8e7-ad97-4087-a61f-23f74f008217",
      "value": [
        {
          "_id": "f334eb5d-3da5-4d6e-b761-ed0774b78fb3",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "7a776f5a-8612-4905-8ede-3a80d0d4df45": {
      "id": "7a776f5a-8612-4905-8ede-3a80d0d4df45",
      "value": [
        {
          "_id": "0bfc9d55-0a51-4944-81d4-694dfd51652d",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "82005de3-67c3-45ca-a2c9-c0d454b55829": {
      "id": "82005de3-67c3-45ca-a2c9-c0d454b55829",
      "value": [
        {
          "_id": "9ae96d3b-11c8-45eb-b123-86cebf363646",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "python",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "8337d8a8-1239-45f9-88a4-736c4f1dd9f0": {
      "id": "8337d8a8-1239-45f9-88a4-736c4f1dd9f0",
      "value": [
        {
          "_id": "0997b70b-450c-4299-8b56-8c82fd283830",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 57,
        "depth": 0
      }
    },
    "87c555c7-95f0-49e5-a720-9051f38d5d1f": {
      "id": "87c555c7-95f0-49e5-a720-9051f38d5d1f",
      "value": [
        {
          "_id": "7cbd93c6-9cfd-4cbd-8d01-bf756b3a9a29",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "8cba30ae-bc15-4d73-aebe-ee21b9756fd6": {
      "id": "8cba30ae-bc15-4d73-aebe-ee21b9756fd6",
      "value": [
        {
          "_id": "28df1004-1d40-4e5a-afb2-347e900c35a6",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 40,
        "depth": 0
      }
    },
    "908062f9-1065-4a73-81eb-9b08ae2d8cc6": {
      "id": "908062f9-1065-4a73-81eb-9b08ae2d8cc6",
      "value": [
        {
          "_id": "294783a9-2584-40fb-b434-576d33b8865b",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "92536a16-d5c7-45c6-ae37-9571305ad058": {
      "id": "92536a16-d5c7-45c6-ae37-9571305ad058",
      "value": [
        {
          "_id": "92e0b6d7-8fc3-4351-a130-23ad472b04bb",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 24,
        "depth": 1
      }
    },
    "9ab13c0e-fe33-4e79-b0bf-1bbd4f71d2fc": {
      "id": "9ab13c0e-fe33-4e79-b0bf-1bbd4f71d2fc",
      "value": [
        {
          "_id": "008f0a8a-de85-411a-b964-391203d677ff",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "9e981ef9-d0cd-4cfd-9daf-9fd3a2173f41": {
      "id": "9e981ef9-d0cd-4cfd-9daf-9fd3a2173f41",
      "value": [
        {
          "_id": "fb242158-6a4b-41ca-b1b3-451140101110",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 51,
        "depth": 1
      }
    },
    "a1393245-9189-4fda-91d2-ebf27edc6145": {
      "id": "a1393245-9189-4fda-91d2-ebf27edc6145",
      "value": [
        {
          "_id": "5655c799-945d-4ae0-8d48-1f999a5da0ce",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 41,
        "depth": 1
      }
    },
    "a7001b0d-c371-4bb9-aeaa-f285bfd09281": {
      "id": "a7001b0d-c371-4bb9-aeaa-f285bfd09281",
      "value": [
        {
          "_id": "da5662a7-bbf5-4e07-895b-a2b29ebfec9a",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 45,
        "depth": 0
      }
    },
    "a793098c-fb48-4551-95a0-88edb4f98f12": {
      "id": "a793098c-fb48-4551-95a0-88edb4f98f12",
      "value": [
        {
          "_id": "5c42dd0b-271c-46e4-966c-869fcadcfffe",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "a891b019-45b3-43a1-895a-2b69d86d960f": {
      "id": "a891b019-45b3-43a1-895a-2b69d86d960f",
      "value": [
        {
          "_id": "b8647393-d230-43b7-b094-7815de4dcf98",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 42,
        "depth": 1
      }
    },
    "a956bfd4-36af-410e-8447-6ef784897590": {
      "id": "a956bfd4-36af-410e-8447-6ef784897590",
      "value": [
        {
          "_id": "3d34064b-3ed2-420d-ad13-c197079acff2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n문장 요약 서비스를 이용하고 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "acf52dfd-aba7-48d8-8e57-bde372a3364f": {
      "id": "acf52dfd-aba7-48d8-8e57-bde372a3364f",
      "value": [
        {
          "_id": "9333cc25-f87a-4ef2-b48f-224373c922b0",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 49,
        "depth": 0
      }
    },
    "ae38dd7c-3f9e-4a9e-93ef-707001cfd830": {
      "id": "ae38dd7c-3f9e-4a9e-93ef-707001cfd830",
      "value": [
        {
          "_id": "982d4e85-b3d0-495e-946c-f4635861a309",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n문장이 닫히지 않아서 구문 오류가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 48,
        "depth": 0
      }
    },
    "ae7976b6-8237-49d1-95b8-a2e3101b45cf": {
      "id": "ae7976b6-8237-49d1-95b8-a2e3101b45cf",
      "value": [
        {
          "_id": "883c97a4-0124-4466-ade6-8f4c1581e8cf",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 44,
        "depth": 0
      }
    },
    "b6cb7594-30d9-4c4c-850c-af72d9a76f7a": {
      "id": "b6cb7594-30d9-4c4c-850c-af72d9a76f7a",
      "value": [
        {
          "_id": "3b681631-fcc0-44a4-96f9-c2f0642ee863",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "c1b41ba9-b62e-4e36-9173-31839263646d": {
      "id": "c1b41ba9-b62e-4e36-9173-31839263646d",
      "value": [
        {
          "_id": "b65d7b2c-7051-49f8-bf01-f61c87c43390",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 62,
        "depth": 0
      }
    },
    "c9835fdf-9cb5-4a93-bdb6-aa3c9c1725b2": {
      "id": "c9835fdf-9cb5-4a93-bdb6-aa3c9c1725b2",
      "value": [
        {
          "_id": "c91656c1-ff8c-4e63-bc20-d6aaa89e964e",
          "type": "paragraph",
          "children": [
            {
              "text": "안녕하신가..",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "cb555084-d91b-406a-81ae-ccce35240e72": {
      "id": "cb555084-d91b-406a-81ae-ccce35240e72",
      "value": [
        {
          "_id": "5277267a-5338-4d46-9c9a-61ffbc5a32d5",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 21,
        "depth": 0
      }
    },
    "cf4b24b0-7a0a-48d6-a9cd-8a8d39525f8f": {
      "id": "cf4b24b0-7a0a-48d6-a9cd-8a8d39525f8f",
      "value": [
        {
          "_id": "4f96ee44-6949-4516-83c7-ba1b5266a605",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "d0691769-3bc1-47c5-aa9e-ac1929f4d867": {
      "id": "d0691769-3bc1-47c5-aa9e-ac1929f4d867",
      "value": [
        {
          "_id": "7d785c8e-b7ec-4843-83eb-b604f2fc0acd",
          "type": "paragraph",
          "children": [
            {
              "text": "허허",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "d4f6ac62-5fe7-4393-9486-dd55845d15fd": {
      "id": "d4f6ac62-5fe7-4393-9486-dd55845d15fd",
      "value": [
        {
          "_id": "023996d5-bb61-480d-add4-303755f775ae",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nex.py 파일의 내용을 변경하여 \"Hello World\" 다음에 \"????\"를 출력하도록 수정되었습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 56,
        "depth": 0
      }
    },
    "d6e9436b-4ef3-4ab4-a2df-bc66d1be675e": {
      "id": "d6e9436b-4ef3-4ab4-a2df-bc66d1be675e",
      "value": [
        {
          "_id": "d6af3439-f061-4818-80da-f99ae180280d",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 13\r\r\n    print(\"????\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 59,
        "depth": 0
      }
    },
    "d90944b6-35a2-4f0b-9bae-44809853779f": {
      "id": "d90944b6-35a2-4f0b-9bae-44809853779f",
      "value": [
        {
          "_id": "3ae79965-0788-4436-b10d-ad60796cb670",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 40,
        "depth": 1
      }
    },
    "dc1bb538-d7e3-42c6-a6d4-0b0b9408a147": {
      "id": "dc1bb538-d7e3-42c6-a6d4-0b0b9408a147",
      "value": [
        {
          "_id": "d0782c53-521b-4fc5-a4dc-3aa1e4898656",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")\r\nprint(\"????\")",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 43,
        "depth": 1
      }
    },
    "dde9ffd3-b492-4a6f-b84a-945486b41b59": {
      "id": "dde9ffd3-b492-4a6f-b84a-945486b41b59",
      "value": [
        {
          "_id": "974bcb4d-0e71-4228-bd76-4cd0e9e77d30",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")\r\nprint(\"????\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 35,
        "depth": 1
      }
    },
    "de3178b1-1dbc-465b-868b-df326c79063d": {
      "id": "de3178b1-1dbc-465b-868b-df326c79063d",
      "value": [
        {
          "_id": "abd561c9-ef77-4bb7-9146-d560b583d27c",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "e4bc93a2-fb80-484f-9b7c-19bf071a2d35": {
      "id": "e4bc93a2-fb80-484f-9b7c-19bf071a2d35",
      "value": [
        {
          "_id": "214fdb23-0eb1-4916-b889-66270a272ed3",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 13\r\r\n    print(\"????\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "eb0a729b-7e23-462e-8c47-e89442827c86": {
      "id": "eb0a729b-7e23-462e-8c47-e89442827c86",
      "value": [
        {
          "_id": "b8dcb071-b0c7-4226-90a0-0d10bf6cda79",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "f09cad50-0fed-4d10-84d1-84a5b461a944": {
      "id": "f09cad50-0fed-4d10-84d1-84a5b461a944",
      "value": [
        {
          "_id": "7458d898-9133-4efa-893e-748f2afbc53e",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 50,
        "depth": 0
      }
    },
    "f13ab8fd-6451-422d-97b0-9f5304187f9f": {
      "id": "f13ab8fd-6451-422d-97b0-9f5304187f9f",
      "value": [
        {
          "_id": "80fec8a2-a1b3-461e-ae99-dad0b26d1884",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "ff7a06d9-a94c-4acb-adbd-825f35e08180": {
      "id": "ff7a06d9-a94c-4acb-adbd-825f35e08180",
      "value": [
        {
          "_id": "fde52fc6-f1e8-4d78-a306-ce77b03a6261",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 60,
        "depth": 0
      }
    },
    "ff84764e-743f-4771-aa11-183611575c96": {
      "id": "ff84764e-743f-4771-aa11-183611575c96",
      "value": [
        {
          "_id": "71b7d979-8d2f-4b91-b8f5-ded606b36a5e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n문장 요약 서비스를 제공해주세요.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "ffb4c7f5-5abb-4143-9a72-35a4e00cd03c": {
      "id": "ffb4c7f5-5abb-4143-9a72-35a4e00cd03c",
      "value": [
        {
          "_id": "49950264-a95f-4c45-bfd7-1d54ab296e74",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646a4b3cd20b0518153520e"
  },
  "directoryId": 7,
  "lastOrder": 4,
  "content": {
    "42c695ed-6656-4886-a9ab-ffa88b158b58": {
      "id": "42c695ed-6656-4886-a9ab-ffa88b158b58",
      "value": [
        {
          "_id": "94d73ec7-8310-420c-a084-8a8be26636a4",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "검색URL",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "검색URL"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "4e7db0d2-4f5d-4504-b996-c33a005a7bde": {
      "id": "4e7db0d2-4f5d-4504-b996-c33a005a7bde",
      "value": [
        {
          "_id": "e64a1caa-f2ae-4bfe-a610-8e7a59aa4856",
          "type": "heading-two",
          "children": [
            {
              "text": "검색 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "888bfb50-aec0-4eee-bb7a-6f9c8b67d249": {
      "id": "888bfb50-aec0-4eee-bb7a-6f9c8b67d249",
      "value": [
        {
          "_id": "b481410f-c30e-4ca3-802b-f0ff858dcab0",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT요약\n요약된 내용",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 3,
        "depth": 2
      }
    },
    "94acf6a3-5b08-4de6-8769-0911895bb025": {
      "id": "94acf6a3-5b08-4de6-8769-0911895bb025",
      "value": [
        {
          "_id": "ad304f7f-14b8-4251-93dd-84a401a88d6a",
          "type": "heading-three",
          "children": [
            {
              "text": "검색 키워드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "e2d80989-7b63-42d0-a948-9434fe1f7904": {
      "id": "e2d80989-7b63-42d0-a948-9434fe1f7904",
      "value": [
        {
          "_id": "bc2cd4b8-e2dc-4c37-bba0-3f8ce6cfd084",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646a4b3cd20b0518153520f"
  },
  "directoryId": 146,
  "lastOrder": 13,
  "content": {
    "0b543861-7cb6-4500-8c0d-4ed127dbef91": {
      "id": "0b543861-7cb6-4500-8c0d-4ed127dbef91",
      "value": [
        {
          "_id": "fee5f7f3-76d5-4cb4-9148-7f10ce68f170",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 경로를 변경하여 백준 알고리즘 문제를 풀기 위한 파이썬 코드를 수정하였다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "0bc3181a-05bc-4ac8-ab71-03b11fb40c63": {
      "id": "0bc3181a-05bc-4ac8-ab71-03b11fb40c63",
      "value": [
        {
          "_id": "44ffda42-0ed8-4deb-923e-2d06f2b35289",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "0fe56ed5-a06b-4b69-808d-540100171a7a": {
      "id": "0fe56ed5-a06b-4b69-808d-540100171a7a",
      "value": [
        {
          "_id": "b6d16b3f-b9a4-4686-8a61-12939524185f",
          "type": "code",
          "children": [
            {
              "text": "'\u0003exit'��(��) ���� �Ǵ� �ܺ� ����, ������ �� �ִ� ���α׷�, �Ǵ�\r\r\n��ġ ������ �ƴմϴ�.\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "48e85dbf-3a4e-4498-85de-b558ce4ae870": {
      "id": "48e85dbf-3a4e-4498-85de-b558ce4ae870",
      "value": [
        {
          "_id": "09c17b99-5ed5-4457-8f5e-f6ac42aea8cf",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\Algo\\pythonProject\\main.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "7c0554b1-b024-423b-bc65-3cd0a936aeb2": {
      "id": "7c0554b1-b024-423b-bc65-3cd0a936aeb2",
      "value": [
        {
          "_id": "a891b838-7986-48a5-be1f-bcf26c5c9637",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nexit 함수는 현재 실행 중인 프로그램이나 스크립트를 종료시키는 함수이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "945df0c0-dd35-43ea-abf8-06d53840e136": {
      "id": "945df0c0-dd35-43ea-abf8-06d53840e136",
      "value": [
        {
          "_id": "8d395dab-c099-443e-a158-4c0b43a7dc8e",
          "type": "code",
          "children": [
            {
              "text": "# 백준 벽 부수고 이동하기 4 - G2\r\nfrom collections import deque\r\n\r\ndx = [1, -1, 0, 0]\r\ndy = [0, 0, 1, -1]\r\n\r\ndef first_bfs(row, col):\r\n    queue = deque()   # bfs용 큐\r\n    queue.append((row, col))\r\n\r\n    visited[row][col] = idx\r\n\r\n    cnt = 1\r\n    while queue:\r\n        row, col = queue.popleft()\r\n\r\n        for k in range(4):\r\n            nr, nc = row + dx[k], col + dy[k]\r\n            if 0 <= nr < a and 0 <= nc < b and not visited[nr][nc] and map2[nr][nc] == 0:\r\n                queue.append((nr, nc))\r\n                cnt += 1\r\n                visited[nr][nc] = idx\r\n                # print(\"함수 내부의 visited[nr][nc] = \", visited[nr][nc])\r\n\r\n    return cnt\r\n\r\na, b = map(int, input().split())\r\n\r\nmap2 = [list(map(int, input())) for _ in range(a)]\r\nvisited = [[0] * b for _ in range(a)]\r\ncount_num = [[0] * b for _ in range(a)]\r\n\r\nidx = 0\r\nidx_value = dict()\r\n\r\nfor i in range(a):\r\n    for j in range(b):\r\n        if map2[i][j] == 0 and visited[i][j] == 0:  # 길 -> bfs로 연결된 길의 길이 확인 후 저장\r\n            idx += 1  # 길 번호\r\n            idx_value[idx] = first_bfs(i, j)\r\n#             print('idx = ', idx)\r\n#             print('idx_value = ', idx_value[idx])\r\n# print('-----------------------------------')\r\n# print(\"idx_value = \", idx_value)\r\n# print()\r\n# print(\"visited = \", visited)\r\n# print('-----------------------------------')\r\nfor i in range(a):\r\n    for j in range(b):\r\n        if visited[i][j] != 0:\r\n            count_num[i][j] = idx_value[visited[i][j]]\r\n\r\n# print(count_num)\r\n\r\nfor i in range(a):\r\n    for j in range(b):\r\n        if map2[i][j] == 1:\r\n            road_idx = set()\r\n            ans = 1\r\n            for p in range(4):\r\n                new_row, new_col = i + dx[p], j + dy[p]\r\n                if 0 <= new_row < a and 0 <= new_col < b and count_num[new_row][new_col] != 0 and visited[new_row][new_col] not in road_idx:\r\n                    road_idx.add(visited[new_row][new_col])\r\n                    ans += count_num[new_row][new_col]\r\n            map2[i][j] = ans % 10\r\n# print('------------ ans ----------------')\r\nfor i in range(a):\r\n    print(\"\".join(map(str, map2[i])))",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "9c836585-bff4-458d-811b-4ac5ce546c4a": {
      "id": "9c836585-bff4-458d-811b-4ac5ce546c4a",
      "value": [
        {
          "_id": "51e2d92b-8477-40d3-9531-cee8f8946d83",
          "type": "code",
          "children": [
            {
              "text": "# 백준 벽 부수고 이동하기 4 - G2\r\nfrom collections import deque\r\n\r\ndx = [1, -1, 0, 0]\r\ndy = [0, 0, 1, -1]\r\n\r\ndef first_bfs(row, col):\r\n    queue = deque()   # bfs용 큐\r\n    queue.append((row, col))\r\n\r\n    visited[row][col] = idx\r\n\r\n    cnt = 1\r\n    while queue:\r\n        row, col = queue.popleft()\r\n\r\n        for k in range(4):\r\n            nr, nc = row + dx[k], col + dy[k]\r\n            if 0 <= nr < a and 0 <= nc < b and not visited[nr][nc] and map2[nr][nc] == 0:\r\n                queue.append((nr, nc))\r\n                cnt += 1\r\n                visited[nr][nc] = idx\r\n                # print(\"함수 내부의 visited[nr][nc] = \", visited[nr][nc])\r\n\r\n    return cnt\r\n\r\na, b = map(int, input().split())\r\n\r\nmap2 = [list(map(int, input())) for _ in range(a)]\r\nvisited = [[0] * b for _ in range(a)]\r\ncount_num = [[0] * b for _ in range(a)]\r\n\r\nidx = 0\r\nidx_value = dict()\r\n\r\nfor i in range(a):\r\n    for j in range(b):\r\n        if map2[i][j] == 0 and visited[i][j] == 0:  # 길 -> bfs로 연결된 길의 길이 확인 후 저장\r\n            idx += 1  # 길 번호\r\n            idx_value[idx] = first_bfs(i, j)\r\n#             print('idx = ', idx)\r\n#             print('idx_value = ', idx_value[idx])\r\n# print('-----------------------------------')\r\n# print(\"idx_value = \", idx_value)\r\n# print()\r\n# print(\"visited = \", visited)\r\n# print('-----------------------------------')\r\nfor i in range(a):\r\n    for j in range(b):\r\n        if visited[i][j] != 0:\r\n            count_num[i][j] = idx_value[visited[i][j]]\r\n\r\n# print(count_num)\r\n\r\nfor i in range(a):\r\n    for j in range(b):\r\n        if map2[i][j] == 1:\r\n            road_idx = set()\r\n            ans = 1\r\n            for p in range(4):\r\n                new_row, new_col = i + dx[p], j + dy[p]\r\n                if 0 <= new_row < a and 0 <= new_col < b and count_num[new_row][new_col] != 0 and visited[new_row][new_col] not in road_idx:\r\n                    road_idx.add(visited[new_row][new_col])\r\n                    ans += count_num[new_row][new_col]\r\n            map2[i][j] = ans % 10\r\n# print('------------ ans ----------------')\r\nfor i in range(a):\r\n    print(\"\".join(map(str, map2[i])))",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "a2e0a2ce-56e1-400b-80d9-3c521476a87c": {
      "id": "a2e0a2ce-56e1-400b-80d9-3c521476a87c",
      "value": [
        {
          "_id": "f76a57ad-ee6e-4a9f-bd36-fcabfff5c139",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "a65273ca-fdb9-46df-866d-d1ccaaf19cfb": {
      "id": "a65273ca-fdb9-46df-866d-d1ccaaf19cfb",
      "value": [
        {
          "_id": "5e4b3d50-c0ff-43c8-8e73-85427ac9ceec",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "ab582ab2-3c37-4cf3-9434-50e3502b9ac4": {
      "id": "ab582ab2-3c37-4cf3-9434-50e3502b9ac4",
      "value": [
        {
          "_id": "517d4643-580a-4b7a-b48d-d159127eb04d",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "b4b4009d-a8c1-47fc-a5ae-602b1db09e2a": {
      "id": "b4b4009d-a8c1-47fc-a5ae-602b1db09e2a",
      "value": [
        {
          "_id": "d4dba4c5-36c6-40a2-9944-eb9971ebe35a",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "bad6a822-afc3-4bbe-8e65-78618c9c5227": {
      "id": "bad6a822-afc3-4bbe-8e65-78618c9c5227",
      "value": [
        {
          "_id": "8ffcf506-fc4c-477e-94c4-442e5e8cec68",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "e7be24c1-9b0c-4062-8d4e-021e99dba482": {
      "id": "e7be24c1-9b0c-4062-8d4e-021e99dba482",
      "value": [
        {
          "_id": "148dab4e-634d-4248-8320-b0a815b1859c",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "eaa70055-62e3-43dc-875d-3bf41b5b923c": {
      "id": "eaa70055-62e3-43dc-875d-3bf41b5b923c",
      "value": [
        {
          "_id": "dcad5891-892e-4b11-b8bf-22c35f35130a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\Algo\\pythonProject\\main.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 9,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646a4b3cd20b05181535211"
  },
  "directoryId": 148,
  "lastOrder": 0,
  "content": {
    "0bc3181a-05bc-4ac8-ab71-03b11fb40c63": {
      "id": "0bc3181a-05bc-4ac8-ab71-03b11fb40c63",
      "value": [
        {
          "_id": "44ffda42-0ed8-4deb-923e-2d06f2b35289",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646a4b3cd20b05181535212"
  },
  "directoryId": 149,
  "lastOrder": 0,
  "content": {
    "0bc3181a-05bc-4ac8-ab71-03b11fb40c63": {
      "id": "0bc3181a-05bc-4ac8-ab71-03b11fb40c63",
      "value": [
        {
          "_id": "44ffda42-0ed8-4deb-923e-2d06f2b35289",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646a4b3cd20b05181535213"
  },
  "directoryId": 151,
  "lastOrder": 15,
  "content": {
    "28758f33-0ba1-43d9-bfc4-4adc3ed2e343": {
      "id": "28758f33-0ba1-43d9-bfc4-4adc3ed2e343",
      "value": [
        {
          "_id": "e67d724b-df9e-415a-b818-94ed07960079",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "3daca8e0-1e85-48c3-a231-7e9773daf4dd": {
      "id": "3daca8e0-1e85-48c3-a231-7e9773daf4dd",
      "value": [
        {
          "_id": "ace3fb1f-01b2-4a8d-a62b-87b3408098bb",
          "type": "code",
          "children": [
            {
              "text": "Reusing configuration cache.\r\n> Task :initializeIntelliJPlugin SKIPPED\r\n> Task :patchPluginXml UP-TO-DATE\r\n> Task :processResources UP-TO-DATE\r\n\r\n> Task :verifyPluginConfiguration\r\n[gradle-intellij-plugin :verifyPluginConfiguration] The following plugin configuration issues were found:\n- The 'since-build' property is lower than the target IntelliJ Platform major version: 231 < 233.\nSee: https://jb.gg/intellij-platform-versions\r\n\r\n> Task :compileJava\r\n> Task :classes\r\n> Task :instrumentCode\r\n> Task :jar\r\n> Task :instrumentedJar\r\n> Task :prepareSandbox\r\n\r\n> Task :runIde\r\nCompileCommand: exclude com/intellij/openapi/vfs/impl/FilePartNodeRoot.trieDescend bool exclude = true\n2024-05-17 12:27:22,987 [    320]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.intellij.ae.database.core.baseEvents.fus.AddStatisticsEventLogListenerTemporary, plugin=com.jetbrains.ae.database)\r\n2024-05-17 12:27:22,988 [    321]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.jetbrains.rdserver.statistics.BackendStatisticsManager, plugin=com.jetbrains.codeWithMe)\r\n2024-05-17 12:27:23,350 [    683]   WARN - #c.i.i.u.l.LafManagerImpl - VersionControl.Log.Commit.rowHeight = null in LookAndFeelThemeAdapter; it may lead to performance degradation\r\n2024-05-17 12:27:23,512 [    845]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.search.FilenameIndex initializer requests com.intellij.ide.plugins.PluginUtil instance\r\n2024-05-17 12:27:24,360 [   1693]   WARN - #c.i.o.v.n.p.d.e.DurableEnumeratorFactory - [enumerator.mmapped]: .valueToId map is out-of-sync with .valuesLog data -> rebuilding it\r\n2024-05-17 12:27:24,394 [   1727]   WARN - #c.i.s.ComponentManagerImpl - org.jetbrains.kotlin.idea.gradleJava.scripting.roots.GradleBuildRootDataSerializer initializer requests com.intellij.util.gist.storage.GistStorage instance\r\n2024-05-17 12:27:25,030 [   2363]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.LanguageSubstitutors initializer requests com.intellij.psi.LanguageSubstitutors instance\r\n2024-05-17 12:27:25,050 [   2383]   WARN - #c.i.s.ComponentManagerImpl - org.zmlx.hg4idea.provider.HgChangeProvider initializer requests com.intellij.openapi.vcs.FileStatusFactory instance\r\n2024-05-17 12:27:26,010 [   3343]   WARN - #c.i.o.a.i.ActionUpdater - 565 ms to grab EDT for ToolWindowHeader$2#Update@ToolwindowTitle (com.intellij.toolWindow.ToolWindowHeader$2)\r\n2024-05-17 12:27:26,439 [   3772]   WARN - #o.j.p.t.TextMateService - Cannot find referenced file `./language-configuration.json` in bundle `C:\\Users\\SSAFY\\.gradle\\caches\\modules-2\\files-2.1\\com.jetbrains.intellij.idea\\ideaIC\\2023.3.4\\135ab387b2066e14bd52d6ee5c827a7fbebe7078\\ideaIC-2023.3.4\\plugins\\textmate\\lib\\bundles\\mdx`\r\n2024-05-17 12:27:27,101 [   4434]   WARN - javafx - Unsupported JavaFX configuration: classes were loaded from 'unnamed module @550c04a4'\r\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\r\nSLF4J: Defaulting to no-operation (NOP) logger implementation\r\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\r\n\r\n> Task :runIde FAILED\r\n> Task :classpathIndexCleanup FAILED\r\n\r\nFAILURE: Build completed with 2 failures.\r\n\r\n1: Task failed with an exception.\r\n-----------\r\n* What went wrong:\r\nExecution failed for task ':runIde'.\r\n> Build cancelled while executing task ':runIde'\r\n\r\n* Try:\r\n> Run with --stacktrace option to get the stack trace.\r\n> Run with --info or --debug option to get more log output.\r\n> Run with --scan to get full insights.\r\n> Get more help at https://help.gradle.org.\r\n==============================================================================\r\n\r\n2: Task failed with an exception.\r\n-----------\r\n* What went wrong:\r\nExecution failed for task ':classpathIndexCleanup'.\r\n> Build cancelled while executing task ':classpathIndexCleanup'\r\n\r\n* Try:\r\n> Run with --stacktrace option to get the stack trace.\r\n> Run with --info or --debug option to get more log output.\r\n> Run with --scan to get full insights.\r\n> Get more help at https://help.gradle.org.\r\n==============================================================================\r\n\r\nBUILD FAILED in 49s\r\n10 actionable tasks: 8 executed, 2 up-to-date\r\nConfiguration cache entry reused.\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "425fa4a4-1f97-4f21-bef3-849919cf9490": {
      "id": "425fa4a4-1f97-4f21-bef3-849919cf9490",
      "value": [
        {
          "_id": "51491630-11d4-42f6-a60c-27095ff544b3",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!!@@@#$@@@@!@!@!@!!@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "4ff28afc-ae16-4cdd-9e6d-d8b2f779c265": {
      "id": "4ff28afc-ae16-4cdd-9e6d-d8b2f779c265",
      "value": [
        {
          "_id": "58cbe1b5-b082-42de-b865-5824779ed946",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "810872c6-1f44-4b14-81ff-a056229e2d3e": {
      "id": "810872c6-1f44-4b14-81ff-a056229e2d3e",
      "value": [
        {
          "_id": "64597124-ab75-4d43-bf20-6d58b4da71f0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "9fe044b9-c99e-4649-85b5-be2dc6e5b82e": {
      "id": "9fe044b9-c99e-4649-85b5-be2dc6e5b82e",
      "value": [
        {
          "_id": "f418c0b2-a210-4169-b0bc-3e8b23507f10",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "a9ca40a8-1a62-456f-b2f4-2aff3cfb8f6e": {
      "id": "a9ca40a8-1a62-456f-b2f4-2aff3cfb8f6e",
      "value": [
        {
          "_id": "1b8a0ed7-32d8-4936-8504-446ea461cbb6",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "ab586c4a-ec46-4ddc-a86b-aafe779ea4e0": {
      "id": "ab586c4a-ec46-4ddc-a86b-aafe779ea4e0",
      "value": [
        {
          "_id": "a1922df1-5664-4eb3-b1b3-3d5afe4a0585",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CodeListener.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "afe4516c-fb44-4b6c-8eb7-a564ca4e2b79": {
      "id": "afe4516c-fb44-4b6c-8eb7-a564ca4e2b79",
      "value": [
        {
          "_id": "12f77589-8703-45ee-a269-649f17175321",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.intellij.execution.ExecutionListener;\nimport com.intellij.execution.process.ProcessEvent;\nimport com.intellij.execution.process.ProcessHandler;\nimport com.intellij.execution.process.ProcessListener;\nimport com.intellij.execution.process.ProcessOutputTypes;\nimport com.intellij.execution.runners.ExecutionEnvironment;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.util.Key;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.tracker.dto.BuildResultInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ErrorFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ModifiedFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.RequestDto;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class CodeListener implements ExecutionListener {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n    private List<ErrorFileInfo> errorFiles = new ArrayList<>();\n    private Map<String, ProjectInfo> currentProjectInfo = new HashMap<>();\n    private boolean capturingError;\n    private boolean errorFlag;\n\n    public CodeListener(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void processStarted(@NotNull String executorId, @NotNull ExecutionEnvironment env, @NotNull ProcessHandler handler) {\n        CompletableFuture.runAsync(() -> getCurrentProject())\n                .thenRun(this::initializeProjectTracker)\n                .thenRun(() -> {\n                    // 파일 연동이 되어있다면\n                    if (ConnectedFileManager.getInstance().getDirectoryId() != 0L) {\n                        startSignal();\n                    } else {\n                        Platform.runLater(() -> {\n                            Alert alert = AlertHelper.makeAlert(\n                                    Alert.AlertType.WARNING,\n                                    \" Ododoc\",\n                                    \"파일 연동 오류\",\n                                    \"파일이 연동되지 않았습니다.\\n해당 결과는 새로 생성된 파일에 기록됩니다.\",\n                                    \"/image/button/icon.png\"\n                            );\n                            alert.showAndWait();\n                        });\n                    }\n\n                    handler.addProcessListener(new OdodocProcessListener());\n                });\n    }\n\n    private void getCurrentProject() {\n        psiFiles = new ArrayList<>();\n        currentProjectInfo.clear();\n        ApplicationManager.getApplication().executeOnPooledThread(() -> {\n            ApplicationManager.getApplication().runReadAction(() -> {\n                GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n                Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n                PsiManager psiManager = PsiManager.getInstance(project);\n                psiFiles = files.stream()\n                        .map(psiManager::findFile)\n                        .collect(Collectors.toList());\n\n                psiFiles.forEach(file ->\n                        currentProjectInfo.put(file.getName(), new ProjectInfo(file, \"\", file.getText())));\n            });\n        });\n    }\n\n    private void initializeProjectTracker() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.currentHashStatus(project);\n    }\n\n    private void startSignal() {\n        RequestDto requestDto = new RequestDto();\n        requestDto.setSourceApplication(\"INTELLIJ\");\n        requestDto.setDataType(\"SIGNAL\");\n        requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n        requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n        requestDto.setTimestamp(LocalDateTime.now());\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            String output = objectMapper.writeValueAsString(requestDto);\n            BuildResultSender.sendMessage(output);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private List<ModifiedFileInfo> getModifiedFiles() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n\n        Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n        Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n        String allBeforeProjectStatus = projectTracker.getAllBeforeProjectStatus();\n        String allCurrentProjectStatus = projectTracker.getAllCurrentProjectStatus();\n\n        String before, current= \"\";\n        boolean isChange = false; // 변경된 파일이 있는지 확인\n        List<ModifiedFileInfo> modifiedFileInfoList = new ArrayList<>();\n\n        // 파일을 추가하거나 삭제하지 않은 경우\n        if(allBeforeProjectStatus.equals(allCurrentProjectStatus)){\n            for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n                before = entry.getValue().getHash();\n                current = currentProjectStatus.get(entry.getKey()).getHash();\n                // 바뀐 파일이라면 해당 파일\n                if(!before.equals(current)){\n                    isChange = true;\n                    PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                    addModifiedFile(modifiedFileInfoList, modifiedFile);\n                }\n            }\n        }\n\n        // 파일을 추가하거나 삭제한 경우\n        else{\n            int beforeSize = beforeProjectStatus.size();\n            int currentSize = currentProjectStatus.size();\n\n            // 추가한 경우\n            if(beforeSize <= currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : currentProjectStatus.entrySet()){\n\n                    // 추가된 파일이 아닐 경우\n                    if(beforeProjectStatus.containsKey(entry.getKey())){\n                        before = beforeProjectStatus.get(entry.getKey()).getHash();\n                        current = entry.getValue().getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = entry.getValue().getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 추가된 파일일 경우\n                    else{\n                        isChange = true;\n                        PsiFile modifiedFile = entry.getValue().getPsiFile();\n                        addModifiedFile(modifiedFileInfoList, modifiedFile);\n                    }\n\n                }\n            }\n            // 삭제한 경우\n            else if(beforeSize > currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n\n                    // 삭제된 파일이 아닐 경우\n                    if(currentProjectStatus.containsKey(entry.getKey())){\n                        before = entry.getValue().getHash();\n                        current = currentProjectStatus.get(entry.getKey()).getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 삭제된 파일일 경우\n                    else{\n                        isChange = true;\n                    }\n\n                }\n            }\n        }\n\n        // 변경된 파일이 있을 경우 현재 상태를 전 상태로 돌리기 (깊은 복사 )\n        if (isChange){\n            deepCopy(currentProjectStatus);\n        }\n\n        return modifiedFileInfoList;\n\n    }\n\n    private void addModifiedFile(List<ModifiedFileInfo> modifiedFileInfoList, PsiFile modifiedFile) {\n        String fileName = modifiedFile.getName();\n        String sourceCode = modifiedFile.getText();\n        modifiedFileInfoList.add(new ModifiedFileInfo(fileName, sourceCode));\n    }\n\n    private void deepCopy(Map<String, ProjectInfo> currentProjectStatus) {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.setBeforeProjectStatus(\n                currentProjectStatus.entrySet().stream()\n                        .collect(Collectors.toMap(Map.Entry::getKey, e -> {\n                            try {\n                                return (ProjectInfo) e.getValue().clone();\n                            } catch (CloneNotSupportedException ex) {\n                                throw new RuntimeException(ex);\n                            }\n                        }))\n        );\n    }\n\n    private class OdodocProcessListener implements ProcessListener {\n        StringBuilder allOutputLog = new StringBuilder();\n        StringBuilder errorLog = new StringBuilder();\n        StringBuilder stdOutLog = new StringBuilder();\n\n        @Override\n        public void processTerminated(@NotNull ProcessEvent event) {\n            RequestDto requestDto = new RequestDto();\n            BuildResultInfo buildResultInfo = new BuildResultInfo();\n\n            requestDto.setSourceApplication(\"INTELLIJ\");\n            requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n            requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n            requestDto.setTimestamp(LocalDateTime.now());\n\n            if (errorFlag) {\n                buildResultInfo.setDetails(errorLog.toString());\n                if (errorFiles.size() > 1) {\n                    buildResultInfo.setErrorFile(errorFiles.get(0));\n                }\n                buildResultInfo.setModifiedFiles(getModifiedFiles());\n\n                requestDto.setDataType(\"ERROR\");\n                requestDto.setContent(buildResultInfo);\n            } else {\n                buildResultInfo.setDetails(stdOutLog.toString());\n\n                List<ModifiedFileInfo> temp = getModifiedFiles();\n                buildResultInfo.setModifiedFiles(temp);\n\n                requestDto.setDataType(\"OUTPUT\");\n                requestDto.setContent(buildResultInfo);\n            }\n\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                String output = objectMapper.writeValueAsString(requestDto);\n                System.out.println(output);\n                BuildResultSender.sendMessage(output);\n            } catch (JsonProcessingException e) {\n                throw new RuntimeException(e);\n            }\n\n            allOutputLog.setLength(0);\n            errorLog.setLength(0);\n            stdOutLog.setLength(0);\n            errorFiles = new ArrayList<>();\n            errorFlag = false;\n            capturingError = false;\n        }\n\n        @Override\n        public void onTextAvailable(@NotNull ProcessEvent event, @NotNull Key outputType) {\n            String text = event.getText();\n            if (outputType.equals(ProcessOutputTypes.STDERR)) {\n                errorFlag = true;\n                errorLog.append(text);\n            } else if (outputType.equals(ProcessOutputTypes.STDOUT)) {\n                if (text.contains(\"ERROR\")) {\n                    errorFlag = true;\n                    errorLog.append(text);\n                    capturingError = true;\n                }\n                else if (capturingError) {\n                    if (text.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}\\\\+\\\\d{2}:\\\\d{2} .*\")) {\n                        capturingError = false;\n                    }\n                    else {\n                        System.out.println(\"STDOUT 에러 : \" + text);\n                        Pattern pattern = Pattern.compile(\"\\\\(([^)]+):(\\\\d+)\\\\)\");\n                        Matcher matcher = pattern.matcher(text);\n                        if (matcher.find()) {\n                            if (currentProjectInfo.containsKey(matcher.group(1))) {\n                                ProjectInfo projectInfo = currentProjectInfo.get(matcher.group(1));\n                                String fileName = projectInfo.getPsiFile().getName();\n                                String sourceCode = projectInfo.getSourceCode();\n                                int line = Integer.parseInt(matcher.group(2));\n                                errorFiles.add(new ErrorFileInfo(fileName, sourceCode, line));\n                            }\n                        }\n                        errorLog.append(text);\n                    }\n                }\n                else {\n                    stdOutLog.append(text);\n                }\n            }\n            allOutputLog.append(text);\n        }\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "c33bce1c-ff6a-49ac-a4fc-645c4f518c40": {
      "id": "c33bce1c-ff6a-49ac-a4fc-645c4f518c40",
      "value": [
        {
          "_id": "c8ba6c9d-0ff5-4022-b900-08b18ebd080d",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n              \n\n       Starting DemoApplication using Java 21.0.2 with PID 4356 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n       No active profile set, falling back to 1 default profile: \"default\"\n       Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n       For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n       Tomcat initialized with port 8080 (http)\n       Starting service [Tomcat]\n       Starting Servlet engine: [Apache Tomcat/10.1.20]\n       Initializing Spring embedded WebApplicationContext\n       Root WebApplicationContext: initialization completed in 692 ms\n       LiveReload server is running on port 35729\n       Tomcat started on port 8080 (http) with context path ''\n       Started DemoApplication in 1.279 seconds (process running for 1.684)\n       Initializing Spring DispatcherServlet 'dispatcherServlet'\n       Initializing Servlet 'dispatcherServlet'\n       Completed initialization in 0 ms\n       Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "c786f3dc-e5ab-429a-9907-a74375ce51f9": {
      "id": "c786f3dc-e5ab-429a-9907-a74375ce51f9",
      "value": [
        {
          "_id": "f3486319-6be1-4930-aee0-9cae02d78026",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "c92cd620-2cbc-42be-8a08-8dd5fd66a8f1": {
      "id": "c92cd620-2cbc-42be-8a08-8dd5fd66a8f1",
      "value": [
        {
          "_id": "7cf4cd7c-b79c-44d7-9b5e-10ab860756a9",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "dbeaad66-f315-4ae3-b58e-699c472e71b5": {
      "id": "dbeaad66-f315-4ae3-b58e-699c472e71b5",
      "value": [
        {
          "_id": "30c916f9-4331-4d0f-a3f6-fb1e2db951e1",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "debd873a-f6b4-4bd2-b047-61f6bb267ec9": {
      "id": "debd873a-f6b4-4bd2-b047-61f6bb267ec9",
      "value": [
        {
          "_id": "3fb8ba96-9cb6-4fdb-a02e-47d9c832d2bd",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "f27775f8-a3fa-4cf5-b7a3-940964bda519": {
      "id": "f27775f8-a3fa-4cf5-b7a3-940964bda519",
      "value": [
        {
          "_id": "7a720fbf-943f-48e1-90fa-68fb8d1e8137",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "fcb2b17c-8a0e-41a0-8587-4e8c012ddc82": {
      "id": "fcb2b17c-8a0e-41a0-8587-4e8c012ddc82",
      "value": [
        {
          "_id": "212c4566-8cf0-4b2c-95dd-e2661cc00cf4",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 9,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646a4b3cd20b05181535214"
  },
  "directoryId": 199,
  "lastOrder": 0,
  "content": {
    "c87bb25b-f2bd-4179-8a55-e856fb0b7b73": {
      "id": "c87bb25b-f2bd-4179-8a55-e856fb0b7b73",
      "value": [
        {
          "_id": "8677aa03-6224-4d4c-a049-a650c33eaba7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646abbbcd20b05181535216"
  },
  "directoryId": 201,
  "lastOrder": 14,
  "content": {
    "08382786-f861-491d-a4aa-335444ed03d2": {
      "id": "08382786-f861-491d-a4aa-335444ed03d2",
      "value": [
        {
          "_id": "aba4865c-c7c3-4fa6-b37d-6662b6f67d7e",
          "type": "paragraph",
          "children": [
            {
              "text": "dldcbkadlcmchamckdslngamdsna",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "18a73f7a-c87f-46fe-b425-1615f08814fd": {
      "id": "18a73f7a-c87f-46fe-b425-1615f08814fd",
      "value": [
        {
          "_id": "ab5a83a5-2a58-479b-99f0-4dcd6c0a5d5b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "1c119c2a-7f64-4465-9872-ed09f9bf41e9": {
      "id": "1c119c2a-7f64-4465-9872-ed09f9bf41e9",
      "value": [
        {
          "_id": "0c5e9e3d-bbb4-45f4-bc67-00e81d144d38",
          "type": "paragraph",
          "children": [
            {
              "text": "ccddvblkaxxncmcbcclcv,ballg",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "21f7af83-62bc-421a-874b-1cbf909fb050": {
      "id": "21f7af83-62bc-421a-874b-1cbf909fb050",
      "value": [
        {
          "_id": "be19b6de-f330-421b-a481-681848741453",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "2464c97c-7cb7-4bfb-aa40-ddb5b1470c68": {
      "id": "2464c97c-7cb7-4bfb-aa40-ddb5b1470c68",
      "value": [
        {
          "_id": "f3e33428-e96f-4acc-83ff-19eccb12aef1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "49dba90c-971f-44d9-940c-fbb70375509f": {
      "id": "49dba90c-971f-44d9-940c-fbb70375509f",
      "value": [
        {
          "_id": "68aeae24-7a65-41f6-9d42-a7d0961a9c31",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "54bc7372-cb31-47fc-99d9-27a4bcb4eefc": {
      "id": "54bc7372-cb31-47fc-99d9-27a4bcb4eefc",
      "value": [
        {
          "_id": "7261839e-bac4-432e-a261-bdf0d153d1a1",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "613a6e6f-f764-45c5-9f27-7bb18f633225": {
      "id": "613a6e6f-f764-45c5-9f27-7bb18f633225",
      "value": [
        {
          "_id": "c51ca2ba-7962-4e22-b67d-006cbe92405b",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\n    return a + b\njgstffg\n\nanswer = plus(1, 2)\n\nprint(answer)\n\nfor i in range(10):\n    print(i)\n\nprint(\"Hello World\")\nprint(\"????\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "6b0c7e91-0845-4daa-a563-fc1614d279d5": {
      "id": "6b0c7e91-0845-4daa-a563-fc1614d279d5",
      "value": [
        {
          "_id": "95a01397-284d-4786-806b-01b6274dd6b0",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 13\n\n    print(\"????\"\n\n         ^\nprint()\nSyntaxError: '(' was never closed\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "7633f836-bd4f-4f9b-8d3b-51f8d0fc047a": {
      "id": "7633f836-bd4f-4f9b-8d3b-51f8d0fc047a",
      "value": [
        {
          "_id": "d4a3ff54-05d0-4dbd-b5be-cf286bdbbf27",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "a31fb026-e125-45fd-b0f1-d60629b0b6d1": {
      "id": "a31fb026-e125-45fd-b0f1-d60629b0b6d1",
      "value": [
        {
          "_id": "3ff9f9fd-70b4-41ab-8ac4-99b4145f3645",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\n    return a + b\n\n\nanswer = plus(1, 2)\n  cnaldclckcnvlaang\nprint(answer)\n\nfor i in range(10):\n    print(i)\n\nprint(\"Hello World\")\nprint(\"????\")",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "b147c784-e133-4acf-999d-125a5d010ec7": {
      "id": "b147c784-e133-4acf-999d-125a5d010ec7",
      "value": [
        {
          "_id": "b8f0a6fd-921a-4ec0-af9b-fb209efea159",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nSyntaxError: '(' was never closed in ex.py line 13.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "b15a6ff9-3353-4afd-b054-e8a9b68a9dbc": {
      "id": "b15a6ff9-3353-4afd-b054-e8a9b68a9dbc",
      "value": [
        {
          "_id": "5e17edcf-4960-4bac-ba15-d7a32d50b70d",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "c5bee228-bde3-4a24-951a-ac93ac96099a": {
      "id": "c5bee228-bde3-4a24-951a-ac93ac96099a",
      "value": [
        {
          "_id": "677d42ba-3cbf-4870-a12e-88d0958864d6",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "e0654852-2930-474e-af64-9022ccf5fb30": {
      "id": "e0654852-2930-474e-af64-9022ccf5fb30",
      "value": [
        {
          "_id": "68789dbd-388e-4a15-a357-6db6d667caaf",
          "type": "paragraph",
          "children": [
            {
              "text": "안녕안녕x",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646af162da839666702e8ef"
  },
  "directoryId": 203,
  "lastOrder": 4,
  "content": {
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c43": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "2번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c46": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "3번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c47": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "4번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c48": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "5번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c49": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c40",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "1번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646b1731aefc12e8e42c7be"
  },
  "directoryId": 205,
  "lastOrder": 0,
  "content": {
    "9201dee7-da94-4d04-8a73-ab106ce2627c": {
      "id": "9201dee7-da94-4d04-8a73-ab106ce2627c",
      "value": [
        {
          "_id": "d8d0d5f0-810d-4818-beaa-e5ddb85cd1ce",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646b1731aefc12e8e42c7bf"
  },
  "directoryId": 212,
  "lastOrder": 0,
  "content": {
    "9201dee7-da94-4d04-8a73-ab106ce2627c": {
      "id": "9201dee7-da94-4d04-8a73-ab106ce2627c",
      "value": [
        {
          "_id": "d8d0d5f0-810d-4818-beaa-e5ddb85cd1ce",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646b6d255b9c66e648cd998"
  },
  "directoryId": 59,
  "lastOrder": 11,
  "content": {
    "6efbccb4-8a84-4c0d-a92d-b91222e18a04": {
      "id": "6efbccb4-8a84-4c0d-a92d-b91222e18a04",
      "value": [
        {
          "_id": "8d2c1a22-7fb9-47f3-b3cd-fae3b487824f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c40": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c40",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "1번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "5번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "d695e364-9278-4d8f-83a6-9ee3a21ec494": {
      "id": "d695e364-9278-4d8f-83a6-9ee3a21ec494",
      "value": [
        {
          "_id": "5cd192e8-b092-47db-a795-f13fc3659ca5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646be85a31e444265412c05"
  },
  "directoryId": 206,
  "lastOrder": 0,
  "content": {
    "22605e75-a03f-4642-ad91-bbd976aa6691": {
      "id": "22605e75-a03f-4642-ad91-bbd976aa6691",
      "value": [
        {
          "_id": "2ab91147-f06c-471c-8dd3-788b986a7f59",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646cee7163656133570c4be"
  },
  "directoryId": 215,
  "lastOrder": 7,
  "content": {
    "0224e2d1-438c-43a8-9628-ec2e24472aaf": {
      "id": "0224e2d1-438c-43a8-9628-ec2e24472aaf",
      "value": [
        {
          "_id": "c899681c-cf7e-4609-b8f1-3b63585b935b",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "4e455432-635f-49ba-b779-e8bd5a04efd7": {
      "id": "4e455432-635f-49ba-b779-e8bd5a04efd7",
      "value": [
        {
          "_id": "5176fdea-915a-49ca-8802-ebdfbb86c2a7",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "4fc5902d-8630-4f24-b23b-7446d45b055a": {
      "id": "4fc5902d-8630-4f24-b23b-7446d45b055a",
      "value": [
        {
          "_id": "ddf13cbf-ff50-4cdc-a52c-5a9558edfea0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "52e2d17a-d52e-415e-b492-4e83501b37d0": {
      "id": "52e2d17a-d52e-415e-b492-4e83501b37d0",
      "value": [
        {
          "_id": "0c550179-8611-468d-83fc-75bbf3b5f846",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!!@@@#$@@@@!@!@@!@!!@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "97897e08-d4aa-475d-a001-2e06f553970b": {
      "id": "97897e08-d4aa-475d-a001-2e06f553970b",
      "value": [
        {
          "_id": "a28e9f52-a4b7-4a12-85f3-976525b12d06",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.5)\n\n2024-05-17T12:19:38.309+09:00  INFO 14996 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Starting DemoApplication using Java 21.0.3 with PID 14996 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n2024-05-17T12:19:38.313+09:00  INFO 14996 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: \"default\"\n2024-05-17T12:19:38.366+09:00  INFO 14996 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n2024-05-17T12:19:38.366+09:00  INFO 14996 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n2024-05-17T12:19:39.237+09:00  INFO 14996 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)\n2024-05-17T12:19:39.248+09:00  INFO 14996 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2024-05-17T12:19:39.248+09:00  INFO 14996 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]\n2024-05-17T12:19:39.282+09:00  INFO 14996 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2024-05-17T12:19:39.282+09:00  INFO 14996 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 916 ms\n2024-05-17T12:19:39.545+09:00  INFO 14996 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729\n2024-05-17T12:19:39.576+09:00  INFO 14996 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''\n2024-05-17T12:19:39.583+09:00  INFO 14996 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Started DemoApplication in 1.64 seconds (process running for 2.173)\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "ae5dbdcb-736d-4af4-82dd-57567f605dda": {
      "id": "ae5dbdcb-736d-4af4-82dd-57567f605dda",
      "value": [
        {
          "_id": "edb130d9-680f-43dc-892d-805f3a198b40",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "b80c417d-9622-4702-86e1-58c4a3620252": {
      "id": "b80c417d-9622-4702-86e1-58c4a3620252",
      "value": [
        {
          "_id": "3c924354-e850-4adc-bbbb-afcacd0911e8",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "be98bb2c-7a4e-4ccf-ae9a-c13267c59b7f": {
      "id": "be98bb2c-7a4e-4ccf-ae9a-c13267c59b7f",
      "value": [
        {
          "_id": "2c6e2182-59ab-40ce-8eeb-71b30eeabbcb",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646d751f50f95271f14be7e"
  },
  "directoryId": 207,
  "lastOrder": 0,
  "content": {
    "e415529a-f72f-42c1-af43-259dd4e5bab9": {
      "id": "e415529a-f72f-42c1-af43-259dd4e5bab9",
      "value": [
        {
          "_id": "ab088695-5543-4698-9698-9a23212b4f0c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646d751f50f95271f14be7f"
  },
  "directoryId": 214,
  "lastOrder": 0,
  "content": {
    "e415529a-f72f-42c1-af43-259dd4e5bab9": {
      "id": "e415529a-f72f-42c1-af43-259dd4e5bab9",
      "value": [
        {
          "_id": "ab088695-5543-4698-9698-9a23212b4f0c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646daa6a31e444265412c07"
  },
  "directoryId": 219,
  "lastOrder": 0,
  "content": {
    "9d0c0c17-5174-4f7d-8d86-cf491d3e48c6": {
      "id": "9d0c0c17-5174-4f7d-8d86-cf491d3e48c6",
      "value": [
        {
          "_id": "2aea4c3a-feee-4968-872f-bc96aed1ccf9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646dce8b7f9d82e1c7b5a55"
  },
  "directoryId": 220,
  "lastOrder": 7,
  "content": {
    "05726ae0-c55f-42de-9de4-9e79ffbf7fb8": {
      "id": "05726ae0-c55f-42de-9de4-9e79ffbf7fb8",
      "value": [
        {
          "_id": "c6d3b85a-147b-4d30-b232-5e06602316dd",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": true,
              "code": false
            },
            {
              "text": "ㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "361934d0-da9e-4edc-851b-f0508573c290": {
      "id": "361934d0-da9e-4edc-851b-f0508573c290",
      "value": [
        {
          "_id": "4e6fa927-5147-42e8-90bd-87765e402cff",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "5d0e5ef3-42d6-44ed-a1de-90ec223b5f48": {
      "id": "5d0e5ef3-42d6-44ed-a1de-90ec223b5f48",
      "value": [
        {
          "_id": "c77bcd7c-e323-491a-839a-75e4b3bb4805",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": true
            },
            {
              "text": "ㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "912279cb-1a85-4f08-aabf-c01f22126979": {
      "id": "912279cb-1a85-4f08-aabf-c01f22126979",
      "value": [
        {
          "_id": "2303c6cc-f67d-4aea-9b20-396377f8f5e6",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "ㅎㅎㅎㅎㅎㅎ",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "ㅎㅎㅎㅎㅎㅎ"
              }
            },
            {
              "text": "ㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "aac64949-0789-45d7-b2e5-acc4398751cd": {
      "id": "aac64949-0789-45d7-b2e5-acc4398751cd",
      "value": [
        {
          "_id": "77c42fbe-8996-46ad-b5d0-974ba94e4da9",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": true,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "ㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "b4f9178d-ad23-48a7-ae33-c36132c26fe4": {
      "id": "b4f9178d-ad23-48a7-ae33-c36132c26fe4",
      "value": [
        {
          "_id": "f8d338a1-c7e9-4c2f-b1e7-a89bb40b322c",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "highlight": {
                "color": "#B35588"
              }
            },
            {
              "text": "ㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "c7562e87-aa21-4528-883b-fe20b393008d": {
      "id": "c7562e87-aa21-4528-883b-fe20b393008d",
      "value": [
        {
          "_id": "bb544b90-2477-4e68-b865-2b88076eeb6e",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": true,
              "strike": false,
              "code": false
            },
            {
              "text": "ㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "cb013ad8-0fa0-4515-84c7-9d36e6d0cd52": {
      "id": "cb013ad8-0fa0-4515-84c7-9d36e6d0cd52",
      "value": [
        {
          "_id": "55ea9d40-2db6-4c94-9fa4-06c66fbf3ea9",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "text",
              "props": {
                "checked": false
              }
            },
            {
              "text": "ㅎㅎㅎㅎㅎㅎ",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "text",
              "props": {
                "checked": false
              }
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646dce8b7f9d82e1c7b5a56"
  },
  "directoryId": 221,
  "lastOrder": 0,
  "content": {
    "cb013ad8-0fa0-4515-84c7-9d36e6d0cd52": {
      "id": "cb013ad8-0fa0-4515-84c7-9d36e6d0cd52",
      "value": [
        {
          "_id": "55ea9d40-2db6-4c94-9fa4-06c66fbf3ea9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646df96ac926e2cbfe33083"
  },
  "directoryId": 234,
  "lastOrder": 0,
  "content": {
    "9c79ac4e-4230-4a8a-a9ff-2b341849a243": {
      "id": "9c79ac4e-4230-4a8a-a9ff-2b341849a243",
      "value": [
        {
          "_id": "cf55c4a9-0848-4981-879e-9c7fc568d398",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646df96ac926e2cbfe33084"
  },
  "directoryId": 235,
  "lastOrder": 4,
  "content": {
    "15133ada-de72-43f4-8de6-a6d392e2a983": {
      "id": "15133ada-de72-43f4-8de6-a6d392e2a983",
      "value": [
        {
          "_id": "11f3c477-aeac-4dff-b696-d7390cc8d569",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://tape22.tistory.com/26",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://tape22.tistory.com/26",
                "title": "https://tape22.tistory.com/26"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 0,
        "depth": 1
      }
    },
    "747999c7-ecbf-49cb-a5ab-93acb5a6b0fe": {
      "id": "747999c7-ecbf-49cb-a5ab-93acb5a6b0fe",
      "value": [
        {
          "_id": "9d2d014e-10ef-4d1a-bb38-3fb1d4fcf2b0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a7b1f776-a561-47cd-91a0-a24dec5dd673": {
      "id": "a7b1f776-a561-47cd-91a0-a24dec5dd673",
      "value": [
        {
          "_id": "24c56cdc-dd65-40d7-847a-bd1490d72c78",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n죄송합니다, 하지만 저는 위 URL을 직접 방문할 수 없어서 구체적인 내용을 확인하거나 요약할 수 없습니다. 하지만 해당 페이지의 내용이 무엇인지 설명해 주시면 필요한 정보를 기반으로 요약을 도와드릴 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 1,
        "depth": 2
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646df96ac926e2cbfe33085"
  },
  "directoryId": 236,
  "lastOrder": 0,
  "content": {
    "9c79ac4e-4230-4a8a-a9ff-2b341849a243": {
      "id": "9c79ac4e-4230-4a8a-a9ff-2b341849a243",
      "value": [
        {
          "_id": "cf55c4a9-0848-4981-879e-9c7fc568d398",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646df96ac926e2cbfe33086"
  },
  "directoryId": 237,
  "lastOrder": 0,
  "content": {
    "9c79ac4e-4230-4a8a-a9ff-2b341849a243": {
      "id": "9c79ac4e-4230-4a8a-a9ff-2b341849a243",
      "value": [
        {
          "_id": "cf55c4a9-0848-4981-879e-9c7fc568d398",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646df96ac926e2cbfe33087"
  },
  "directoryId": 238,
  "lastOrder": 0,
  "content": {
    "9c79ac4e-4230-4a8a-a9ff-2b341849a243": {
      "id": "9c79ac4e-4230-4a8a-a9ff-2b341849a243",
      "value": [
        {
          "_id": "cf55c4a9-0848-4981-879e-9c7fc568d398",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646df96ac926e2cbfe33088"
  },
  "directoryId": 239,
  "lastOrder": 0,
  "content": {
    "9c79ac4e-4230-4a8a-a9ff-2b341849a243": {
      "id": "9c79ac4e-4230-4a8a-a9ff-2b341849a243",
      "value": [
        {
          "_id": "cf55c4a9-0848-4981-879e-9c7fc568d398",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e14b4e84d002131adb94"
  },
  "directoryId": 226,
  "lastOrder": 0,
  "content": {
    "8477eb0a-3fd8-418f-a608-0e256410f65a": {
      "id": "8477eb0a-3fd8-418f-a608-0e256410f65a",
      "value": [
        {
          "_id": "5e96c296-3ccb-4839-8c4b-f2e18f70a862",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e14b4e84d002131adb95"
  },
  "directoryId": 227,
  "lastOrder": 0,
  "content": {
    "6b043770-412c-4093-beaf-d50d7357d367": {
      "id": "6b043770-412c-4093-beaf-d50d7357d367",
      "value": [
        {
          "_id": "3118b845-0452-45d4-851e-fa9ad840b725",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e14b4e84d002131adb96"
  },
  "directoryId": 240,
  "lastOrder": 0,
  "content": {
    "6b043770-412c-4093-beaf-d50d7357d367": {
      "id": "6b043770-412c-4093-beaf-d50d7357d367",
      "value": [
        {
          "_id": "3118b845-0452-45d4-851e-fa9ad840b725",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e14b4e84d002131adb97"
  },
  "directoryId": 241,
  "lastOrder": 5,
  "content": {
    "507bb0bf-c323-4c0a-8765-8e27b6b8f798": {
      "id": "507bb0bf-c323-4c0a-8765-8e27b6b8f798",
      "value": [
        {
          "_id": "774a2bff-1e12-46e7-bc86-301502b9e081",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "84629449-5a78-4412-9b15-080013518ac2": {
      "id": "84629449-5a78-4412-9b15-080013518ac2",
      "value": [
        {
          "_id": "0a29ff57-c147-4934-a886-8bc6a163e005",
          "type": "paragraph",
          "children": [
            {
              "text": "니ㅏㄹㄴ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "988b1664-26c1-4082-86f0-3e70e36f11a8": {
      "id": "988b1664-26c1-4082-86f0-3e70e36f11a8",
      "value": [
        {
          "_id": "5fa639ca-5929-4fe8-bf25-6010fc3113b5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "e23181ed-d4d6-41a6-a9a8-fab0ea16aa4a": {
      "id": "e23181ed-d4d6-41a6-a9a8-fab0ea16aa4a",
      "value": [
        {
          "_id": "70e4f702-6735-4877-9ed2-f7996205aac6",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "eb365d74-9dfd-4c11-be61-59015d335db9": {
      "id": "eb365d74-9dfd-4c11-be61-59015d335db9",
      "value": [
        {
          "_id": "fa7ea5ef-aaef-4fd4-9f65-0cde79e727d9",
          "type": "paragraph",
          "children": [
            {
              "text": "옫ㅎㄷㅎㅎㄹㄷㅎㅀ어너옾넌ㅇㅀㄷㅎㅀㅇ논ㅇㅎㅀㄷㅎㅎㅀㅀㅎㅀㄷㅀㄷㅎㅇㅎㅇㅎㅇㅎㄷㅇ오도도로도오동옹ㅎㄷ옹ㄷㅎ옫옹ㄷㅎㅇ동ㄷㄷㅇㅎㅇ동",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "f7541d09-7269-498f-b4be-f7aa7e2f6cfa": {
      "id": "f7541d09-7269-498f-b4be-f7aa7e2f6cfa",
      "value": [
        {
          "_id": "408c3d94-29b9-4375-a6dc-6600222769fa",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e14b4e84d002131adb98"
  },
  "directoryId": 242,
  "lastOrder": 20,
  "content": {
    "074c32c3-e7bc-422a-bdf2-2ce444fa5bc2": {
      "id": "074c32c3-e7bc-422a-bdf2-2ce444fa5bc2",
      "value": [
        {
          "_id": "c4331dcc-129d-4d6e-bfad-bf62f955d48f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "09c38fb9-0db8-44a4-b72e-4af418b71e98": {
      "id": "09c38fb9-0db8-44a4-b72e-4af418b71e98",
      "value": [
        {
          "_id": "0ec79a10-7610-4010-82eb-15efc3a6edeb",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "11b60e19-5044-4e43-a6bf-0b33db692d84": {
      "id": "11b60e19-5044-4e43-a6bf-0b33db692d84",
      "value": [
        {
          "_id": "a790349d-896a-4197-ac45-1848c96c5eb5",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n              \n\n       Starting DemoApplication using Java 21.0.2 with PID 26900 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n       No active profile set, falling back to 1 default profile: \"default\"\n       Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n       For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n       Tomcat initialized with port 8080 (http)\n       Starting service [Tomcat]\n       Starting Servlet engine: [Apache Tomcat/10.1.20]\n       Initializing Spring embedded WebApplicationContext\n       Root WebApplicationContext: initialization completed in 629 ms\n       LiveReload server is running on port 35729\n       Tomcat started on port 8080 (http) with context path ''\n       Started DemoApplication in 1.089 seconds (process running for 1.477)\n       Initializing Spring DispatcherServlet 'dispatcherServlet'\n       Initializing Servlet 'dispatcherServlet'\n       Completed initialization in 0 ms\n       Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "171ab6af-85bc-48e5-b0c3-fbc08762430d": {
      "id": "171ab6af-85bc-48e5-b0c3-fbc08762430d",
      "value": [
        {
          "_id": "40cde81d-b227-4c2a-9bf1-432c8fbcd302",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "3aebfea9-76aa-4a32-8544-40629ef777c7": {
      "id": "3aebfea9-76aa-4a32-8544-40629ef777c7",
      "value": [
        {
          "_id": "b335437c-3077-465a-9d6b-fd250a8677f5",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "40502679-4467-4cb7-a8dd-ae7f7e2f1681": {
      "id": "40502679-4467-4cb7-a8dd-ae7f7e2f1681",
      "value": [
        {
          "_id": "73e7fa27-4c15-4ab9-95c0-15a54536c57a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "45176304-09dc-4b0c-9daa-6b8588248e9e": {
      "id": "45176304-09dc-4b0c-9daa-6b8588248e9e",
      "value": [
        {
          "_id": "0d1e1369-e745-497f-9f50-dc4e8dd69f29",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "46cf1402-93cc-4672-95aa-2f5e93ae8ccb": {
      "id": "46cf1402-93cc-4672-95aa-2f5e93ae8ccb",
      "value": [
        {
          "_id": "5240da20-d74b-4ac0-817a-c07d6fec2ddf",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!!@222!@@!!!!!@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "4de00f25-fc04-43ef-91d1-5aadfc41a1f6": {
      "id": "4de00f25-fc04-43ef-91d1-5aadfc41a1f6",
      "value": [
        {
          "_id": "aa9850fb-5f7c-4f04-9d54-047f6e763304",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "7b7d638b-d537-4bbe-86f1-a10780a5069d": {
      "id": "7b7d638b-d537-4bbe-86f1-a10780a5069d",
      "value": [
        {
          "_id": "6ff71ecc-4259-424a-b978-d29e4cb4d222",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "80407cc4-1c84-4985-aecc-17be06cf02a6": {
      "id": "80407cc4-1c84-4985-aecc-17be06cf02a6",
      "value": [
        {
          "_id": "6ec38a44-ebd7-4f91-8fda-c48074fea82f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "96b71719-8b2c-486b-b481-4a7db53a7c8b": {
      "id": "96b71719-8b2c-486b-b481-4a7db53a7c8b",
      "value": [
        {
          "_id": "1a148fc5-04cf-42e7-865f-3f13daa49343",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n              \n\n       Starting DemoApplication using Java 21.0.2 with PID 18468 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n       No active profile set, falling back to 1 default profile: \"default\"\n       Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n       For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n       Tomcat initialized with port 8080 (http)\n       Starting service [Tomcat]\n       Starting Servlet engine: [Apache Tomcat/10.1.20]\n       Initializing Spring embedded WebApplicationContext\n       Root WebApplicationContext: initialization completed in 593 ms\n       LiveReload server is running on port 35729\n       Tomcat started on port 8080 (http) with context path ''\n       Started DemoApplication in 1.084 seconds (process running for 1.467)\n       Initializing Spring DispatcherServlet 'dispatcherServlet'\n       Initializing Servlet 'dispatcherServlet'\n       Completed initialization in 1 ms\n       Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "ab33775c-4ca9-4ead-a998-e17bc4f98a09": {
      "id": "ab33775c-4ca9-4ead-a998-e17bc4f98a09",
      "value": [
        {
          "_id": "e0b6f0dd-831a-473c-98a2-5e62e670322e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "b442ea30-fe3f-4155-a79f-972a31183dfc": {
      "id": "b442ea30-fe3f-4155-a79f-972a31183dfc",
      "value": [
        {
          "_id": "642ce557-489e-4d27-ad9d-8b7f60fb6f09",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "bd4d6117-0f75-4d01-8d5d-404809445f74": {
      "id": "bd4d6117-0f75-4d01-8d5d-404809445f74",
      "value": [
        {
          "_id": "c85e873f-a704-4c30-adfe-7c5974a4c0b4",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "bda2ec77-4b5b-4510-a2ca-e40809af43e9": {
      "id": "bda2ec77-4b5b-4510-a2ca-e40809af43e9",
      "value": [
        {
          "_id": "2d479062-636b-4d65-9461-ecf3d05ace3f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "cb6222a9-0ae3-46fc-acac-fc6317ec12a7": {
      "id": "cb6222a9-0ae3-46fc-acac-fc6317ec12a7",
      "value": [
        {
          "_id": "c49b6c7d-b3f5-4f5c-a606-c26372d38d59",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T13:49:20.480+09:00 ERROR 18468 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "d5625856-7d03-4b3d-94cb-d8baf4c1fe4c": {
      "id": "d5625856-7d03-4b3d-94cb-d8baf4c1fe4c",
      "value": [
        {
          "_id": "55f34ed9-3b92-4a37-b05e-b2b863660295",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!!@222!@@!!!!!@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "d6190465-b0a0-4ed6-85ff-756c6d92311a": {
      "id": "d6190465-b0a0-4ed6-85ff-756c6d92311a",
      "value": [
        {
          "_id": "24c484c3-69dd-4c41-b8e8-991f5d1ab48f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "de60fced-c228-4c0d-a4e7-e104b17d08b0": {
      "id": "de60fced-c228-4c0d-a4e7-e104b17d08b0",
      "value": [
        {
          "_id": "31ce6244-9de2-49ac-b720-5aeb50a80414",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "f3d14bba-e40e-4277-973d-d50d3e12f1be": {
      "id": "f3d14bba-e40e-4277-973d-d50d3e12f1be",
      "value": [
        {
          "_id": "0ee5b24e-9e67-420e-a8d3-ef5842fc6852",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 10,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e1d84e84d002131adb9a"
  },
  "directoryId": 15,
  "lastOrder": 1,
  "content": {
    "36db1942-eab2-420c-b53a-46bb7a153955": {
      "id": "36db1942-eab2-420c-b53a-46bb7a153955",
      "value": [
        {
          "_id": "67e1ee3d-712a-4ae8-93da-d458f54def75",
          "type": "todo-list",
          "children": [
            {
              "text": "체크체크체크",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "TodoList",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "e023dec4-3c8c-4692-8c82-56649f140ac5": {
      "id": "e023dec4-3c8c-4692-8c82-56649f140ac5",
      "value": [
        {
          "_id": "3b895e0a-85b4-4a2d-b02f-21eadb70e7a9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e4ee7f2f7b4e047872e6"
  },
  "directoryId": 244,
  "lastOrder": 13,
  "content": {
    "0d6d2989-7bb2-4f38-855b-0f7e8bcedab7": {
      "id": "0d6d2989-7bb2-4f38-855b-0f7e8bcedab7",
      "value": [
        {
          "_id": "5beee811-afb1-4f6b-92d3-e5c06506c733",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "1e5c33dd-1b7b-442f-bca6-5422ceaf22ef": {
      "id": "1e5c33dd-1b7b-442f-bca6-5422ceaf22ef",
      "value": [
        {
          "_id": "05754977-e50e-4314-b6e2-3a4fec2e8eda",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "1f710334-32db-42f5-a9f9-8e73a9ee5bdd": {
      "id": "1f710334-32db-42f5-a9f9-8e73a9ee5bdd",
      "value": [
        {
          "_id": "c19e30e3-2d6f-4a2f-83af-9da55772a555",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "2028b534-31ff-4abd-af97-2d06bbb23a93": {
      "id": "2028b534-31ff-4abd-af97-2d06bbb23a93",
      "value": [
        {
          "_id": "2ca4a99b-2637-48ea-af99-65f5617f4aeb",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "22961bc0-fbd5-46e4-8772-a12c119007b6": {
      "id": "22961bc0-fbd5-46e4-8772-a12c119007b6",
      "value": [
        {
          "_id": "e6508d1a-ef3c-4876-980e-6fdb809c6d76",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "2fe0915a-d977-4c82-8ba7-72c79c75d990": {
      "id": "2fe0915a-d977-4c82-8ba7-72c79c75d990",
      "value": [
        {
          "_id": "7c6a98a2-fad1-4b88-a596-cc5f4114f1b0",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "42e59e2c-2c74-44e1-acbf-030b3e6e21c1": {
      "id": "42e59e2c-2c74-44e1-acbf-030b3e6e21c1",
      "value": [
        {
          "_id": "29265d19-d506-4ddf-92a6-7dd1f3644485",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "63baf7db-0950-48c0-8249-9f90ca2eb482": {
      "id": "63baf7db-0950-48c0-8249-9f90ca2eb482",
      "value": [
        {
          "_id": "b4271a41-d679-4737-b0a5-c6532b45b9da",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "b6e24ba6-f74a-468e-a317-8b2a54985d9b": {
      "id": "b6e24ba6-f74a-468e-a317-8b2a54985d9b",
      "value": [
        {
          "_id": "ed3fda6f-2be3-412e-bd60-ce02e743db94",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "cdb102b2-a30e-4f03-8e1c-399c1869fa6c": {
      "id": "cdb102b2-a30e-4f03-8e1c-399c1869fa6c",
      "value": [
        {
          "_id": "5db5c7dd-29b7-48ef-97b0-a4313e35092e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Controller.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "e13c4498-71ee-4e65-b86a-00b573565c07": {
      "id": "e13c4498-71ee-4e65-b86a-00b573565c07",
      "value": [
        {
          "_id": "a07d5e51-9e40-4d66-bc24-34fe0243bb8b",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class Controller {\n\n    private final Service service;\n\n    @GetMapping(\"/test\")\n    public void test(){\n        service.doSomething();\n        System.out.println(\"변경된 부분입니다@!3244@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "e577989e-eba1-494b-97da-c161755e82fd": {
      "id": "e577989e-eba1-494b-97da-c161755e82fd",
      "value": [
        {
          "_id": "dd339bd5-f996-40f2-93e0-d887bab62858",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T13:54:34.775+09:00 ERROR 26916 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "f4ca0930-f53e-43b0-8f7e-48c86d29fcca": {
      "id": "f4ca0930-f53e-43b0-8f7e-48c86d29fcca",
      "value": [
        {
          "_id": "987ca6ae-8338-4467-b050-7b480143f071",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "fa1957ea-5fdb-44e5-b364-6c4d036f718f": {
      "id": "fa1957ea-5fdb-44e5-b364-6c4d036f718f",
      "value": [
        {
          "_id": "3be3b4f4-780a-4d35-86b9-a77da72e69bb",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e4ee7f2f7b4e047872e7"
  },
  "directoryId": 245,
  "lastOrder": 0,
  "content": {
    "acac22f8-b166-41f2-803f-00e9f4251ab1": {
      "id": "acac22f8-b166-41f2-803f-00e9f4251ab1",
      "value": [
        {
          "_id": "c448f5a8-02ee-4c78-8f31-379a53fade32",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e4ee7f2f7b4e047872e8"
  },
  "directoryId": 247,
  "lastOrder": 0,
  "content": {
    "acac22f8-b166-41f2-803f-00e9f4251ab1": {
      "id": "acac22f8-b166-41f2-803f-00e9f4251ab1",
      "value": [
        {
          "_id": "c448f5a8-02ee-4c78-8f31-379a53fade32",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e4ee7f2f7b4e047872e9"
  },
  "directoryId": 248,
  "lastOrder": 8,
  "content": {
    "0a62473d-e989-4c73-883f-cdaf991e4069": {
      "id": "0a62473d-e989-4c73-883f-cdaf991e4069",
      "value": [
        {
          "_id": "ec2318e9-2873-49b8-9a1b-547396ed9896",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "233169bc-e2fd-4c32-ab93-e8f787b530e8": {
      "id": "233169bc-e2fd-4c32-ab93-e8f787b530e8",
      "value": [
        {
          "_id": "697830cb-04bd-4c53-b03e-82f251a42ec1",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "2b800c6d-d18a-4c3a-af24-82bbe8559528": {
      "id": "2b800c6d-d18a-4c3a-af24-82bbe8559528",
      "value": [
        {
          "_id": "8aedad81-9399-4497-867e-c87704e331e8",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "6243d0e7-13ea-41dd-8d6a-b60028982554": {
      "id": "6243d0e7-13ea-41dd-8d6a-b60028982554",
      "value": [
        {
          "_id": "c2b6f715-467a-418e-b454-51cb31ef1656",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "a1b8d988-c9d0-4368-8e48-e2161982ef6e": {
      "id": "a1b8d988-c9d0-4368-8e48-e2161982ef6e",
      "value": [
        {
          "_id": "24ddb69f-e082-47bb-9ff7-11aa3d99b403",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "a2627e44-7783-4f09-a1f0-aaf9ef4683f9": {
      "id": "a2627e44-7783-4f09-a1f0-aaf9ef4683f9",
      "value": [
        {
          "_id": "66190821-4102-437c-a48e-ef480e118846",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "aeeee422-8a0a-4b34-85aa-470de7a20984": {
      "id": "aeeee422-8a0a-4b34-85aa-470de7a20984",
      "value": [
        {
          "_id": "d9bf511e-915f-4c64-b8f0-fc00cac77f8e",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T13:56:08.308+09:00 ERROR 25656 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "d140a9b3-0df8-4097-81e2-37c6e8a8b7f4": {
      "id": "d140a9b3-0df8-4097-81e2-37c6e8a8b7f4",
      "value": [
        {
          "_id": "c72bddc9-f4cf-44b6-93b0-7cc2b1dfb77e",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "e003ca58-2a4e-4567-a568-8673d2286e17": {
      "id": "e003ca58-2a4e-4567-a568-8673d2286e17",
      "value": [
        {
          "_id": "9e6d202e-b522-4041-89c2-9a21b6eb2f69",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e4ee7f2f7b4e047872eb"
  },
  "directoryId": 250,
  "lastOrder": 3,
  "content": {
    "15c78821-8d90-4d60-98f6-e0458d4c9422": {
      "id": "15c78821-8d90-4d60-98f6-e0458d4c9422",
      "value": [
        {
          "_id": "62d8907c-666b-4195-a9ad-da0d95892921",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "483f6420-a63b-4697-9c1d-f030493d52da": {
      "id": "483f6420-a63b-4697-9c1d-f030493d52da",
      "value": [
        {
          "_id": "54bfa4ab-0bb1-4713-b707-fda43dec088c",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.5)\n\n2024-05-17T13:57:18.658+09:00  INFO 27980 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Starting DemoApplication using Java 21.0.3 with PID 27980 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n2024-05-17T13:57:18.661+09:00  INFO 27980 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: \"default\"\n2024-05-17T13:57:18.705+09:00  INFO 27980 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n2024-05-17T13:57:18.705+09:00  INFO 27980 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n2024-05-17T13:57:19.534+09:00  INFO 27980 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)\n2024-05-17T13:57:19.545+09:00  INFO 27980 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2024-05-17T13:57:19.545+09:00  INFO 27980 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]\n2024-05-17T13:57:19.578+09:00  INFO 27980 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2024-05-17T13:57:19.579+09:00  INFO 27980 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 873 ms\n2024-05-17T13:57:19.829+09:00  INFO 27980 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729\n2024-05-17T13:57:19.861+09:00  INFO 27980 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''\n2024-05-17T13:57:19.867+09:00  INFO 27980 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Started DemoApplication in 1.56 seconds (process running for 2.012)\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "a23e57ac-6b7d-4bae-bd94-e80aab909d1e": {
      "id": "a23e57ac-6b7d-4bae-bd94-e80aab909d1e",
      "value": [
        {
          "_id": "27a68692-3a76-4250-929f-cd415a5d373f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "d99426d4-cd66-4854-9a50-ba4289c4499c": {
      "id": "d99426d4-cd66-4854-9a50-ba4289c4499c",
      "value": [
        {
          "_id": "7ba3cacf-6e0d-42d1-8ade-83abcaa922a0",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e4ee7f2f7b4e047872ec"
  },
  "directoryId": 251,
  "lastOrder": 20,
  "content": {
    "0a192838-85a5-43e9-87b2-d17951fb1248": {
      "id": "0a192838-85a5-43e9-87b2-d17951fb1248",
      "value": [
        {
          "_id": "7edba75a-80ae-42d3-90e0-65070a77ddad",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "1a97cf90-eba4-49f8-bc91-d71ac8af7919": {
      "id": "1a97cf90-eba4-49f8-bc91-d71ac8af7919",
      "value": [
        {
          "_id": "bdb3f2f4-3ee1-4c16-ae75-688569b2fa29",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "2421557e-b511-4bb6-9c3c-41999540c2f0": {
      "id": "2421557e-b511-4bb6-9c3c-41999540c2f0",
      "value": [
        {
          "_id": "3e0d1d9b-eb2c-4846-b031-96d539cd96fa",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "307743f0-4a3d-42dc-b9a5-62b4272dc91e": {
      "id": "307743f0-4a3d-42dc-b9a5-62b4272dc91e",
      "value": [
        {
          "_id": "bc4f9fca-31d4-468d-aef5-7489d1788403",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\n    return a + b\n\n\nanswer = plus(1, 2)\n\nprint(answer)\n\nfor i in range(10):\n    print(i)\n\nprint(\"Hello World\")\nprint(\"????\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "32fc9ab5-ee12-4ee6-93ce-559ba09c73f4": {
      "id": "32fc9ab5-ee12-4ee6-93ce-559ba09c73f4",
      "value": [
        {
          "_id": "763c3fdc-fe38-4098-903d-d80bdf5de2c4",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")\r\nprint(\"????\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "3774a37a-3c6a-482e-8008-76b65fb87925": {
      "id": "3774a37a-3c6a-482e-8008-76b65fb87925",
      "value": [
        {
          "_id": "f6fd8522-aff8-49b5-8ac6-f6a2ba1032ad",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "4edf7998-ec65-4d2d-bd93-e04705a91810": {
      "id": "4edf7998-ec65-4d2d-bd93-e04705a91810",
      "value": [
        {
          "_id": "932301d1-ae36-4b1d-a4d1-a96b9bf13c9f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "58c08628-8bf0-4c07-9e66-b06e20673797": {
      "id": "58c08628-8bf0-4c07-9e66-b06e20673797",
      "value": [
        {
          "_id": "f961430a-ac81-4e80-8599-3383b74be679",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")\r\nprint(\"????\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 17,
        "depth": 1
      }
    },
    "5bb3384b-5132-47de-80fd-30d299277e6e": {
      "id": "5bb3384b-5132-47de-80fd-30d299277e6e",
      "value": [
        {
          "_id": "64979fba-b5c9-4b5a-bd9c-f3cf74d65585",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "61aa60a4-d26a-46eb-9901-ca6755fa4ef2": {
      "id": "61aa60a4-d26a-46eb-9901-ca6755fa4ef2",
      "value": [
        {
          "_id": "e9c476d2-5e57-41c6-8471-97a0acb92c73",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "7bd264f2-dce7-401d-b1b3-fcc869d15ba8": {
      "id": "7bd264f2-dce7-401d-b1b3-fcc869d15ba8",
      "value": [
        {
          "_id": "723b1611-eb11-47aa-a2b8-e64391f2958b",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "89d62e33-0d26-4ad3-8aa0-f75d076a643b": {
      "id": "89d62e33-0d26-4ad3-8aa0-f75d076a643b",
      "value": [
        {
          "_id": "7d03d736-a2ab-47ee-82d1-4b6bdb5258ff",
          "type": "code",
          "children": [
            {
              "text": "  File \"c:\\Users\\SSAFY\\Desktop\\�н�\\��Ÿ\\ex.py\", line 13\r\r\n    print(\"????\"\r\r\n         ^\r\r\nSyntaxError: '(' was never closed\r\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "9730bea5-74bc-4ba0-90e5-354f0917cad8": {
      "id": "9730bea5-74bc-4ba0-90e5-354f0917cad8",
      "value": [
        {
          "_id": "c450a3f1-de8a-4ac2-a283-a75140b8e094",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nSyntaxError: '(' was never closed in line 13 of the file called ex.py.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "9c6aa55f-0214-43fd-a08b-b04a610e7d92": {
      "id": "9c6aa55f-0214-43fd-a08b-b04a610e7d92",
      "value": [
        {
          "_id": "5fd17289-fcda-47df-80c2-89a3467fadca",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "9fe4e71f-93a7-4334-bfd8-ea3fac7a291e": {
      "id": "9fe4e71f-93a7-4334-bfd8-ea3fac7a291e",
      "value": [
        {
          "_id": "b7770cd4-a613-47ad-8f38-7c8e0ce156dc",
          "type": "code",
          "children": [
            {
              "text": "def plus(a, b):\r\n    return a + b\r\n\r\n\r\nanswer = plus(1, 2)\r\n\r\nprint(answer)\r\n\r\nfor i in range(10):\r\n    print(i)\r\n\r\nprint(\"Hello World\")\r\nprint(\"????\")",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "bfc43852-b561-467f-bbe5-69861111e116": {
      "id": "bfc43852-b561-467f-bbe5-69861111e116",
      "value": [
        {
          "_id": "7158c6a8-d236-42c5-85bf-d827f9bd02f2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nex.py 파일의 내용이 변경되지 않았음을 나타내는 요약문입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "c0a96ae1-fefb-4cfd-8555-c05867a5faac": {
      "id": "c0a96ae1-fefb-4cfd-8555-c05867a5faac",
      "value": [
        {
          "_id": "0501bcd7-58bf-4efe-9052-4d6e950aba79",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "db77195f-0d2d-428a-b779-277520fdd248": {
      "id": "db77195f-0d2d-428a-b779-277520fdd248",
      "value": [
        {
          "_id": "28c211bb-4085-48db-96b0-f6a14842cd82",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\학습\\기타\\ex.py",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 1,
        "depth": 1
      }
    },
    "e24143a3-b49a-4b7d-9efa-3569264a3dca": {
      "id": "e24143a3-b49a-4b7d-9efa-3569264a3dca",
      "value": [
        {
          "_id": "f1985ec6-dce0-4641-affa-2efd1776407a",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nex.py 파일은 변경 전후로 같은 내용을 유지하고 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "f08084dd-66e2-44c1-a71b-c22d7dfc72bc": {
      "id": "f08084dd-66e2-44c1-a71b-c22d7dfc72bc",
      "value": [
        {
          "_id": "abaf8684-a9b9-45c6-9163-6569ecae84bb",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "f9e5d9fe-a139-4da6-b9e0-ea91a5aca3e5": {
      "id": "f9e5d9fe-a139-4da6-b9e0-ea91a5aca3e5",
      "value": [
        {
          "_id": "b5b4cb1f-50e6-4527-bef4-a09fb2c764f9",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646e6bf7f2f7b4e047872f2"
  },
  "directoryId": 252,
  "lastOrder": 1,
  "content": {
    "3e1a2d21-094a-4933-a39c-055931b5590c": {
      "id": "3e1a2d21-094a-4933-a39c-055931b5590c",
      "value": [
        {
          "_id": "a0ca7355-98d0-4ad0-8612-b708bb15befa",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "5f03b166-110e-4a51-b508-285217d085a7": {
      "id": "5f03b166-110e-4a51-b508-285217d085a7",
      "value": [
        {
          "_id": "3a7a58fd-f3f7-4b20-9f34-dda4d926db9a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d260"
  },
  "directoryId": 14,
  "lastOrder": 0,
  "content": {
    "6cde375e-bba1-4c51-9d5f-44940689e33f": {
      "id": "6cde375e-bba1-4c51-9d5f-44940689e33f",
      "value": [
        {
          "_id": "3cef1d52-ad35-43e5-a245-c9436651812f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d262"
  },
  "directoryId": 147,
  "lastOrder": 18,
  "content": {
    "01c3cdf5-62c6-47f4-8ae1-597d4e44e089": {
      "id": "01c3cdf5-62c6-47f4-8ae1-597d4e44e089",
      "value": [
        {
          "_id": "fa4723be-f7ed-4885-bc08-30e3d68e51b1",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOAuth 2.0는 사용자 인증과 권한 부여를 담당하는 오픈 스탠다드 프로토콜입니다. 이는 사용자가 인증 정보를 직접 입력하지 않아도, 세 번째 자에게 자신의 정보를 안전하게 공유할 수 있게 해줍니다. OAuth 2.0은 네 개의 역할 (리소스 소유자, 클라이언트, 리소스 서버, 인증 서버)과 이들 간의 상호 작용을 정의합니다. 이 프로토콜은 전반적인 인증 과정을 담당하며, 토큰을 이용해 사용자의 권한을 부여하고 확인합니다. 다양한 플랫폼에서 활용되고 있으며, API 보호와 사용자 데이터 보호에 기여하고 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 2
      }
    },
    "0dd36907-0017-4f75-af6f-a16c8ca48cc5": {
      "id": "0dd36907-0017-4f75-af6f-a16c8ca48cc5",
      "value": [
        {
          "_id": "9d998763-ade3-4c2b-ab93-b93f3b0b1296",
          "type": "heading-two",
          "children": [
            {
              "text": "검색 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "23f976c1-e0c5-41c7-aa10-19bad1df3a90": {
      "id": "23f976c1-e0c5-41c7-aa10-19bad1df3a90",
      "value": [
        {
          "_id": "1f8ddc87-11a4-4c25-a9a7-9bd3496a9512",
          "type": "heading-three",
          "children": [
            {
              "text": "oauth2 로그인 과정",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "436ed1f2-b64f-4db0-9429-a24debe13df1": {
      "id": "436ed1f2-b64f-4db0-9429-a24debe13df1",
      "value": [
        {
          "_id": "86846be3-6202-477f-86b6-cbece93dc991",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nChatGPT는 OpenAI의 아티피셜 인텔리전스 대화 모델로써 사람처럼 의사소통하는 인공지능입니다. 이용자의 명령, 질문, 또는 대화를 진짜 사람처럼 이해하고 응답할 수 있습니다. 서비스 번역, 편집, 글쓰기 등 다양한 분야에 활용되며, 연구, 개발 및 상업적 용도로 사용 가능합니다. 웹사이트를 통해 쉽게 사용하고 정의역을 늘리는 데 도움될 수 있습니다. 여러분의 비즈니스를 더 똑똑하게 만들어줄 새로운 기회를 제공합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 17,
        "depth": 2
      }
    },
    "446489c1-e3cd-41cd-a1af-ae165a7f37bd": {
      "id": "446489c1-e3cd-41cd-a1af-ae165a7f37bd",
      "value": [
        {
          "_id": "975c62c6-c32c-4e99-8b89-5c6cd4b5abd4",
          "type": "heading-three",
          "children": [
            {
              "text": "크롬 웹스토어 다운로드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "4495d386-4ddb-4151-84dc-295697f8ff7d": {
      "id": "4495d386-4ddb-4151-84dc-295697f8ff7d",
      "value": [
        {
          "_id": "fe9504d8-c9b2-4e34-8126-d123689f6ea1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "46c63174-bc3e-4ddf-bfee-105ca7da8514": {
      "id": "46c63174-bc3e-4ddf-bfee-105ca7da8514",
      "value": [
        {
          "_id": "39691b53-3599-4e82-b6e9-e23003632f8f",
          "type": "heading-two",
          "children": [
            {
              "text": "검색 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "4bb7830b-7b51-4089-866f-0b2f5e9b07a0": {
      "id": "4bb7830b-7b51-4089-866f-0b2f5e9b07a0",
      "value": [
        {
          "_id": "fe943f57-3aa5-4aca-a807-c2eadab40a9f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "4e080ecb-6794-45e9-8aec-29f800231cff": {
      "id": "4e080ecb-6794-45e9-8aec-29f800231cff",
      "value": [
        {
          "_id": "c4aa30f2-e081-49d7-89d4-2af34ff4b57b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "7a8d2b69-50d4-4fff-a38b-0d9bf3f7cc5d": {
      "id": "7a8d2b69-50d4-4fff-a38b-0d9bf3f7cc5d",
      "value": [
        {
          "_id": "da045c5e-b91f-4f34-8da9-5b5111af8084",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "7d45c3f9-5fb4-4cc1-ab23-2d7bf056bdd4": {
      "id": "7d45c3f9-5fb4-4cc1-ab23-2d7bf056bdd4",
      "value": [
        {
          "_id": "3c841d96-cd2c-496f-83e9-57a894ac923e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://hudi.blog/oauth-2.0/",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://hudi.blog/oauth-2.0/",
                "title": "https://hudi.blog/oauth-2.0/"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "96f3b1cc-220e-4a0a-89e5-918219314912": {
      "id": "96f3b1cc-220e-4a0a-89e5-918219314912",
      "value": [
        {
          "_id": "62490006-4a54-4731-a9d3-7884e19ebc94",
          "type": "heading-two",
          "children": [
            {
              "text": "검색 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "b55952c9-db4e-44e9-89a1-d02fd88f3777": {
      "id": "b55952c9-db4e-44e9-89a1-d02fd88f3777",
      "value": [
        {
          "_id": "1570cb0b-496c-4351-b380-f5e7dd97054d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://chatgpt.com/",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://chatgpt.com/",
                "title": "https://chatgpt.com/"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "c030d598-fda4-4f19-9fe4-38b1fbac52a1": {
      "id": "c030d598-fda4-4f19-9fe4-38b1fbac52a1",
      "value": [
        {
          "_id": "6034c93d-27a3-4c42-a4b4-619fac78a927",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "c7b02e4b-78e3-497a-8089-06b5620116cf": {
      "id": "c7b02e4b-78e3-497a-8089-06b5620116cf",
      "value": [
        {
          "_id": "32530399-2efa-443e-a8f8-c65b708c9009",
          "type": "heading-three",
          "children": [
            {
              "text": "nginx https 설정",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "f3d20d99-9618-4351-9b24-b53ed37ddc4b": {
      "id": "f3d20d99-9618-4351-9b24-b53ed37ddc4b",
      "value": [
        {
          "_id": "32227c8b-a087-4f8f-bf7a-fcd96e9cfcf7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d263"
  },
  "directoryId": 211,
  "lastOrder": 5,
  "content": {
    "9c37baa5-eae2-4ba8-a01a-d8b604a55d81": {
      "id": "9c37baa5-eae2-4ba8-a01a-d8b604a55d81",
      "value": [
        {
          "_id": "383208eb-b613-4682-ab2c-cb6009f33277",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "c65f7793-8a9f-41bf-b3ab-5997699cadc9": {
      "id": "c65f7793-8a9f-41bf-b3ab-5997699cadc9",
      "value": [
        {
          "_id": "ea66f2ec-83f5-468f-be89-2e9ba38e7803",
          "type": "blockquote",
          "children": [
            {
              "text": "ㅎsggggggggggggggggggggggggggggggggggggggggggggggg",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "c7f50c82-57eb-41a2-bec1-f036c14afb28": {
      "id": "c7f50c82-57eb-41a2-bec1-f036c14afb28",
      "value": [
        {
          "_id": "92ffd2eb-3c29-4a2a-9174-02a4e34c878d",
          "type": "code",
          "children": [
            {
              "text": "ㄴㅇㄻㅇㄻㄹㄴㅇㅇ\nㅇ\nㅇ\nㅇ\nㅇ\nㅇㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴㄴ\n  ㅇ\n    ㄴㅇ\n      \nㄴ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "javascript",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d264"
  },
  "directoryId": 233,
  "lastOrder": 1,
  "content": {
    "b73003e4-90f0-4d1e-9994-080200ff47ef": {
      "id": "b73003e4-90f0-4d1e-9994-080200ff47ef",
      "value": [
        {
          "_id": "62385584-fda8-4dea-b5c2-5e6966e97dfb",
          "type": "paragraph",
          "children": [
            {
              "text": "gggg",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "ed94be00-d071-4915-88ea-5fa997a4c878": {
      "id": "ed94be00-d071-4915-88ea-5fa997a4c878",
      "value": [
        {
          "_id": "3b220722-8236-4123-ab8c-5d28c0390971",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "링크입니다",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "링크입니다"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d265"
  },
  "directoryId": 243,
  "lastOrder": 1,
  "content": {
    "8bdfe47d-f39e-433c-8039-d0e6f10c36c5": {
      "id": "8bdfe47d-f39e-433c-8039-d0e6f10c36c5",
      "value": [
        {
          "_id": "10468d10-ddb0-4e45-930f-5bdcd8ed9192",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "ㅎㅎㅎㅎㅎ",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a65c5439-5e29-4804-961c-4ef2b1597ed6": {
      "id": "a65c5439-5e29-4804-961c-4ef2b1597ed6",
      "value": [
        {
          "_id": "67541c5d-6202-4def-9711-8aca4fe43403",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d266"
  },
  "directoryId": 249,
  "lastOrder": 0,
  "content": {
    "f350863e-5544-43e7-9a41-62e186239168": {
      "id": "f350863e-5544-43e7-9a41-62e186239168",
      "value": [
        {
          "_id": "3c7430e4-b871-4646-8664-adc94e761f2e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d267"
  },
  "directoryId": 253,
  "lastOrder": 0,
  "content": {
    "8764cfd3-48dc-42ac-abf1-22c1e6f06aac": {
      "id": "8764cfd3-48dc-42ac-abf1-22c1e6f06aac",
      "value": [
        {
          "_id": "5fd92770-95d2-4d1f-a47f-903044498a54",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d268"
  },
  "directoryId": 254,
  "lastOrder": -1,
  "content": {
    "08a99ee7-3ecf-411c-ad3a-f8986121581a": {
      "id": "08a99ee7-3ecf-411c-ad3a-f8986121581a",
      "value": [
        {
          "_id": "35d9585a-6d11-4dfc-8085-903589492f05",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d269"
  },
  "directoryId": 255,
  "lastOrder": 7,
  "content": {
    "1cdebd0c-d58a-4214-a30e-db705a7f6f1f": {
      "id": "1cdebd0c-d58a-4214-a30e-db705a7f6f1f",
      "value": [
        {
          "_id": "d577fe61-7f75-4c76-91ac-fca5cd6955f7",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class Controller {\n\n    private final Service service;\n\n    @GetMapping(\"/test\")\n    public void test(){\n        service.doSomething();\n        System.out.println(\"변경된 부분입니다@!432312321312343324@@4@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "1d532672-6c29-43c8-876f-2504a9e50c80": {
      "id": "1d532672-6c29-43c8-876f-2504a9e50c80",
      "value": [
        {
          "_id": "5d67c8b4-e010-4019-8dc5-ba5e27c1facc",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "231725f9-b308-449f-8ad4-7595685fa10d": {
      "id": "231725f9-b308-449f-8ad4-7595685fa10d",
      "value": [
        {
          "_id": "55dcb9f3-6be9-47b0-8965-2b8aa0a66ce6",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "74e92d0a-1e63-4a77-9332-b880cba4be3c": {
      "id": "74e92d0a-1e63-4a77-9332-b880cba4be3c",
      "value": [
        {
          "_id": "4e21ecc3-2a0f-4042-a73b-a85252387513",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n              \n\n       Starting DemoApplication using Java 21.0.2 with PID 23888 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n       No active profile set, falling back to 1 default profile: \"default\"\n       Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n       For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n       Tomcat initialized with port 8080 (http)\n       Starting service [Tomcat]\n       Starting Servlet engine: [Apache Tomcat/10.1.20]\n       Initializing Spring embedded WebApplicationContext\n       Root WebApplicationContext: initialization completed in 679 ms\n       LiveReload server is running on port 35729\n       Tomcat started on port 8080 (http) with context path ''\n       Started DemoApplication in 1.25 seconds (process running for 1.763)\n       Initializing Spring DispatcherServlet 'dispatcherServlet'\n       Initializing Servlet 'dispatcherServlet'\n       Completed initialization in 1 ms\n       Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "7e455b76-3be3-4818-8a6e-f840006e6b9c": {
      "id": "7e455b76-3be3-4818-8a6e-f840006e6b9c",
      "value": [
        {
          "_id": "5a156951-9a5f-475a-acb3-8c8d855ee2ae",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "81827a50-fe49-4be6-aecf-817e46e9812d": {
      "id": "81827a50-fe49-4be6-aecf-817e46e9812d",
      "value": [
        {
          "_id": "7812eed5-1afd-4ea3-affa-0086a161834c",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "d455697c-6f9e-4f5d-853b-b641d4d00cd5": {
      "id": "d455697c-6f9e-4f5d-853b-b641d4d00cd5",
      "value": [
        {
          "_id": "859b7d31-4b2d-4b42-a14b-9111b4de6df5",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Controller.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "d833d868-a301-4ede-a1a5-06f524e63188": {
      "id": "d833d868-a301-4ede-a1a5-06f524e63188",
      "value": [
        {
          "_id": "75977119-48b1-4c7b-832a-581ae2513438",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "d88ec395-548f-4f01-883b-d41b44f9a22a": {
      "id": "d88ec395-548f-4f01-883b-d41b44f9a22a",
      "value": [
        {
          "_id": "8071209e-da01-4cd4-9fa9-5952fdbbb50d",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d26a"
  },
  "directoryId": 257,
  "lastOrder": 3,
  "content": {
    "2f226e02-6d27-4bef-a552-915e76b96fe7": {
      "id": "2f226e02-6d27-4bef-a552-915e76b96fe7",
      "value": [
        {
          "_id": "dd1e87b4-caf9-4588-a850-a20e6fafb9d6",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "5becfa24-4fae-4063-a9fe-1f71d13b9f67": {
      "id": "5becfa24-4fae-4063-a9fe-1f71d13b9f67",
      "value": [
        {
          "_id": "f68eabf7-3202-4883-8811-d0a322347a16",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n              \n\n       Starting DemoApplication using Java 21.0.2 with PID 29232 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n       No active profile set, falling back to 1 default profile: \"default\"\n       Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n       For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n       Tomcat initialized with port 8080 (http)\n       Starting service [Tomcat]\n       Starting Servlet engine: [Apache Tomcat/10.1.20]\n       Initializing Spring embedded WebApplicationContext\n       Root WebApplicationContext: initialization completed in 685 ms\n       LiveReload server is running on port 35729\n       Tomcat started on port 8080 (http) with context path ''\n       Started DemoApplication in 1.208 seconds (process running for 1.838)\n       Initializing Spring DispatcherServlet 'dispatcherServlet'\n       Initializing Servlet 'dispatcherServlet'\n       Completed initialization in 0 ms\n       Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "874e4d73-e5b7-429f-ba78-77b6630692ff": {
      "id": "874e4d73-e5b7-429f-ba78-77b6630692ff",
      "value": [
        {
          "_id": "ffecb308-6ef1-4782-9780-da5a295c3b91",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "90e6116c-98ae-4dda-8f47-2c9feee44df4": {
      "id": "90e6116c-98ae-4dda-8f47-2c9feee44df4",
      "value": [
        {
          "_id": "b7e3685d-5568-48bf-8c9a-43983184e62d",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "d289b2a0-0a6e-4c61-9b23-4c2865326338": {
      "id": "d289b2a0-0a6e-4c61-9b23-4c2865326338",
      "value": [
        {
          "_id": "2da1dbfb-92cd-4317-8fed-c384e4a64c1c",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59aa54ee57e8e15d26b"
  },
  "directoryId": 258,
  "lastOrder": 11,
  "content": {
    "1713ff7b-be5d-4178-8162-1fb780c13097": {
      "id": "1713ff7b-be5d-4178-8162-1fb780c13097",
      "value": [
        {
          "_id": "a953d747-44d4-4952-b698-2a574c3751e8",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "1df6417b-7f8b-4c86-80b8-6c2d443a09ac": {
      "id": "1df6417b-7f8b-4c86-80b8-6c2d443a09ac",
      "value": [
        {
          "_id": "f42e53dc-d02c-46ee-9bdf-3ac8cadd7ccb",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "46d54e92-4b86-45c8-a519-70daeb835e0a": {
      "id": "46d54e92-4b86-45c8-a519-70daeb835e0a",
      "value": [
        {
          "_id": "33d395c4-b1ae-466d-ab93-52cb4395cbc9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "62f8c7e9-e975-476d-b782-f393a58c7a51": {
      "id": "62f8c7e9-e975-476d-b782-f393a58c7a51",
      "value": [
        {
          "_id": "2f69ed4f-0719-4a54-8009-41eed1d4f081",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "699e2d33-3410-492f-a0eb-50d5ef3735a3": {
      "id": "699e2d33-3410-492f-a0eb-50d5ef3735a3",
      "value": [
        {
          "_id": "8b7dd658-5b73-4952-a64c-b2baac96cea4",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "9a067043-b80e-4d0c-940b-ba548265332d": {
      "id": "9a067043-b80e-4d0c-940b-ba548265332d",
      "value": [
        {
          "_id": "72623588-f5e4-4838-872c-85791cf76543",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "ae69b814-c48a-4dfa-857e-2c5c47103994": {
      "id": "ae69b814-c48a-4dfa-857e-2c5c47103994",
      "value": [
        {
          "_id": "199880ad-2a1f-41f3-961c-27025e47e345",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "b4304837-ccdb-417b-a71f-81be3bced484": {
      "id": "b4304837-ccdb-417b-a71f-81be3bced484",
      "value": [
        {
          "_id": "6b74c04c-1dea-4938-911b-b05d72567357",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "e044123d-0714-41f6-b2ca-1bd051dd4e64": {
      "id": "e044123d-0714-41f6-b2ca-1bd051dd4e64",
      "value": [
        {
          "_id": "06b8e249-9cef-49a1-b5d3-a53ac785511e",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "e8edc721-d91a-4fd7-94ab-940ca3772f69": {
      "id": "e8edc721-d91a-4fd7-94ab-940ca3772f69",
      "value": [
        {
          "_id": "9dbb5614-f2b6-4c9b-9afd-e4cd8bcb6c19",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.5)\n\n2024-05-17T14:40:31.680+09:00  INFO 20076 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Starting DemoApplication using Java 21.0.3 with PID 20076 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n2024-05-17T14:40:31.682+09:00  INFO 20076 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: \"default\"\n2024-05-17T14:40:31.724+09:00  INFO 20076 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n2024-05-17T14:40:31.724+09:00  INFO 20076 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n2024-05-17T14:40:32.622+09:00  INFO 20076 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)\n2024-05-17T14:40:32.635+09:00  INFO 20076 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2024-05-17T14:40:32.636+09:00  INFO 20076 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]\n2024-05-17T14:40:32.676+09:00  INFO 20076 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2024-05-17T14:40:32.677+09:00  INFO 20076 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 951 ms\n2024-05-17T14:40:32.946+09:00  WARN 20076 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server\n2024-05-17T14:40:32.973+09:00  INFO 20076 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''\n2024-05-17T14:40:32.979+09:00  INFO 20076 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Started DemoApplication in 1.613 seconds (process running for 2.025)\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "fe28ed78-a35a-4cbb-a26e-7043d9892088": {
      "id": "fe28ed78-a35a-4cbb-a26e-7043d9892088",
      "value": [
        {
          "_id": "06c778e1-0fa0-4e24-9613-9440f19ff732",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.5)\n\n2024-05-17T14:30:00.115+09:00  INFO 21988 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Starting DemoApplication using Java 21.0.3 with PID 21988 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n2024-05-17T14:30:00.119+09:00  INFO 21988 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: \"default\"\n2024-05-17T14:30:00.173+09:00  INFO 21988 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n2024-05-17T14:30:00.173+09:00  INFO 21988 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n2024-05-17T14:30:01.004+09:00  INFO 21988 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)\n2024-05-17T14:30:01.015+09:00  INFO 21988 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2024-05-17T14:30:01.015+09:00  INFO 21988 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]\n2024-05-17T14:30:01.047+09:00  INFO 21988 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2024-05-17T14:30:01.047+09:00  INFO 21988 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 874 ms\n2024-05-17T14:30:01.298+09:00  INFO 21988 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729\n2024-05-17T14:30:01.323+09:00  INFO 21988 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''\n2024-05-17T14:30:01.329+09:00  INFO 21988 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Started DemoApplication in 1.534 seconds (process running for 1.973)\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "ffc67dde-9bf8-4a5f-8bc9-59cb08ec2f13": {
      "id": "ffc67dde-9bf8-4a5f-8bc9-59cb08ec2f13",
      "value": [
        {
          "_id": "df336525-6d84-4a0c-af3a-306632de5303",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59ba54ee57e8e15d26c"
  },
  "directoryId": 259,
  "lastOrder": 7,
  "content": {
    "3147e034-80f2-4910-aa51-95ef7c3f4d4c": {
      "id": "3147e034-80f2-4910-aa51-95ef7c3f4d4c",
      "value": [
        {
          "_id": "a0655d3f-46eb-4bbe-910f-8bf0f6b4746a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "5e667b89-97a9-4cb6-9e0b-8dcbc4afad82": {
      "id": "5e667b89-97a9-4cb6-9e0b-8dcbc4afad82",
      "value": [
        {
          "_id": "bf7c8693-c423-4a34-8ae0-b0bbe0e3dad6",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "82b46220-5abe-4dfe-b248-0aacbaa147d7": {
      "id": "82b46220-5abe-4dfe-b248-0aacbaa147d7",
      "value": [
        {
          "_id": "f53851c2-d964-4bce-b87c-1efcb2b4fdbf",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "a6e8297d-a1f7-4721-900b-b0be1bf671ac": {
      "id": "a6e8297d-a1f7-4721-900b-b0be1bf671ac",
      "value": [
        {
          "_id": "b1b9bdf9-b0c4-4720-b467-fc2d53c51536",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "b483db2f-ba32-4bbb-99b6-a92eb9877db2": {
      "id": "b483db2f-ba32-4bbb-99b6-a92eb9877db2",
      "value": [
        {
          "_id": "cfd1f9f2-8a55-495d-938f-ca2b8177434e",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T14:50:27.498+09:00 ERROR 29628 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "daf95175-176a-4622-8785-0672fbca3cca": {
      "id": "daf95175-176a-4622-8785-0672fbca3cca",
      "value": [
        {
          "_id": "ae7e7142-d16e-4b48-98ba-093535119197",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "e66e3b3b-71ea-432d-80ef-9ace7f332224": {
      "id": "e66e3b3b-71ea-432d-80ef-9ace7f332224",
      "value": [
        {
          "_id": "66aa490d-a39c-408a-86fa-f87ff95fa23d",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@@@@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "ec0ba074-32ed-49e4-8bbf-18ce49451a5c": {
      "id": "ec0ba074-32ed-49e4-8bbf-18ce49451a5c",
      "value": [
        {
          "_id": "20a8ace6-d8ae-46ea-b322-1301bcad879c",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59ba54ee57e8e15d26d"
  },
  "directoryId": 260,
  "lastOrder": 3,
  "content": {
    "1af877ff-136e-4efe-b0c6-2be785a1671f": {
      "id": "1af877ff-136e-4efe-b0c6-2be785a1671f",
      "value": [
        {
          "_id": "148a3a0e-5cbd-449a-94c7-60a2077a36eb",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "35302438-f501-4d1f-9573-e04e946906af": {
      "id": "35302438-f501-4d1f-9573-e04e946906af",
      "value": [
        {
          "_id": "67aa25b9-d005-406d-aa01-15e7f15ff5c9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "7ecafdd7-8443-46ec-bec7-0dfeac401395": {
      "id": "7ecafdd7-8443-46ec-bec7-0dfeac401395",
      "value": [
        {
          "_id": "0fc0f6c1-b126-4eb8-8c2f-60c3160807a3",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59ba54ee57e8e15d26e"
  },
  "directoryId": 261,
  "lastOrder": 37,
  "content": {
    "025f53ef-25db-47bd-bb05-39b7a4806e83": {
      "id": "025f53ef-25db-47bd-bb05-39b7a4806e83",
      "value": [
        {
          "_id": "67a05e5b-eb13-4acb-85d1-282264848dac",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "029240cc-fe76-433b-a57d-c249865445d2": {
      "id": "029240cc-fe76-433b-a57d-c249865445d2",
      "value": [
        {
          "_id": "cb90e46a-20d1-413a-84eb-ba697776e52a",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "0883ee34-e415-4820-99db-7114baf228b5": {
      "id": "0883ee34-e415-4820-99db-7114baf228b5",
      "value": [
        {
          "_id": "94b02c55-db2d-4e1c-bf56-6593deb11dd4",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Controller.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "0e029073-1c8f-439e-89a5-b00fa6ff6a35": {
      "id": "0e029073-1c8f-439e-89a5-b00fa6ff6a35",
      "value": [
        {
          "_id": "e8b530da-3c7d-42bd-8c4f-ba948ff8c93e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "0f056f7c-cc09-456f-8d95-f88bc0f54fc3": {
      "id": "0f056f7c-cc09-456f-8d95-f88bc0f54fc3",
      "value": [
        {
          "_id": "75a8e755-c6b1-49c7-ba16-531972f695ee",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class Controller {\n\n    private final Service service;\n\n    @GetMapping(\"/test\")\n    public void test(){\n        service.doSomething();\n        System.out.println(\"변경된 부분입니다@!43324@@4@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "1751f6e5-bde4-4d27-990e-ce12acc68594": {
      "id": "1751f6e5-bde4-4d27-990e-ce12acc68594",
      "value": [
        {
          "_id": "debcdceb-1282-42ad-8a92-2d582ed51f17",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@@@@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "212f3714-186f-497b-8fbb-2ccd84c396ad": {
      "id": "212f3714-186f-497b-8fbb-2ccd84c396ad",
      "value": [
        {
          "_id": "c06e5a26-4967-4b7e-85ef-75ed8938c199",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "2593ce0e-4c92-4863-94c3-5ec707b905e9": {
      "id": "2593ce0e-4c92-4863-94c3-5ec707b905e9",
      "value": [
        {
          "_id": "d0bd2f57-d701-473d-afb5-c9077b94ebbd",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 34,
        "depth": 0
      }
    },
    "2d75e80c-b681-4a40-aeb0-5a13185a33ac": {
      "id": "2d75e80c-b681-4a40-aeb0-5a13185a33ac",
      "value": [
        {
          "_id": "14b6211f-5742-4a83-88e4-c0da12e8e1e7",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 35,
        "depth": 0
      }
    },
    "3034b211-e6be-42fb-8dbc-54c26066818c": {
      "id": "3034b211-e6be-42fb-8dbc-54c26066818c",
      "value": [
        {
          "_id": "f0ca0099-88a0-4a24-ba25-068baade2320",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@@@@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "342dff34-c15d-4357-ae6c-7032d7d1a8a8": {
      "id": "342dff34-c15d-4357-ae6c-7032d7d1a8a8",
      "value": [
        {
          "_id": "da8d04fa-ce3a-4a83-8d58-e4ad1e52749f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "4057d48e-e720-4648-8e7a-66efe5c7b14e": {
      "id": "4057d48e-e720-4648-8e7a-66efe5c7b14e",
      "value": [
        {
          "_id": "62e6224c-7be7-4e6a-b70e-5518ac654880",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T14:58:07.767+09:00 ERROR 13660 --- [demo] [nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 36,
        "depth": 0
      }
    },
    "50605ba5-f811-4949-9604-d17dee3c733a": {
      "id": "50605ba5-f811-4949-9604-d17dee3c733a",
      "value": [
        {
          "_id": "fde246f0-e85c-4339-bb39-26650eb66e85",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T14:57:09.513+09:00 ERROR 8348 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 23,
        "depth": 0
      }
    },
    "530f39d9-b0fb-4c3f-aff4-0efd491971bd": {
      "id": "530f39d9-b0fb-4c3f-aff4-0efd491971bd",
      "value": [
        {
          "_id": "9d0173a6-7d25-4fca-ab00-5a922ee0af13",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "672e09d6-8d9b-4166-9104-19b309d57008": {
      "id": "672e09d6-8d9b-4166-9104-19b309d57008",
      "value": [
        {
          "_id": "58b08f3a-7a87-49d0-aa3b-83715637ac54",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "75f3f03e-b120-4c16-bb2c-551765e812ae": {
      "id": "75f3f03e-b120-4c16-bb2c-551765e812ae",
      "value": [
        {
          "_id": "2a269c2f-5bd2-45d7-a703-b35dc53648fb",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "76cde07e-947c-4093-b265-c86f10fcdd8e": {
      "id": "76cde07e-947c-4093-b265-c86f10fcdd8e",
      "value": [
        {
          "_id": "d2e22fd6-6b0d-4c09-a95b-f3daca28b157",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "8314246b-706b-4aa3-87ee-6fb486b1477d": {
      "id": "8314246b-706b-4aa3-87ee-6fb486b1477d",
      "value": [
        {
          "_id": "5ee87c29-d3ef-46e3-93a8-ebb285348164",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "8451a8f2-7356-4912-ad66-de91b1830b9c": {
      "id": "8451a8f2-7356-4912-ad66-de91b1830b9c",
      "value": [
        {
          "_id": "e96f28c8-7a0a-4e74-81db-ec81816c0d38",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "903cbb1f-7750-4904-b66f-fe7579fe41c7": {
      "id": "903cbb1f-7750-4904-b66f-fe7579fe41c7",
      "value": [
        {
          "_id": "12b0f61c-1da7-4837-8fbc-4a8eb03f3d6b",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "96444d1e-e750-45e6-83b6-3e50509c82af": {
      "id": "96444d1e-e750-45e6-83b6-3e50509c82af",
      "value": [
        {
          "_id": "86e05388-15e6-4b90-9da3-d7821709a87f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 21,
        "depth": 0
      }
    },
    "a51ec244-f79a-4c8d-8146-f0c70f219511": {
      "id": "a51ec244-f79a-4c8d-8146-f0c70f219511",
      "value": [
        {
          "_id": "805c1ea9-8999-46c9-b4df-bfe0f5b63a2a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Controller.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "a84ddc73-8a24-4355-b992-aed929531f04": {
      "id": "a84ddc73-8a24-4355-b992-aed929531f04",
      "value": [
        {
          "_id": "ccebe4e5-9369-4e46-ae50-a0348607d6a4",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "af16dfba-10c2-414e-ab4a-eb3258ccc372": {
      "id": "af16dfba-10c2-414e-ab4a-eb3258ccc372",
      "value": [
        {
          "_id": "b0d8401a-9d3a-4a1c-9cde-4bcc9ac23f7f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "b4b63027-d828-42df-9db7-3c314bff6f34": {
      "id": "b4b63027-d828-42df-9db7-3c314bff6f34",
      "value": [
        {
          "_id": "5b25437b-a749-45b2-a530-efd341cb453d",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "b5960c19-3ebb-47d5-8cae-9ccf3a964f03": {
      "id": "b5960c19-3ebb-47d5-8cae-9ccf3a964f03",
      "value": [
        {
          "_id": "4eb0aa7d-103b-428f-9d76-4a1bdaf2a1e8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 19,
        "depth": 1
      }
    },
    "b85248db-0561-4f9c-acce-61c57c095395": {
      "id": "b85248db-0561-4f9c-acce-61c57c095395",
      "value": [
        {
          "_id": "ee7f2b55-8cb4-4e64-8064-71384486900f",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "bef22f6d-e04b-411c-a1ec-f049bc3f7135": {
      "id": "bef22f6d-e04b-411c-a1ec-f049bc3f7135",
      "value": [
        {
          "_id": "100dcc6e-e1e7-4a45-84df-948267684dda",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 37,
        "depth": 0
      }
    },
    "d3ab3442-b1e0-4f11-8f50-60ad7f950e11": {
      "id": "d3ab3442-b1e0-4f11-8f50-60ad7f950e11",
      "value": [
        {
          "_id": "13845796-c7ed-44b3-bd9c-63d54f05bc2e",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "daaf8c53-88b3-43fe-94e9-44d4e1cd9238": {
      "id": "daaf8c53-88b3-43fe-94e9-44d4e1cd9238",
      "value": [
        {
          "_id": "2f4ce543-7793-49b2-80bb-8e1900426c4d",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "de98b93c-9144-4a89-b056-7b627afbe013": {
      "id": "de98b93c-9144-4a89-b056-7b627afbe013",
      "value": [
        {
          "_id": "2e6c2402-4981-4252-aeef-e1991bf3e34f",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "e1eb9d9f-e35e-4461-a67b-b6ea4ddec874": {
      "id": "e1eb9d9f-e35e-4461-a67b-b6ea4ddec874",
      "value": [
        {
          "_id": "3e70550c-3a74-4fb3-9f07-4bf438e381f6",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "e2b55428-4a7b-4a65-bc87-1c11334a6b63": {
      "id": "e2b55428-4a7b-4a65-bc87-1c11334a6b63",
      "value": [
        {
          "_id": "90df2482-1eb1-43ad-a9cf-84c22a931cb0",
          "type": "code",
          "children": [
            {
              "text": "2024-05-17T14:54:50.801+09:00 ERROR 20864 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "f54534ef-e4ab-4452-89c3-d2f2ca209586": {
      "id": "f54534ef-e4ab-4452-89c3-d2f2ca209586",
      "value": [
        {
          "_id": "edfb70a7-50fe-46a5-801b-89cf18b63093",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "fc4e2c62-b45d-47ed-9590-dc051e0e74df": {
      "id": "fc4e2c62-b45d-47ed-9590-dc051e0e74df",
      "value": [
        {
          "_id": "67eb1d81-8bd6-4245-8ad1-76b7a35fde84",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class Controller {\n\n    private final Service service;\n\n    @GetMapping(\"/test\")\n    public void test(){\n        service.doSomething();\n        System.out.println(\"변경된 부분입니다@!43324@@4@@33@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 29,
        "depth": 1
      }
    },
    "fd34fa38-691e-4879-ab63-93d3956e9f12": {
      "id": "fd34fa38-691e-4879-ab63-93d3956e9f12",
      "value": [
        {
          "_id": "15baa413-6227-4772-b648-10c2c657a46f",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@@@@@!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "ff097041-02eb-48a8-9bac-389078554063": {
      "id": "ff097041-02eb-48a8-9bac-389078554063",
      "value": [
        {
          "_id": "1da96cfb-5887-4708-9f45-497d57be399b",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "ffeb65f5-ece6-4c21-8fe2-c64c2a741913": {
      "id": "ffeb65f5-ece6-4c21-8fe2-c64c2a741913",
      "value": [
        {
          "_id": "75baa01b-2b3d-47a7-baa9-d3dac37d7d3c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 15,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f59ba54ee57e8e15d26f"
  },
  "directoryId": 262,
  "lastOrder": 0,
  "content": {
    "896cecdc-24f7-4cac-96e4-0d6e029c3d62": {
      "id": "896cecdc-24f7-4cac-96e4-0d6e029c3d62",
      "value": [
        {
          "_id": "51c7ac0c-7ec8-4f26-82d8-576f7176da2d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646f71d7f2f7b4e047872f4"
  },
  "directoryId": 228,
  "lastOrder": 6,
  "content": {
    "0af6be28-69e9-4722-8f4c-67f95594b295": {
      "id": "0af6be28-69e9-4722-8f4c-67f95594b295",
      "value": [
        {
          "_id": "a52a6ba9-050a-494a-a0ec-39ddcccbd7ae",
          "type": "paragraph",
          "children": [
            {
              "text": "hh",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "2433a16a-0674-46a7-967e-d36b0ee1ad8f": {
      "id": "2433a16a-0674-46a7-967e-d36b0ee1ad8f",
      "value": [
        {
          "_id": "af7ae9c4-bac2-4720-a0bc-b7da39099ef4",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "링크",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "링크입니다"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "474f5766-fbad-43bf-b42f-72fcab27ccd4": {
      "id": "474f5766-fbad-43bf-b42f-72fcab27ccd4",
      "value": [
        {
          "_id": "c1c9ccf6-2f71-446f-a7df-944f3faea7f3",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "ae4af062-0f59-47d7-a2cb-bc5126328b8e": {
      "id": "ae4af062-0f59-47d7-a2cb-bc5126328b8e",
      "value": [
        {
          "_id": "a38d6748-4778-46dc-bed9-cf6726c22aca",
          "type": "paragraph",
          "children": [
            {
              "text": "추가된 블록입니다",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "e726a682-c421-4c0e-97a0-736117f60838": {
      "id": "e726a682-c421-4c0e-97a0-736117f60838",
      "value": [
        {
          "_id": "4866ed09-6d91-424b-938e-b478c2495cd1",
          "type": "paragraph",
          "children": [
            {
              "text": "이것도 추가된겁니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "e7b3c7dc-9d45-498a-9970-019550cbe462": {
      "id": "e7b3c7dc-9d45-498a-9970-019550cbe462",
      "value": [
        {
          "_id": "af7ae9c4-bac2-4720-a0bc-b7da39099ef4",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "링크입니다",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "링크입니다"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "f3038206-07ed-463b-82d1-7656976487d2": {
      "id": "f3038206-07ed-463b-82d1-7656976487d2",
      "value": [
        {
          "_id": "f7a83c62-edd6-4268-a450-30197e4abc07",
          "type": "paragraph",
          "children": [
            {
              "text": "추가된 블록입니다",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6646fca3a54ee57e8e15d271"
  },
  "directoryId": 263,
  "lastOrder": 7,
  "content": {
    "25dea663-47c5-4030-98e6-3081e9e7f757": {
      "id": "25dea663-47c5-4030-98e6-3081e9e7f757",
      "value": [
        {
          "_id": "69b3b28d-d270-4262-aae1-9e49c96783ca",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "2def48ac-5781-48f7-87b9-012a37669fa0": {
      "id": "2def48ac-5781-48f7-87b9-012a37669fa0",
      "value": [
        {
          "_id": "9a876ee1-657a-40b5-a92a-7d419c1bf773",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@@@@@!@@@@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "460e9125-3bdd-42bd-8530-db10a6e4a6e7": {
      "id": "460e9125-3bdd-42bd-8530-db10a6e4a6e7",
      "value": [
        {
          "_id": "7bf3eacb-7f29-4afd-90fb-f3cedd379d76",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "4bffc748-694d-40a9-baca-be278736b166": {
      "id": "4bffc748-694d-40a9-baca-be278736b166",
      "value": [
        {
          "_id": "ec854712-9695-47da-af21-95aa5d794265",
          "type": "code",
          "children": [
            {
              "text": "\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.5)\n\n2024-05-17T15:28:49.255+09:00  INFO 9700 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Starting DemoApplication using Java 21.0.3 with PID 9700 (C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo\\out\\production\\classes started by SSAFY in C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\demo)\n2024-05-17T15:28:49.259+09:00  INFO 9700 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: \"default\"\n2024-05-17T15:28:49.303+09:00  INFO 9700 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\n2024-05-17T15:28:49.303+09:00  INFO 9700 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'\n2024-05-17T15:28:50.177+09:00  INFO 9700 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)\n2024-05-17T15:28:50.187+09:00  INFO 9700 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2024-05-17T15:28:50.187+09:00  INFO 9700 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]\n2024-05-17T15:28:50.222+09:00  INFO 9700 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2024-05-17T15:28:50.222+09:00  INFO 9700 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 918 ms\n2024-05-17T15:28:50.482+09:00  WARN 9700 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server\n2024-05-17T15:28:50.507+09:00  INFO 9700 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''\n2024-05-17T15:28:50.514+09:00  INFO 9700 --- [demo] [  restartedMain] com.example.demo.DemoApplication         : Started DemoApplication in 1.583 seconds (process running for 1.986)\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "7f61dbef-4dc1-45c2-9299-54cd41100375": {
      "id": "7f61dbef-4dc1-45c2-9299-54cd41100375",
      "value": [
        {
          "_id": "6101476a-8708-4c8c-b571-a5a342726b18",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "9b98a499-bf6d-4ae1-94ed-674141d245e7": {
      "id": "9b98a499-bf6d-4ae1-94ed-674141d245e7",
      "value": [
        {
          "_id": "f988a2e7-6e6a-4d52-ba21-9631f08f13c3",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "9e600dec-bab6-4aea-a36c-b231c6191c07": {
      "id": "9e600dec-bab6-4aea-a36c-b231c6191c07",
      "value": [
        {
          "_id": "1a8ea7e5-1181-4d53-ad2a-09bc9f9b4d5b",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "a15f11ad-e7ee-44ff-906e-cbd961509de3": {
      "id": "a15f11ad-e7ee-44ff-906e-cbd961509de3",
      "value": [
        {
          "_id": "2bc2cf5b-cb47-4d5f-b007-992842ad5dba",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "de241a36-5701-447f-909b-cbd4aaa824e4": {
      "id": "de241a36-5701-447f-909b-cbd4aaa824e4",
      "value": [
        {
          "_id": "2839db27-8754-43df-8d86-d405b060b762",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66471fcda54ee57e8e15d272"
  },
  "directoryId": 265,
  "lastOrder": 21,
  "content": {
    "2452bcd1-f472-4d62-8a66-11f37feb0b94": {
      "id": "2452bcd1-f472-4d62-8a66-11f37feb0b94",
      "value": [
        {
          "_id": "60b63e3a-29d9-43ea-a237-679c228bdd24",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "44d32bcc-49f3-495b-8f17-4c50a069e86f": {
      "id": "44d32bcc-49f3-495b-8f17-4c50a069e86f",
      "value": [
        {
          "_id": "3fee79a7-d190-4136-89b8-24aa36e49fc0",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "4679ed1f-dc9e-489c-978a-b0b6d4c868be": {
      "id": "4679ed1f-dc9e-489c-978a-b0b6d4c868be",
      "value": [
        {
          "_id": "3dfd7f60-707b-4d9d-8419-1aa38b03760a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "860edbc4-7374-49a3-9afe-24512f8fc972": {
      "id": "860edbc4-7374-49a3-9afe-24512f8fc972",
      "value": [
        {
          "_id": "17c24e20-822b-4f27-b51e-1fd859fdf4a5",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "910fbf76-2ee8-4edc-bc62-72e05f2f93e7": {
      "id": "910fbf76-2ee8-4edc-bc62-72e05f2f93e7",
      "value": [
        {
          "_id": "1a9099e8-7b60-462e-bc22-6a7e0090dbfa",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "b8ecd740-a09d-4975-80c9-a9025da6d381": {
      "id": "b8ecd740-a09d-4975-80c9-a9025da6d381",
      "value": [
        {
          "_id": "e73704be-52e6-4dd7-8370-e20256f2065b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "c02d1370-79f4-4268-834c-10c2383203fa": {
      "id": "c02d1370-79f4-4268-834c-10c2383203fa",
      "value": [
        {
          "_id": "0776df2f-c60a-44c8-9417-7d1b3cae7125",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "c9f67c21-bc77-4632-8278-b5a471eb9d7a": {
      "id": "c9f67c21-bc77-4632-8278-b5a471eb9d7a",
      "value": [
        {
          "_id": "2b9c9b5f-beca-4f92-967f-b201642cc217",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "e0ad2251-ed5f-4634-999d-c1b73a9c4c8e": {
      "id": "e0ad2251-ed5f-4634-999d-c1b73a9c4c8e",
      "value": [
        {
          "_id": "65dfe76a-e8e9-4bb6-ac7d-a379604e71fd",
          "type": "paragraph",
          "children": [
            {
              "text": "안녕하세요ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "fc688747-92a7-4f21-aed9-c6284ebf87ad": {
      "id": "fc688747-92a7-4f21-aed9-c6284ebf87ad",
      "value": [
        {
          "_id": "27c9d1c3-09bf-4be8-9067-a977fce495de",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "fc854272-9b5d-4f91-ae77-e1be08b6b177": {
      "id": "fc854272-9b5d-4f91-ae77-e1be08b6b177",
      "value": [
        {
          "_id": "c248ee98-68e3-43b2-8d51-4b271b0b1950",
          "type": "paragraph",
          "children": [
            {
              "text": "s",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664827e4b46f083067d82dfc"
  },
  "directoryId": 217,
  "lastOrder": 1,
  "content": {
    "60b429cc-e41c-4dad-9879-4d80301e3828": {
      "id": "60b429cc-e41c-4dad-9879-4d80301e3828",
      "value": [
        {
          "_id": "1b90fec9-b3e1-4981-af90-9b4329057466",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "f9841282-b857-4a33-a500-7d504b5d2bf6": {
      "id": "f9841282-b857-4a33-a500-7d504b5d2bf6",
      "value": [
        {
          "_id": "6582c021-5fcb-44b9-92c1-9a990a4c94aa",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "ㅎㅎㅎㅎㅎㅎ",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "ㅎㅎㅎㅎㅎㅎ"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66484b15b46f083067d82dfd"
  },
  "directoryId": 267,
  "lastOrder": 3,
  "content": {
    "15133ada-de72-43f4-8de6-a6d392e2a983": {
      "id": "15133ada-de72-43f4-8de6-a6d392e2a983",
      "value": [
        {
          "_id": "11f3c477-aeac-4dff-b696-d7390cc8d569",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://tape22.tistory.com/26",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://tape22.tistory.com/26",
                "title": "https://tape22.tistory.com/26"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 0,
        "depth": 1
      }
    },
    "1ff2187a-1b25-41ee-8984-9359142975c8": {
      "id": "1ff2187a-1b25-41ee-8984-9359142975c8",
      "value": [
        {
          "_id": "1a8d3e9c-043f-43f7-90b1-ff4175ea4aa5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "747999c7-ecbf-49cb-a5ab-93acb5a6b0fe": {
      "id": "747999c7-ecbf-49cb-a5ab-93acb5a6b0fe",
      "value": [
        {
          "_id": "9d2d014e-10ef-4d1a-bb38-3fb1d4fcf2b0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a7b1f776-a561-47cd-91a0-a24dec5dd673": {
      "id": "a7b1f776-a561-47cd-91a0-a24dec5dd673",
      "value": [
        {
          "_id": "24c56cdc-dd65-40d7-847a-bd1490d72c78",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n죄송합니다, 하지만 저는 위 URL을 직접 방문할 수 없어서 구체적인 내용을 확인하거나 요약할 수 없습니다. 하지만 해당 페이지의 내용이 무엇인지 설명해 주시면 필요한 정보를 기반으로 요약을 도와드릴 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 1,
        "depth": 2
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66485c48a54ee57e8e15d273"
  },
  "directoryId": 138,
  "lastOrder": 22,
  "content": {
    "0166b47d-9480-4faf-85ae-d0834927040d": {
      "id": "0166b47d-9480-4faf-85ae-d0834927040d",
      "value": [
        {
          "_id": "3c2b0c32-64ac-424f-997d-2600e1ae3f0e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 포스팅은 MongoDB의 데이터 입력, 출력, 수정에 대한 방법을 설명하고 있다. 데이터 입력은 'insert()' 함수를 사용하며, 출력은 'find()' 함수로 수행한다. 특히 데이터 수정은 'update()' 함수를 사용하는데, 첫번째 인자로 변경하고자 하는 문서를 지정하고 두번째 인자로 새로운 값을 설정한다. 또한, 'remove()' 함수를 통해 데이터 삭제도 가능하다. MongoDB에서는 이러한 기본적인 데이터 조작 기능들을 제공하여 사용자의 데이터 관리를 돕는다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 7,
        "depth": 2
      }
    },
    "060eb0f7-60bc-4bef-92d8-9bfc5b8a5575": {
      "id": "060eb0f7-60bc-4bef-92d8-9bfc5b8a5575",
      "value": [
        {
          "_id": "e76d4111-4742-4e30-94eb-2f0dd5efec0d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n\"인천 중구에 위치한 '인천개항장'은 한국이 처음으로 국제 무역을 시작한 곳으로 그 역사를 담고 있다.\\n산책로에는 인천 개항 당시 주요인물들의 동상이 있으며, 전시 매장이나 체험학습장이 구비되어 방문객들에게 다양한 즐길 거리를 제공한다.\\n문화 공연 등 다양한 볼거리와 먹거리를 제공하는 홍보 설명회를 통해 특색 있는 여행 코스로 인기를 모으고 있다.\\n마침내 '인천 개항장 체험 스토리' 프로그램을 통해 방문객들은 현장에서 느낄 수 있게 되었다.\\n'인천 개항장 체험스토리'는 국제 무역의 발자취를 체험하며 역사를 배울 수 있는 교육적 가치가 있어 가족 단위 방문객에게 추천한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 2
      }
    },
    "15133ada-de72-43f4-8de6-a6d392e2a983": {
      "id": "15133ada-de72-43f4-8de6-a6d392e2a983",
      "value": [
        {
          "_id": "11f3c477-aeac-4dff-b696-d7390cc8d569",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://tape22.tistory.com/26",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://tape22.tistory.com/26",
                "title": "https://tape22.tistory.com/26"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 0,
        "depth": 1
      }
    },
    "16513138-3745-41f1-b3db-78b532d78327": {
      "id": "16513138-3745-41f1-b3db-78b532d78327",
      "value": [
        {
          "_id": "db86915c-4b88-416b-acfe-c4b8a044bf23",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "1c608b2c-9e7f-4553-9da5-d8cba4326b2e": {
      "id": "1c608b2c-9e7f-4553-9da5-d8cba4326b2e",
      "value": [
        {
          "_id": "2b889332-1aa2-4f83-a9cd-1566e7c72300",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n\"이 포스팅은 JavaScript 함수의 기본 개념을 설명하고 있습니다.\" \"함수는 특정 기능을 수행하는 코드의 모음으로, 필요한 때에 호출하여 사용할 수 있습니다.\" \"또한, 함수는 매개변수를 통해 데이터를 전달받고, 결과를 반환할 수 있습니다.\" \"함수의 선언 방법과 호출 방법, 그리고 익명 함수와 화살표 함수에 대해서도 설명하고 있습니다.\" \"이러한 함수의 개념과 활용 방법을 이해하면 JavaScript 프로그래밍에 큰 도움이 될 것입니다.\"",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 15,
        "depth": 2
      }
    },
    "28049cdf-a11b-4ecf-9970-16e76607cfc4": {
      "id": "28049cdf-a11b-4ecf-9970-16e76607cfc4",
      "value": [
        {
          "_id": "f61f24f0-1782-44c5-8328-41bea4360461",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOpenAI의 GPT 모델 API를 활용해 다양한 모델을 사용할 수 있다. GPT-3, GPT-J, GPT-d, GPT-t, GPT-TPU, GPT-neo, GPT-reddit 등 다양한 종류가 있고 각각의 병렬 처리 능력, 성능, 사용할 수 있는 언어 등을 비교 분석했다. 딥러닝 모델 비교는 성능과 속도를 중점으로 이루어졌다. 각 모델의 특성과 난이도에 따라 적합한 모델을 선택하여 사용 가능하다. 이웃 차원 알고리즘을 이해하여 optimal하게 모델을 사용하는 것이 중요하다.\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 21,
        "depth": 2
      }
    },
    "3e6b130b-63c0-4548-8c05-da4006de1ccf": {
      "id": "3e6b130b-63c0-4548-8c05-da4006de1ccf",
      "value": [
        {
          "_id": "f8ddff0f-9469-4447-8fbb-c2914822059c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "5e79a3a0-b24f-40b8-9f22-afc5d7360db5": {
      "id": "5e79a3a0-b24f-40b8-9f22-afc5d7360db5",
      "value": [
        {
          "_id": "628963b3-7b5e-4e39-b722-d8b64f600ed2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n업무 자동화 도구인 파이썬에 어떻게 접근하면 좋을지에 대한 팁을 공유하는 게시글이다. 파이썬을 배우기 위해 코드를 많이 작성하는 것이 중요하며, 이를 위해 codewars와 같은 코딩 문제 웹사이트를 이용할 것을 권장한다. 또한, 코드 리뷰를 통해 다른 사람들의 도움을 받아 문제를 해결하는 방법도 소개되어 있다. 개인 프로젝트를 진행하거나, 대학 과제를 컴퓨터 프로그래밍 언어로 해결하려는 시도도 권장된다. 마지막으로, 본인의 코드를 최적화하려는 노력도 중요하다고 강조했다.\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 18,
        "depth": 2
      }
    },
    "70ad79ae-379b-402b-8554-c95b6a73429d": {
      "id": "70ad79ae-379b-402b-8554-c95b6a73429d",
      "value": [
        {
          "_id": "f1e2460b-9a25-4f0d-a0fb-d4f1e48f59ef",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "747999c7-ecbf-49cb-a5ab-93acb5a6b0fe": {
      "id": "747999c7-ecbf-49cb-a5ab-93acb5a6b0fe",
      "value": [
        {
          "_id": "9d2d014e-10ef-4d1a-bb38-3fb1d4fcf2b0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "77576ec2-38dd-4250-bbc6-1e916bfec844": {
      "id": "77576ec2-38dd-4250-bbc6-1e916bfec844",
      "value": [
        {
          "_id": "8127995b-2312-4912-9475-23854fefa921",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://seolin.tistory.com/123",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://seolin.tistory.com/123",
                "title": "https://seolin.tistory.com/123"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "7b348fe9-414c-402e-960d-c921cabd570f": {
      "id": "7b348fe9-414c-402e-960d-c921cabd570f",
      "value": [
        {
          "_id": "b0c05918-cdcd-434a-9fae-8aeb66c9a23a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://seolin.tistory.com/123",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://seolin.tistory.com/123",
                "title": "https://seolin.tistory.com/123"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "81358270-5703-4e6b-9865-9dc263b21760": {
      "id": "81358270-5703-4e6b-9865-9dc263b21760",
      "value": [
        {
          "_id": "eca7954d-65b3-4f37-a4bf-95c4e32ffdc3",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://drfirst.tistory.com/entry/GPT-API%EC%9D%98-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-openai-gpt-models-24%EB%85%84-1%EC%9B%94-%EA%B8%B0%EC%A4%80-%EC%B5%9C%EC%8B%A0-%EB%B2%84%EC%A0%84",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://drfirst.tistory.com/entry/GPT-API%EC%9D%98-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-openai-gpt-models-24%EB%85%84-1%EC%9B%94-%EA%B8%B0%EC%A4%80-%EC%B5%9C%EC%8B%A0-%EB%B2%84%EC%A0%84",
                "title": "https://drfirst.tistory.com/entry/GPT-API%EC%9D%98-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-openai-gpt-models-24%EB%85%84-1%EC%9B%94-%EA%B8%B0%EC%A4%80-%EC%B5%9C%EC%8B%A0-%EB%B2%84%EC%A0%84"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "82bdd260-0c33-4ff9-86cd-72fad4e33311": {
      "id": "82bdd260-0c33-4ff9-86cd-72fad4e33311",
      "value": [
        {
          "_id": "0c2ebb24-e91b-4f6e-9913-21deef4d4e40",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n죄송하지만, 저는 실시간으로 인터넷에 접속해 특정 웹페이지의 내용을 조회하거나 요약할 수 없습니다. 하지만 일반적으로 MongoDB 데이터베이스와 관련된 기본적인 작업에 대해 설명드릴 수 있습니다. MongoDB에서 데이터 입력, 출력, 수정 등의 작업은 간단한 명령어를 사용하여 실행할 수 있으며, JavaScript 형식의 쿼리 언어를 사용해 데이터 관리를 합니다. 데이터 입력은 `insert` 메소드를, 조회는 `find` 메소드를, 업데이트는 `update` 메소드를 사용하고, 삭제는 `remove` 메소드로 처리할 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 2
      }
    },
    "8b4f467d-f47c-45b9-9922-26c28932a4b0": {
      "id": "8b4f467d-f47c-45b9-9922-26c28932a4b0",
      "value": [
        {
          "_id": "22e63a22-f8e0-4bc3-8966-3481d1f02504",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95",
                "title": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "8e36e9b8-32b2-4f1f-85c1-8d9c754d34ef": {
      "id": "8e36e9b8-32b2-4f1f-85c1-8d9c754d34ef",
      "value": [
        {
          "_id": "359d46c3-aebb-4ef4-b0d4-5b54a7cf62aa",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95",
                "title": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "a7b1f776-a561-47cd-91a0-a24dec5dd673": {
      "id": "a7b1f776-a561-47cd-91a0-a24dec5dd673",
      "value": [
        {
          "_id": "24c56cdc-dd65-40d7-847a-bd1490d72c78",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n죄송합니다, 하지만 저는 위 URL을 직접 방문할 수 없어서 구체적인 내용을 확인하거나 요약할 수 없습니다. 하지만 해당 페이지의 내용이 무엇인지 설명해 주시면 필요한 정보를 기반으로 요약을 도와드릴 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 1,
        "depth": 2
      }
    },
    "af3e3f3f-c99d-4369-950b-7fd80ba857df": {
      "id": "af3e3f3f-c99d-4369-950b-7fd80ba857df",
      "value": [
        {
          "_id": "e795ff6e-3520-41dc-8ecb-1e5b7f75e3f2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n죄송하지만, 제가 직접 웹 페이지를 방문하여 확인할 수 없습니다. 하지만 MongoDB에 대한 데이터 삽입, 출력, 수정에 관한 대략적인 요약이라면 도움을 드릴 수 있습니다:\n\n1. MongoDB에서 데이터를 삽입하려면 `insertOne()` 또는 `insertMany()` 메소드를 사용하여 단일 문서 또는 여러 문서를 동시에 삽입할 수 있습니다.\n2. 데이터를 조회하려면 `find()` 메소드를 사용하여 조건에 맞는 문서를 검색할 수 있습니다.\n3. 특정 조건에 맞는 데이터를 수정하려면 `updateOne()` 또는 `updateMany()` 메소드로 조건을 지정하고 업데이트할 내용을 정의할 수 있습니다.\n4. 데이터 삭제는 `deleteOne()` 또는 `deleteMany()` 메소드를 이용하여 조건에 맞는 데이터",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 3,
        "depth": 2
      }
    },
    "c42f0605-fd91-44bf-90bc-148a8262a04e": {
      "id": "c42f0605-fd91-44bf-90bc-148a8262a04e",
      "value": [
        {
          "_id": "e0165004-dbdb-41f9-a069-020f5ba8725e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 포스트는 '러스트(Rust)'라는 새롭고 강력한 시스템 프로그래밍 언어에 대해 설명하고 있습니다. 러스트는 메모리 관리 문제를 해결하고, 동시성을 다루는 솔루션을 제공하는 등 다양한 강점을 지니고 있습니다. 러스트는 C++나 Java 같은 기존의 언어들이 가진 메모리 안정성, 런타임 시스템, 스레드 대기 등의 문제를 해결하였습니다. 러스트는 현재 빠르게 성장하며 기업과 개발자들 사이에서 주목받고 있으며, 교육과정에서도 점차 포함되어 가고 있습니다. 이로써 러스트는 앞으로 IT와 소프트웨어 개발에 큰 변화를 가져올 것으로 기대됩니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 2
      }
    },
    "c50be9bb-e4a9-40b6-abf3-ffb085381f1c": {
      "id": "c50be9bb-e4a9-40b6-abf3-ffb085381f1c",
      "value": [
        {
          "_id": "473c1c6b-6920-48a3-a651-eba8c1429802",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://seolin.tistory.com/123",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://seolin.tistory.com/123",
                "title": "https://seolin.tistory.com/123"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "cbaf29c5-710b-4382-adf1-350565bcc2d7": {
      "id": "cbaf29c5-710b-4382-adf1-350565bcc2d7",
      "value": [
        {
          "_id": "cd5390ab-2e90-4193-86f6-9255584774b7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "e48c6763-8453-42ab-ab57-013ddf7562d8": {
      "id": "e48c6763-8453-42ab-ab57-013ddf7562d8",
      "value": [
        {
          "_id": "7bb8a70a-b9f6-4cbb-8694-88bb3d41b0a1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "e7bee533-b724-4081-a353-123016bfc46a": {
      "id": "e7bee533-b724-4081-a353-123016bfc46a",
      "value": [
        {
          "_id": "2f264e47-4a46-4377-a404-78acf8ea6e67",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95",
                "title": "https://squll1.tistory.com/entry/mongodb-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85-%EC%B6%9C%EB%A0%A5-%EC%88%98%EC%A0%95"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "ec4c269e-792b-4a56-847d-e8e80daf5b69": {
      "id": "ec4c269e-792b-4a56-847d-e8e80daf5b69",
      "value": [
        {
          "_id": "33a4fb39-774e-4653-baad-83b5165a4445",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://seolin.tistory.com/123",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://seolin.tistory.com/123",
                "title": "https://seolin.tistory.com/123"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 17,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648927726c2ea602ca934dd"
  },
  "directoryId": 279,
  "lastOrder": 0,
  "content": {
    "73854c5f-d271-4c32-8004-a00c5f313de4": {
      "id": "73854c5f-d271-4c32-8004-a00c5f313de4",
      "value": [
        {
          "_id": "a135860f-54c9-4574-ba61-bc2fa38ee282",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "링크 테스",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "링크 테스"
              }
            },
            {
              "text": "트",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648b6063b8e807a88728a40"
  },
  "directoryId": 269,
  "lastOrder": 0,
  "content": {
    "595b9c46-0e92-4428-bcf0-6de520e5bca3": {
      "id": "595b9c46-0e92-4428-bcf0-6de520e5bca3",
      "value": [
        {
          "_id": "ec41bc0c-1690-4b51-a0fa-f8f65f29bf9c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648b6063b8e807a88728a41"
  },
  "directoryId": 271,
  "lastOrder": 7,
  "content": {
    "3fa8112d-f98c-4585-8e16-c7887b11e651": {
      "id": "3fa8112d-f98c-4585-8e16-c7887b11e651",
      "value": [
        {
          "_id": "4753038d-4d23-42f1-93a8-a4a386ca9046",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648b6063b8e807a88728a42"
  },
  "directoryId": 274,
  "lastOrder": 0,
  "content": {
    "89653f96-b245-4257-ba2a-16441b842d67": {
      "id": "89653f96-b245-4257-ba2a-16441b842d67",
      "value": [
        {
          "_id": "36950c21-4752-48a8-a96e-ff9450ea6d18",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648b6063b8e807a88728a43"
  },
  "directoryId": 275,
  "lastOrder": 0,
  "content": {
    "07996d9f-b8ae-4bd6-ad5a-a572c794a96f": {
      "id": "07996d9f-b8ae-4bd6-ad5a-a572c794a96f",
      "value": [
        {
          "_id": "b076d7a8-4d34-4e1c-a407-50120a9915af",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648b6063b8e807a88728a44"
  },
  "directoryId": 276,
  "lastOrder": 12,
  "content": {
    "06bd38d0-745d-431a-8c22-8b7790eb0f76": {
      "id": "06bd38d0-745d-431a-8c22-8b7790eb0f76",
      "value": [
        {
          "_id": "34785a4d-ccba-45bc-a569-fd66fccd0ecb",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환하는 과정에서 타입 불일치로 인해 에러가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "07d0e22f-4533-460b-89b3-f3ce811ce309": {
      "id": "07d0e22f-4533-460b-89b3-f3ce811ce309",
      "value": [
        {
          "_id": "1b98687e-e0c9-4261-9e68-5f8b60b92f15",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "0cc8c1ad-0831-4863-8059-8873d1b8fcd5": {
      "id": "0cc8c1ad-0831-4863-8059-8873d1b8fcd5",
      "value": [
        {
          "_id": "6b58516f-a5d9-4796-ae07-326769bb6dbd",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJson으로 된 객체를 ArrayList<java.lang.Object> 형식으로 변환할 수 없어서 발생한 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "44d3d7a2-cf6d-41ab-95d0-ddd2d61709a3": {
      "id": "44d3d7a2-cf6d-41ab-95d0-ddd2d61709a3",
      "value": [
        {
          "_id": "58accfc7-88a1-408d-885d-d979042e3823",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T01:23:32.578+09:00 ERROR 14524 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:25) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "690f4828-ef02-4914-9b1a-439589b9c69a": {
      "id": "690f4828-ef02-4914-9b1a-439589b9c69a",
      "value": [
        {
          "_id": "5a83043a-a656-46f2-b5da-b9751f9c5ccf",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "708bc5b3-9001-4068-bc2f-a6587ea3fa61": {
      "id": "708bc5b3-9001-4068-bc2f-a6587ea3fa61",
      "value": [
        {
          "_id": "e2fa2ab1-e603-4b88-83cf-ffdbe3491026",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "781fad60-27e4-43e6-ad7b-d56fd6d2f86f": {
      "id": "781fad60-27e4-43e6-ad7b-d56fd6d2f86f",
      "value": [
        {
          "_id": "47ee1cc9-6850-48ba-a593-e3762f1881d1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "7e4f2af0-4778-4fb1-b155-64fc85a6aac5": {
      "id": "7e4f2af0-4778-4fb1-b155-64fc85a6aac5",
      "value": [
        {
          "_id": "b648f8b0-8c2b-4182-8452-4de6e25a7727",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "b4726233-0149-40e8-a7f0-cf1fecc1b043": {
      "id": "b4726233-0149-40e8-a7f0-cf1fecc1b043",
      "value": [
        {
          "_id": "b68c3609-eceb-474b-9d10-739230018d7e",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport lombok.RequiredArgsConstructor;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\n@RequiredArgsConstructor\npublic class Service {\n\n    private final ObjectMapper objectMapper;\n\n    public void doSomething(){\n        Map<String, String> map = new HashMap<>();\n        map.put(\"1\", \"a\");\n        map.put(\"2\", \"b\");\n        map.put(\"3\", \"c\");\n        map.put(\"4\", \"d\");\n        map.put(\"5\", \"e\");\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        list.getFirst();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "e5e93c78-ab2c-4c15-84cc-6d0a4c482bb9": {
      "id": "e5e93c78-ab2c-4c15-84cc-6d0a4c482bb9",
      "value": [
        {
          "_id": "86a44f33-75d7-4055-aec2-6165e041a728",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "e6c602b7-605a-42e8-b1d6-693df974cd38": {
      "id": "e6c602b7-605a-42e8-b1d6-693df974cd38",
      "value": [
        {
          "_id": "86a59876-c19e-4532-9544-469a7de0ff54",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 25",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "fc4bd62f-74b9-4b4d-a9f8-9db99195cb0f": {
      "id": "fc4bd62f-74b9-4b4d-a9f8-9db99195cb0f",
      "value": [
        {
          "_id": "1b8c3c27-132f-437c-b189-f63e4722776c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "feaccb51-9a21-40be-8063-dfdae7190e71": {
      "id": "feaccb51-9a21-40be-8063-dfdae7190e71",
      "value": [
        {
          "_id": "bd92e69f-63ca-4463-9b9d-861c7c7f2fe2",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648b6063b8e807a88728a45"
  },
  "directoryId": 281,
  "lastOrder": 1,
  "content": {
    "794c8307-5399-41da-85de-1e2a386638da": {
      "id": "794c8307-5399-41da-85de-1e2a386638da",
      "value": [
        {
          "_id": "fa4f3176-2a31-41ab-bb89-5192c6dc0fa6",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "ddd ",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com/",
                "title": "ddd"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "98974c61-cc40-490f-b82a-085f6f63dc60": {
      "id": "98974c61-cc40-490f-b82a-085f6f63dc60",
      "value": [
        {
          "_id": "2ec2125b-53c8-457a-a7f7-cd703c5f3dad",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648d2283b8e807a88728a47"
  },
  "directoryId": 273,
  "lastOrder": 15,
  "content": {
    "3065ed81-7f83-4ba5-9cad-5d73539e22bb": {
      "id": "3065ed81-7f83-4ba5-9cad-5d73539e22bb",
      "value": [
        {
          "_id": "d48e8476-bef8-40e7-bc56-a327b0e79595",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nService 클래스는 ObjectMapper를 사용하여 Map을 List로 변환하고, List의 첫 번째 요소를 가져오는 메서드를 가지고 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "5ae6e723-2f80-4465-b574-6e1e7d74ef80": {
      "id": "5ae6e723-2f80-4465-b574-6e1e7d74ef80",
      "value": [
        {
          "_id": "728c2046-bb95-452e-8074-39c3d85e2c0f",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "60f56f74-1e74-4d5b-a237-1c344b3cac14": {
      "id": "60f56f74-1e74-4d5b-a237-1c344b3cac14",
      "value": [
        {
          "_id": "4d91328c-7f13-4e9b-84b5-4ea26ac71410",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 1
      }
    },
    "8ea20277-f56f-4695-bdde-a28827fcade9": {
      "id": "8ea20277-f56f-4695-bdde-a28827fcade9",
      "value": [
        {
          "_id": "7f6d039d-e1ba-43e4-bccc-4a5e94f0ecf2",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "97c318db-49e4-4ff9-ab1e-94e08dc191c0": {
      "id": "97c318db-49e4-4ff9-ab1e-94e08dc191c0",
      "value": [
        {
          "_id": "2b695987-7075-4bd1-b909-8669a5e63ff5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "a1085fb0-f391-4f66-a7cc-8c9877ade305": {
      "id": "a1085fb0-f391-4f66-a7cc-8c9877ade305",
      "value": [
        {
          "_id": "9316e6cc-86d1-4bdb-96ee-800d4e0374ac",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a1b18ed7-fd03-430e-897c-243715044a3b": {
      "id": "a1b18ed7-fd03-430e-897c-243715044a3b",
      "value": [
        {
          "_id": "c0e95582-35e8-4994-9826-0f64916658d3",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport lombok.RequiredArgsConstructor;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\n@RequiredArgsConstructor\npublic class Service {\n\n    private final ObjectMapper objectMapper;\n\n    public void doSomething(){\n        Map<String, String> map = new HashMap<>();\n        map.put(\"1\", \"a\");\n        map.put(\"2\", \"b\");\n        map.put(\"3\", \"c\");\n        map.put(\"4\", \"d\");\n        map.put(\"5\", \"e\");\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        list.getFirst();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "f7b8440a-f344-45f4-aa76-342ff15a3f99": {
      "id": "f7b8440a-f344-45f4-aa76-342ff15a3f99",
      "value": [
        {
          "_id": "605788a0-92f0-428a-b66e-486bb4b5c749",
          "type": "paragraph",
          "children": [
            {
              "text": " ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6648d2283b8e807a88728a48"
  },
  "directoryId": 277,
  "lastOrder": 11,
  "content": {
    "0e41db20-d582-4e09-9e62-c8ec90dd3c18": {
      "id": "0e41db20-d582-4e09-9e62-c8ec90dd3c18",
      "value": [
        {
          "_id": "d6c6bfb4-e414-430a-befb-8d7096bd7d2b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "3ec912e7-a667-4e06-9e3d-e06f99a342fb": {
      "id": "3ec912e7-a667-4e06-9e3d-e06f99a342fb",
      "value": [
        {
          "_id": "eb46814a-2765-4453-bfaf-013fa793aa7e",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "41d82eb4-74f3-4b7e-bb6f-9c971a955fd4": {
      "id": "41d82eb4-74f3-4b7e-bb6f-9c971a955fd4",
      "value": [
        {
          "_id": "9901fc61-081c-44f8-b673-001938f026f5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "49dad5e0-457b-4922-ad82-59905e23fa28": {
      "id": "49dad5e0-457b-4922-ad82-59905e23fa28",
      "value": [
        {
          "_id": "752de881-e9ec-4ebf-ba8b-f3cda672e48b",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "631e84b1-4465-4700-8283-e90d795a7725": {
      "id": "631e84b1-4465-4700-8283-e90d795a7725",
      "value": [
        {
          "_id": "f5dfef9b-d84d-414a-a05f-c31dba8aa037",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T01:20:03.804+09:00 ERROR 19796 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:25) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "8684d1d0-d80a-46cf-9ee1-54eae5a980ad": {
      "id": "8684d1d0-d80a-46cf-9ee1-54eae5a980ad",
      "value": [
        {
          "_id": "b6c3c8a1-469a-40ea-8c17-68c0cb2d000f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nService 클래스는 ObjectMapper를 사용하여 Map을 List로 변환하는 기능을 제공한다. 그러나 list.getFirst() 메서드는 List에 적용되는 메서드가 아니므로 오류가 발생할 것이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "872763b6-b860-41b5-95da-6d584b7428a8": {
      "id": "872763b6-b860-41b5-95da-6d584b7428a8",
      "value": [
        {
          "_id": "8a4e3db6-7696-44ac-b9f1-b2b84cc22d64",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nDeserialization error occurred due to mismatched input while trying to deserialize an object as an ArrayList.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "9433a71a-483d-4819-9d2a-b79d2657f9c3": {
      "id": "9433a71a-483d-4819-9d2a-b79d2657f9c3",
      "value": [
        {
          "_id": "54a3ec96-fc2c-43ac-9992-a7262762963d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 25",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "a6cfb8d3-7f22-48cf-804d-58cbb1648d6b": {
      "id": "a6cfb8d3-7f22-48cf-804d-58cbb1648d6b",
      "value": [
        {
          "_id": "78f49022-fb77-4961-b04f-ece2f42bcd65",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport lombok.RequiredArgsConstructor;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\n@RequiredArgsConstructor\npublic class Service {\n\n    private final ObjectMapper objectMapper;\n\n    public void doSomething(){\n        Map<String, String> map = new HashMap<>();\n        map.put(\"1\", \"a\");\n        map.put(\"2\", \"b\");\n        map.put(\"3\", \"c\");\n        map.put(\"4\", \"d\");\n        map.put(\"5\", \"e\");\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        list.getFirst();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "bdee1219-ddbe-44ac-9303-31fb91732df8": {
      "id": "bdee1219-ddbe-44ac-9303-31fb91732df8",
      "value": [
        {
          "_id": "2bd8cde6-cd3a-4174-93b7-54a3c8dfdbf8",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "e8717bef-0b6e-4c4b-8441-51e95ab0679b": {
      "id": "e8717bef-0b6e-4c4b-8441-51e95ab0679b",
      "value": [
        {
          "_id": "df6e7ff5-e5d3-4b13-92a9-162dec8f61b4",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "f367fcee-0608-4d9d-a073-b5f7b47fd3e8": {
      "id": "f367fcee-0608-4d9d-a073-b5f7b47fd3e8",
      "value": [
        {
          "_id": "788f46c0-9a18-4c4d-ae32-d3b382542cdf",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649881e580dee73d0118842"
  },
  "directoryId": 282,
  "lastOrder": 15,
  "content": {
    "242bcdff-7de0-4e14-b94e-3139085f10cf": {
      "id": "242bcdff-7de0-4e14-b94e-3139085f10cf",
      "value": [
        {
          "_id": "e2585b61-3312-4de7-a5da-f96bdf48fee9",
          "type": "paragraph",
          "children": [
            {
              "text": "기울기",
              "bold": false,
              "italic": true,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "61c36023-10a1-4330-937d-23f1db1c3d30": {
      "id": "61c36023-10a1-4330-937d-23f1db1c3d30",
      "value": [
        {
          "_id": "256f0974-0aa6-4fc8-98c8-2e61929c6c5c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "62231f4e-1e81-444c-b42d-6dd6031d74e1": {
      "id": "62231f4e-1e81-444c-b42d-6dd6031d74e1",
      "value": [
        {
          "_id": "442046ba-95a3-4c5e-90e2-5ab736fffd12",
          "type": "paragraph",
          "children": [
            {
              "text": "코드",
              "bold": false,
              "italic": false,
              "underline": true,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "6ef466bf-acca-4258-8270-bb4aa0dd2f32": {
      "id": "6ef466bf-acca-4258-8270-bb4aa0dd2f32",
      "value": [
        {
          "_id": "e77a4e17-b006-4041-aec6-5ed14f148c97",
          "type": "paragraph",
          "children": [
            {
              "text": "굵게",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "b4722756-db9d-4488-a66f-896f1d149333": {
      "id": "b4722756-db9d-4488-a66f-896f1d149333",
      "value": [
        {
          "_id": "90bd2508-e216-4b84-8c04-8061d47ce4e2",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "링크",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://www.naver.com",
                "title": "링크"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c40": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c40",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "1번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45": {
      "id": "c5fc9364-93ab-4e48-83bb-f5d5a8fb3c45",
      "value": [
        {
          "_id": "53747d9a-2c31-4f8d-9ef2-37c9b3eb1690",
          "type": "code",
          "children": [
            {
              "text": "5번",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "e708e609-f74d-44ee-92cc-765271655485": {
      "id": "e708e609-f74d-44ee-92cc-765271655485",
      "value": [
        {
          "_id": "0f35c48f-0f4b-4ca8-91e2-bb540e304ffd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "edc14f5d-d4b1-4be2-9a6b-cec331c4a4fc": {
      "id": "edc14f5d-d4b1-4be2-9a6b-cec331c4a4fc",
      "value": [
        {
          "_id": "4cc004b3-1914-454a-aa77-7230a3bc163b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649881e580dee73d0118843"
  },
  "directoryId": 283,
  "lastOrder": 0,
  "content": {
    "534f0859-ec6f-447f-9cfa-96339245eb7b": {
      "id": "534f0859-ec6f-447f-9cfa-96339245eb7b",
      "value": [
        {
          "_id": "1e2b1e5f-79fb-4ba3-a823-22f238affda3",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649881e580dee73d0118844"
  },
  "directoryId": 284,
  "lastOrder": 9,
  "content": {
    "1d629a7d-5bde-42c2-9433-110b00f512a9": {
      "id": "1d629a7d-5bde-42c2-9433-110b00f512a9",
      "value": [
        {
          "_id": "ebac95ba-5e6f-4ada-8935-01e079fcd4fd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "28c7b2d4-4a97-4ae3-827a-5dd4179ca328": {
      "id": "28c7b2d4-4a97-4ae3-827a-5dd4179ca328",
      "value": [
        {
          "_id": "7fecfbf2-e4f4-4d22-ad96-4b2b1f27fc45",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "509632ce-06b7-49fc-a46f-ed7d7dcabb86": {
      "id": "509632ce-06b7-49fc-a46f-ed7d7dcabb86",
      "value": [
        {
          "_id": "2fdea898-9042-4afa-b40b-8741915935ec",
          "type": "bulleted-list",
          "children": [
            {
              "text": "JasyptConfig.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "597add11-9343-4df4-9b07-efcaabea9f14": {
      "id": "597add11-9343-4df4-9b07-efcaabea9f14",
      "value": [
        {
          "_id": "e90bdcb5-14f0-4b16-9f94-f4713c2e6ae4",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "5aebb651-e6e8-408d-9fc2-e99f365d5621": {
      "id": "5aebb651-e6e8-408d-9fc2-e99f365d5621",
      "value": [
        {
          "_id": "64b5a297-695a-4fdd-8b57-3f701a56822e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.common.config;\n\nimport org.jasypt.encryption.StringEncryptor;\nimport org.jasypt.encryption.pbe.PooledPBEStringEncryptor;\nimport org.jasypt.encryption.pbe.config.SimpleStringPBEConfig;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.PropertySource;\n\n@Configuration\n@PropertySource(\"classpath:jasypt.properties\")\npublic class JasyptConfig {\n\n    @Value(\"${jasypt.key}\")\n    private String key;\n\n    private static final String ALGORITHM = \"PBEWithMD5AndDES\";\n\n    @Bean(name = \"jasyptStringEncryptor\")\n    public StringEncryptor stringEncryptor() {\n        PooledPBEStringEncryptor encryptor = new PooledPBEStringEncryptor();\n        SimpleStringPBEConfig config = new SimpleStringPBEConfig();\n\n        config.setPassword(key);\n        config.setAlgorithm(ALGORITHM);\n        config.setKeyObtentionIterations(\"1000\");\n        config.setPoolSize(\"1\");\n        config.setProviderName(\"SunJCE\");\n        config.setSaltGeneratorClassName(\"org.jasypt.salt.RandomSaltGenerator\");\n        config.setStringOutputType(\"base64\");\n\n        encryptor.setConfig(config);\n\n        return encryptor;\n    }\n}",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "88797c97-c28d-4c59-9c86-bd2365cb73df": {
      "id": "88797c97-c28d-4c59-9c86-bd2365cb73df",
      "value": [
        {
          "_id": "bf61f902-ca4e-4926-b697-f3cb988e8b15",
          "type": "bulleted-list",
          "children": [
            {
              "text": "RedisConfig.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "930666b3-c0f1-40f0-b84f-2e627491b32e": {
      "id": "930666b3-c0f1-40f0-b84f-2e627491b32e",
      "value": [
        {
          "_id": "37d915a4-0f36-4c92-b808-9fa96f93ee58",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJasyptConfig은 문자열을 암호화하는 빈을 설정하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "974063c7-da42-41b6-b01b-cd00bfb6321a": {
      "id": "974063c7-da42-41b6-b01b-cd00bfb6321a",
      "value": [
        {
          "_id": "bc1ca396-c1e9-480c-99e0-8b724e0b90cc",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.common.config;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.connection.RedisStandaloneConfiguration;\nimport org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.serializer.StringRedisSerializer;\n\n@Configuration\npublic class RedisConfig {\n    @Value(\"${spring.data.redis.host}\")\n    private String host;\n\n    @Value(\"${spring.data.redis.port}\")\n    private int port;\n\n    @Value(\"${spring.data.redis.password}\")\n    private String password;\n    /**\n     * Lettuce 라이브러리를 사용하여 레디스 연결 설정\n     */\n    @Bean\n    public RedisConnectionFactory redisConnectionFactory() {\n        RedisStandaloneConfiguration redisConfiguration = new RedisStandaloneConfiguration();\n        redisConfiguration.setHostName(host);\n        redisConfiguration.setPort(port);\n        if (password != null && !password.isBlank()) {\n            redisConfiguration.setPassword(password);\n        }\n        return new LettuceConnectionFactory(redisConfiguration);\n    }\n\n    /**\n     * 레디스에 데이터를 저장하고 검색하기 위한 RedisTemplate 설정\n     */\n    @Bean(name = \"redisTemplate\")\n    public RedisTemplate<?, ?> redisTemplate() {\n        // 바이트 배열 두 개를 key-value로 사용\n        RedisTemplate<byte[], byte[]> redisTemplate = new RedisTemplate<>();\n\n        // 커넥션 생성\n        redisTemplate.setConnectionFactory(redisConnectionFactory());\n\n        redisTemplate.setKeySerializer(new StringRedisSerializer());\n        redisTemplate.setValueSerializer(new StringRedisSerializer());\n        return redisTemplate;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "c9f01f38-0e44-4eeb-9a36-ee23a3591b76": {
      "id": "c9f01f38-0e44-4eeb-9a36-ee23a3591b76",
      "value": [
        {
          "_id": "31d6b1bc-8446-46a9-88d5-ede7192c0db6",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "f580ef28-d43c-4018-96bf-13745bb307e0": {
      "id": "f580ef28-d43c-4018-96bf-13745bb307e0",
      "value": [
        {
          "_id": "c887abc8-463c-410d-be42-55d4f80ea3ef",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "fca83e6a-a722-448d-ac77-a271fa7e2530": {
      "id": "fca83e6a-a722-448d-ac77-a271fa7e2530",
      "value": [
        {
          "_id": "ed8cfe83-f5c3-4a26-8fbc-53abcaf74c10",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n레디스 연결과 데이터 저장을 위한 Redis 설정을 구성하는 Config 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649881e580dee73d0118845"
  },
  "directoryId": 285,
  "lastOrder": 0,
  "content": {
    "7b7a3692-2b81-48c4-9348-513411ef183a": {
      "id": "7b7a3692-2b81-48c4-9348-513411ef183a",
      "value": [
        {
          "_id": "aedbf0a4-3693-46ab-9617-ede1260c130b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66498f27580dee73d0118846"
  },
  "directoryId": 286,
  "lastOrder": 12,
  "content": {
    "1e62cb85-2eb2-43f8-87ef-e434b322af3d": {
      "id": "1e62cb85-2eb2-43f8-87ef-e434b322af3d",
      "value": [
        {
          "_id": "f88ede7d-0e50-4ef2-955d-c9c589c62761",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "2679b389-da66-4993-a32c-cbef01b4d10b": {
      "id": "2679b389-da66-4993-a32c-cbef01b4d10b",
      "value": [
        {
          "_id": "bb92d471-4668-4d06-b49b-638ff300a213",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "332f2bf9-4824-4d01-a6ef-5b41a0746c07": {
      "id": "332f2bf9-4824-4d01-a6ef-5b41a0746c07",
      "value": [
        {
          "_id": "99ecb0d3-cb08-4341-9b15-b9708ef07004",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "3c1d5e8f-d2f4-462c-95b6-fd0663acc27c": {
      "id": "3c1d5e8f-d2f4-462c-95b6-fd0663acc27c",
      "value": [
        {
          "_id": "84807b1d-a227-4ed5-ac0b-641ee7e6a01e",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T14:14:50.007+09:00 ERROR 7976 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "413214c7-d12d-4ad1-9457-8687b4f12ca7": {
      "id": "413214c7-d12d-4ad1-9457-8687b4f12ca7",
      "value": [
        {
          "_id": "a3c2a6f3-2a14-4db1-8c2e-0ae188dab6ad",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJSON 형태의 데이터를 ArrayList<Object> 타입으로 변환할 수 없어 발생한 deserialize 오류입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "45a26a8f-d2ea-4839-b9ba-5dc2e9eeb8cc": {
      "id": "45a26a8f-d2ea-4839-b9ba-5dc2e9eeb8cc",
      "value": [
        {
          "_id": "d017ffa6-a8b4-4e23-a826-94a701e6afa9",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "4e2101c7-dd62-4cf7-ab05-383545371c34": {
      "id": "4e2101c7-dd62-4cf7-ab05-383545371c34",
      "value": [
        {
          "_id": "54fc6f89-e9be-4433-9108-a53e6163e210",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "79a211ec-f26b-4955-adfe-bc038826d50e": {
      "id": "79a211ec-f26b-4955-adfe-bc038826d50e",
      "value": [
        {
          "_id": "560aad40-feb4-4b6d-a2c3-4f8221bc48d0",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "8fa50587-db6f-4676-931b-23331a899c78": {
      "id": "8fa50587-db6f-4676-931b-23331a899c78",
      "value": [
        {
          "_id": "324d1ecc-47d2-49c1-b062-51007216c8e9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "abc3a12f-4ba2-40f7-bd27-d5f7694e273f": {
      "id": "abc3a12f-4ba2-40f7-bd27-d5f7694e273f",
      "value": [
        {
          "_id": "afca61dc-4aab-4f9e-8142-15fec89fc1b2",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "c2fcd9e5-ce5a-463e-90be-a7f5380d1df4": {
      "id": "c2fcd9e5-ce5a-463e-90be-a7f5380d1df4",
      "value": [
        {
          "_id": "83c804dd-4a71-49a8-a826-645530f88259",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분입니다@!!!zz!@@@@@@!@@@@!@#!@#\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "da899a61-fe47-4182-8dc2-f8bbd9fd64cb": {
      "id": "da899a61-fe47-4182-8dc2-f8bbd9fd64cb",
      "value": [
        {
          "_id": "0a74311a-3a0a-40c4-8387-c63c1af2785c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap과 List는 서로 다른 형식이라서 변환할 수 없음.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "eef442ff-cc92-4bad-bdeb-5795556b6664": {
      "id": "eef442ff-cc92-4bad-bdeb-5795556b6664",
      "value": [
        {
          "_id": "3623c678-1a7d-4434-93ac-4027016b3e87",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66498f27580dee73d0118847"
  },
  "directoryId": 287,
  "lastOrder": 8,
  "content": {
    "0b781a82-01a1-4d0b-bfd9-0c40a2bae0be": {
      "id": "0b781a82-01a1-4d0b-bfd9-0c40a2bae0be",
      "value": [
        {
          "_id": "1d6c1b7a-a040-401a-822e-cc707e02d26e",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분!\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "8229ff52-c2e5-4fc8-927f-9f8b2c6cf1a2": {
      "id": "8229ff52-c2e5-4fc8-927f-9f8b2c6cf1a2",
      "value": [
        {
          "_id": "4cd5f369-54b6-4063-80c3-51ae9c0d89df",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "bcc7594c-9b7d-415a-9ebf-d41d1f012b9e": {
      "id": "bcc7594c-9b7d-415a-9ebf-d41d1f012b9e",
      "value": [
        {
          "_id": "38d84066-af9c-4e55-942f-a3bb434847c0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "c31b6e06-6dfb-4308-a4f2-1ba84c3f604c": {
      "id": "c31b6e06-6dfb-4308-a4f2-1ba84c3f604c",
      "value": [
        {
          "_id": "0234f3ee-a11e-42f5-9d1d-c6ff08805bd7",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "d2729f77-7d57-4265-bef1-41b2671acfaf": {
      "id": "d2729f77-7d57-4265-bef1-41b2671acfaf",
      "value": [
        {
          "_id": "5a30d332-bf1c-4796-8d7e-acd6c5fe3b77",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "d390b80c-ec86-42e5-867c-0760e1d6aeef": {
      "id": "d390b80c-ec86-42e5-867c-0760e1d6aeef",
      "value": [
        {
          "_id": "c427bb3c-9b52-4727-9159-e4733f2f8f83",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nService 클래스는 ObjectMapper를 사용하여 Map을 JSON 문자열로 변환하고 다시 List로 변환하는 기능을 수행한다. 만약 변환 과정에서 오류가 발생하면 예외를 던지고 \"변경된 부분!\"을 출력한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "e9535cae-bbbf-4049-b27f-37924a1255dc": {
      "id": "e9535cae-bbbf-4049-b27f-37924a1255dc",
      "value": [
        {
          "_id": "c9bce89d-2e2b-4641-8974-302d8c207977",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "f136a7d4-2031-4ebd-b76c-614678c7c106": {
      "id": "f136a7d4-2031-4ebd-b76c-614678c7c106",
      "value": [
        {
          "_id": "a07b2095-8e00-4d21-8eb3-dc58aa9776de",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "f8e2110a-59c5-41a2-99b3-6fb351dc3560": {
      "id": "f8e2110a-59c5-41a2-99b3-6fb351dc3560",
      "value": [
        {
          "_id": "82e7d9e2-b943-46cb-a916-e8624be1a335",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66499454695d99569f20eea9"
  },
  "directoryId": 288,
  "lastOrder": 33,
  "content": {
    "0106df69-4057-4ef1-8725-756866408ed0": {
      "id": "0106df69-4057-4ef1-8725-756866408ed0",
      "value": [
        {
          "_id": "46427244-6b32-4abd-842a-9ffcbfccc0eb",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "037e7bd6-5abd-419c-94ad-c78473cde471": {
      "id": "037e7bd6-5abd-419c-94ad-c78473cde471",
      "value": [
        {
          "_id": "da563788-4b73-43ff-8789-adeebc05d3a3",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "0b6b7dc9-a425-4694-b16d-6917aff51f1d": {
      "id": "0b6b7dc9-a425-4694-b16d-6917aff51f1d",
      "value": [
        {
          "_id": "f14e03cc-db53-4f2b-9a3e-472b2526cfb9",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "17df05cd-3cb6-4711-9c7e-9b4ec50c76d1": {
      "id": "17df05cd-3cb6-4711-9c7e-9b4ec50c76d1",
      "value": [
        {
          "_id": "1a2d6ddf-87de-4c00-b5d5-5b2a25e68406",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분!@!!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "1ae86518-bc2d-4f65-a569-232b2c005be3": {
      "id": "1ae86518-bc2d-4f65-a569-232b2c005be3",
      "value": [
        {
          "_id": "e0e0dbc0-376f-4907-9e58-398ad005a79f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "1e48a5a1-dc37-4f87-aeb8-f54bedd6d58b": {
      "id": "1e48a5a1-dc37-4f87-aeb8-f54bedd6d58b",
      "value": [
        {
          "_id": "684eca18-1515-4d56-824a-867304490048",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분!@!!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "25ec77fa-09c3-429b-9b14-2601efa69f3c": {
      "id": "25ec77fa-09c3-429b-9b14-2601efa69f3c",
      "value": [
        {
          "_id": "c5fd46a7-68ce-4c45-951d-b6caf16fcbbb",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "26a006b6-9c7f-4a10-89a1-115edb7f41dd": {
      "id": "26a006b6-9c7f-4a10-89a1-115edb7f41dd",
      "value": [
        {
          "_id": "d83da063-4c1e-4f20-aac3-2e203580f33f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "2704dfdc-dd8a-41d7-9718-b62c871979fc": {
      "id": "2704dfdc-dd8a-41d7-9718-b62c871979fc",
      "value": [
        {
          "_id": "478a5ae8-7463-4fdc-ba43-87c1f16462b7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "3de49713-8d08-4b10-b69d-bb9a748c7ec7": {
      "id": "3de49713-8d08-4b10-b69d-bb9a748c7ec7",
      "value": [
        {
          "_id": "8da151a0-2cf1-48b1-aceb-5951b4662eb5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "47de39eb-c2c0-4e18-af07-dfa1294746f0": {
      "id": "47de39eb-c2c0-4e18-af07-dfa1294746f0",
      "value": [
        {
          "_id": "cbdbf13a-07bd-4586-ae24-7fdfc1e2061d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJSON 데이터를 ArrayList<Object>로 변환할 수 없어서 발생한 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "4d4fb2da-b74b-4fcd-842c-c7aa77622ad0": {
      "id": "4d4fb2da-b74b-4fcd-842c-c7aa77622ad0",
      "value": [
        {
          "_id": "08e76e4a-5d58-444c-a3f0-01a888ffc51c",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분!@!!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "50dff7fe-ed14-4daf-9962-a079018d9f00": {
      "id": "50dff7fe-ed14-4daf-9962-a079018d9f00",
      "value": [
        {
          "_id": "eba57e15-4236-4c93-9a2c-10e0bc193a3c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "5761c304-af39-4937-84e3-9d8650f7048e": {
      "id": "5761c304-af39-4937-84e3-9d8650f7048e",
      "value": [
        {
          "_id": "d4fbb75d-deca-43f2-b919-5c88cc671d2b",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T14:42:07.934+09:00 ERROR 31444 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "5aa2724f-7c74-4046-81a9-abe5f7692b6f": {
      "id": "5aa2724f-7c74-4046-81a9-abe5f7692b6f",
      "value": [
        {
          "_id": "0f340d57-2224-4a38-98f2-a442e76ac3c8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "5bfa0ba1-b8f9-4ba0-915f-de3d9674c6a6": {
      "id": "5bfa0ba1-b8f9-4ba0-915f-de3d9674c6a6",
      "value": [
        {
          "_id": "cf573eed-e9d7-4a2e-a663-ac371665a823",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분!@!!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "5ed6e0cc-8b97-4004-993f-fca0120f92f8": {
      "id": "5ed6e0cc-8b97-4004-993f-fca0120f92f8",
      "value": [
        {
          "_id": "76c5eab8-794a-4253-bb00-7c67dd9f91ad",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "68ac3e1f-7155-4675-8942-f8a78c87ac28": {
      "id": "68ac3e1f-7155-4675-8942-f8a78c87ac28",
      "value": [
        {
          "_id": "b07cb829-9740-4ab5-b347-d440ca349978",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "6c81be4a-de4f-49ff-a6be-59ece1aca8c4": {
      "id": "6c81be4a-de4f-49ff-a6be-59ece1aca8c4",
      "value": [
        {
          "_id": "68da6fa7-329a-468f-8f1b-10c6627a5d68",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "7b977754-4eca-47e5-8abe-b5f0a197b569": {
      "id": "7b977754-4eca-47e5-8abe-b5f0a197b569",
      "value": [
        {
          "_id": "ad839ad4-bc7a-4c04-a319-0808324031e1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "863461b7-c1d4-4140-b892-734e3c3e766e": {
      "id": "863461b7-c1d4-4140-b892-734e3c3e766e",
      "value": [
        {
          "_id": "43f87ecc-5c75-4c35-8bd9-b9b2d8ff6539",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n객체를 JSON 문자열로 변환하고 다시 리스트로 변환하는 메서드를 실행하는 서비스 클래스입니다. 변경된 부분 출력.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "8e017180-287c-467d-b31f-2942cd0be184": {
      "id": "8e017180-287c-467d-b31f-2942cd0be184",
      "value": [
        {
          "_id": "d0ed30e6-4ec8-40bf-9bd7-fad3c697b484",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJson 데이터를 ArrayList<Object> 타입으로 역직렬화할 수 없어서 발생한 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 32,
        "depth": 0
      }
    },
    "a61be5e4-81ef-4ee5-9777-a08cf69bde85": {
      "id": "a61be5e4-81ef-4ee5-9777-a08cf69bde85",
      "value": [
        {
          "_id": "ba66824a-140c-4c35-a6a6-5ad3a7627feb",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T14:42:39.120+09:00 ERROR 18408 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "a86eebe5-cd32-4e57-ba8b-d6ebd89f6b0c": {
      "id": "a86eebe5-cd32-4e57-ba8b-d6ebd89f6b0c",
      "value": [
        {
          "_id": "fa3da6a1-b67d-4414-8c23-46bb35100ab6",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "aeb58172-0c98-4383-9136-2a5c97ba8bf3": {
      "id": "aeb58172-0c98-4383-9136-2a5c97ba8bf3",
      "value": [
        {
          "_id": "82dc6318-9a96-4b77-9480-e9d1284ebaa3",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "cd831c5d-13d4-4b22-80b2-9a42193f53ef": {
      "id": "cd831c5d-13d4-4b22-80b2-9a42193f53ef",
      "value": [
        {
          "_id": "3e8905d8-bc70-487e-b056-83d092568bb0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 33,
        "depth": 0
      }
    },
    "d791bde5-94ca-4f26-b7af-14d09d9f16ec": {
      "id": "d791bde5-94ca-4f26-b7af-14d09d9f16ec",
      "value": [
        {
          "_id": "934e654e-3b21-483f-a9dc-cb7bce470533",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "da923c09-b29f-4cf9-a975-bfce2bbae493": {
      "id": "da923c09-b29f-4cf9-a975-bfce2bbae493",
      "value": [
        {
          "_id": "6ec5bff5-497f-421f-ae9f-fc4aa69fdaff",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "dd7acd71-4648-4192-a43b-b006d8e7182b": {
      "id": "dd7acd71-4648-4192-a43b-b006d8e7182b",
      "value": [
        {
          "_id": "9a73ce90-917c-48bd-bb19-6441520a7a39",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "e57acf4c-fe5f-46ad-93cb-5e5259821a8c": {
      "id": "e57acf4c-fe5f-46ad-93cb-5e5259821a8c",
      "value": [
        {
          "_id": "5fbe8b36-cfa5-42c3-96a9-44652096acea",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nService 클래스는 ObjectMapper를 사용하여 Map을 JSON 문자열로 변환하고, 변환된 JSON 문자열을 다시 List로 변환하는 메소드를 가지고 있습니다. 변환 작업 중에 발생한 예외는 런타임 예외로 처리되며, \"변경된 부분!@!!@\"이라는 메시지를 출력합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "e5c335bc-dcae-4e92-a492-5d7582efc839": {
      "id": "e5c335bc-dcae-4e92-a492-5d7582efc839",
      "value": [
        {
          "_id": "80ce6a33-2f24-49bf-bdad-8541caab524c",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "f3b3d668-7e92-4921-ac50-555beda1cdfa": {
      "id": "f3b3d668-7e92-4921-ac50-555beda1cdfa",
      "value": [
        {
          "_id": "007d79ab-e376-46a9-980d-f1393402ff57",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "f5ee38be-cbe7-4bf8-baa7-6841582b54a7": {
      "id": "f5ee38be-cbe7-4bf8-baa7-6841582b54a7",
      "value": [
        {
          "_id": "c4c2a466-ae6c-49d8-b6c2-be9f89e536fd",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "fbf97bd3-cb2b-450c-b222-cc3aae693d36": {
      "id": "fbf97bd3-cb2b-450c-b222-cc3aae693d36",
      "value": [
        {
          "_id": "29505f68-b527-427d-a0d2-8abb6304522c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "fdf1a062-abef-41e6-b62f-1aeddb3932ea": {
      "id": "fdf1a062-abef-41e6-b62f-1aeddb3932ea",
      "value": [
        {
          "_id": "b634688b-5017-4abc-b2b0-996af2f6735e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "66499b5d695d99569f20eeaa"
  },
  "directoryId": 289,
  "lastOrder": 26,
  "content": {
    "20af649f-c08c-4c69-8f5e-88c2d1ce4cb2": {
      "id": "20af649f-c08c-4c69-8f5e-88c2d1ce4cb2",
      "value": [
        {
          "_id": "9231d4fe-5c85-4a25-81a1-9608aa717271",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경된 부분!@!!@\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "251920c9-4bfd-4d6f-9fa7-3596259df022": {
      "id": "251920c9-4bfd-4d6f-9fa7-3596259df022",
      "value": [
        {
          "_id": "e3051857-ce5e-48b8-affc-d3be8f87e080",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "28f85ecd-a8c1-4c16-ab1e-bdaacdfc50f0": {
      "id": "28f85ecd-a8c1-4c16-ab1e-bdaacdfc50f0",
      "value": [
        {
          "_id": "691e0ad9-cd26-400f-a210-08057a0b787c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "2fc400a9-5ec8-497e-8678-ce111d52872d": {
      "id": "2fc400a9-5ec8-497e-8678-ce111d52872d",
      "value": [
        {
          "_id": "015d5c08-894a-44a7-9836-2afaf9c48357",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T15:22:38.176+09:00 ERROR 33232 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "3f66ab5f-ddd7-4f66-8e86-5f1a52ebaebe": {
      "id": "3f66ab5f-ddd7-4f66-8e86-5f1a52ebaebe",
      "value": [
        {
          "_id": "76d2d71a-ef6d-459e-9724-429930b7eeab",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "6c55252a-6d16-4c45-8bdf-ce4301b5684c": {
      "id": "6c55252a-6d16-4c45-8bdf-ce4301b5684c",
      "value": [
        {
          "_id": "2c2c81cd-1222-4d74-8590-cd976d38a290",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "710ebced-3417-4e18-91a1-7bcb1666072c": {
      "id": "710ebced-3417-4e18-91a1-7bcb1666072c",
      "value": [
        {
          "_id": "b436acbb-3d14-404a-859b-6214116244d7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "8cbfa636-c558-4140-a899-68b30e19943e": {
      "id": "8cbfa636-c558-4140-a899-68b30e19943e",
      "value": [
        {
          "_id": "bef03da5-191e-46ba-bdf6-db983de1b4b8",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "a9a6993e-0516-4b5a-b979-bbf7c7361b21": {
      "id": "a9a6993e-0516-4b5a-b979-bbf7c7361b21",
      "value": [
        {
          "_id": "88691ad9-fd5e-4c71-80e3-de254a5e2662",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJsonToken.START_OBJECT 토큰을 ArrayList<java.lang.Object> 타입으로 역직렬화할 수 없어서 발생한 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "cbf2c085-ab93-45a2-80af-093ec9b8da4e": {
      "id": "cbf2c085-ab93-45a2-80af-093ec9b8da4e",
      "value": [
        {
          "_id": "08431a35-d469-47f6-bf01-346a16a6e30e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "ee671ba9-bcf2-4981-9fb8-49a967be197a": {
      "id": "ee671ba9-bcf2-4981-9fb8-49a967be197a",
      "value": [
        {
          "_id": "996b49bb-0ea8-4fc4-b30e-5c20eb667b60",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "f1af98b3-9ca3-4ff7-9095-713730626bc8": {
      "id": "f1af98b3-9ca3-4ff7-9095-713730626bc8",
      "value": [
        {
          "_id": "caef92d8-f1a8-4936-b3ae-f035582965e4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "f3251b9c-06c1-4842-91fc-4c4e395dd251": {
      "id": "f3251b9c-06c1-4842-91fc-4c4e395dd251",
      "value": [
        {
          "_id": "d35e8fa5-43b8-4018-afa7-4b12c1a87f21",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649a434fa3bf260a286ca59"
  },
  "directoryId": 290,
  "lastOrder": 33,
  "content": {
    "05883414-0289-4a90-bdb6-a158a78296a7": {
      "id": "05883414-0289-4a90-bdb6-a158a78296a7",
      "value": [
        {
          "_id": "ae0a540b-07c5-4a6a-82c5-81eda7dcbcce",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 33,
        "depth": 0
      }
    },
    "08e56eb1-266a-460c-a06b-dc620955bbc8": {
      "id": "08e56eb1-266a-460c-a06b-dc620955bbc8",
      "value": [
        {
          "_id": "ee155dc6-de16-4c44-b6be-a15715162eac",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "141e31b9-e823-479e-9d80-63b09b87d3d7": {
      "id": "141e31b9-e823-479e-9d80-63b09b87d3d7",
      "value": [
        {
          "_id": "d4690bcc-0a8e-4fb6-a9ad-dc11c06c317b",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T15:34:49.047+09:00 ERROR 13928 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "1491bc25-9635-42f8-be00-7037a1b6c7d7": {
      "id": "1491bc25-9635-42f8-be00-7037a1b6c7d7",
      "value": [
        {
          "_id": "ad169ec0-f93d-4ab3-8841-589a87f70b5f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "15fd9f92-155d-47ed-af7f-5f779ceb889e": {
      "id": "15fd9f92-155d-47ed-af7f-5f779ceb889e",
      "value": [
        {
          "_id": "c05442c3-341f-41b2-bc09-864d02048669",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "2102dab0-a3fc-49ca-85be-fa9261765759": {
      "id": "2102dab0-a3fc-49ca-85be-fa9261765759",
      "value": [
        {
          "_id": "d35246d3-d636-4a56-a9cf-ad4cfe4265ca",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n맵을 JSON 문자열로 변환하고, 다시 리스트로 변환하려 하면서 에러가 발생하는 메서드입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "223feaa2-446f-43c1-83a3-5608fe46ae37": {
      "id": "223feaa2-446f-43c1-83a3-5608fe46ae37",
      "value": [
        {
          "_id": "ea310f9f-7060-4776-ad33-a9cc371c2557",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환할 수 없으므로 에러가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "22f67c04-8d29-4b29-b54e-b39bad8b5c95": {
      "id": "22f67c04-8d29-4b29-b54e-b39bad8b5c95",
      "value": [
        {
          "_id": "942fe0f5-1b21-489a-a3ab-c9726fce6566",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "2af5e399-d70b-45f9-8251-2674b36b0276": {
      "id": "2af5e399-d70b-45f9-8251-2674b36b0276",
      "value": [
        {
          "_id": "c4e5f08b-ecbf-45b2-a0ce-36b34184e3d2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n맵을 JSON으로 변환하고 다시 리스트로 변환하는 기능을 수행하는 서비스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "33e86972-acdb-4e48-bce5-46aa347d222a": {
      "id": "33e86972-acdb-4e48-bce5-46aa347d222a",
      "value": [
        {
          "_id": "1bb3d8c7-4677-49c5-bde5-348de6469637",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"하이하이~~\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "39212297-32ca-4d9c-a52e-5268e38c6688": {
      "id": "39212297-32ca-4d9c-a52e-5268e38c6688",
      "value": [
        {
          "_id": "d4284b19-9b24-4efd-a287-fbd08cda5f70",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "3efed96b-4888-4207-b105-117a8210978c": {
      "id": "3efed96b-4888-4207-b105-117a8210978c",
      "value": [
        {
          "_id": "bbd192f2-b9f4-4ea6-9acc-67d4c9e4ed4a",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 처리 중에 발생한 JSON 형식 불일치 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "437515dd-eed4-4f22-88b5-f6d9dce81a48": {
      "id": "437515dd-eed4-4f22-88b5-f6d9dce81a48",
      "value": [
        {
          "_id": "c09133f8-cf6f-4fe2-879d-126aaab501dd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "5dc1e902-1f78-49b0-9d28-79a437d30280": {
      "id": "5dc1e902-1f78-49b0-9d28-79a437d30280",
      "value": [
        {
          "_id": "319e7ba3-d59b-4264-9602-1ce4002317ba",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "6521e89e-1982-4984-a8a3-4f96fa33cf9c": {
      "id": "6521e89e-1982-4984-a8a3-4f96fa33cf9c",
      "value": [
        {
          "_id": "256332b8-0e24-45ea-b2b4-267b6eeb3cf4",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "69d3e500-6581-47da-8806-5e05ff929656": {
      "id": "69d3e500-6581-47da-8806-5e05ff929656",
      "value": [
        {
          "_id": "f8d62698-9d0c-411b-8b5e-373c016e061b",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"바뀌고 에러나기\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "6ac779e8-6236-41b9-bfbe-0baab60d65ad": {
      "id": "6ac779e8-6236-41b9-bfbe-0baab60d65ad",
      "value": [
        {
          "_id": "1f637402-048c-45ed-ba9a-21ed6db23f58",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "70fd9048-0bb8-41ec-b45b-36c0172fd702": {
      "id": "70fd9048-0bb8-41ec-b45b-36c0172fd702",
      "value": [
        {
          "_id": "43448d8d-b5ec-4dd3-8c20-a93e5bd5cd9c",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "71698a64-237d-443a-bb15-fa26010606ec": {
      "id": "71698a64-237d-443a-bb15-fa26010606ec",
      "value": [
        {
          "_id": "adf106dd-83e0-4134-8de3-a8c2d24147be",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "80265323-753f-4a55-8616-85c7a7785188": {
      "id": "80265323-753f-4a55-8616-85c7a7785188",
      "value": [
        {
          "_id": "c07bf51c-fbcf-4ccc-8921-ce40b1509a9d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청으로 온 JSON 데이터를 ArrayList<Object>로 역직렬화하는 과정에서 형식 불일치로 에러가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 32,
        "depth": 0
      }
    },
    "85934873-2eff-494e-ad1b-cbc1aee2f748": {
      "id": "85934873-2eff-494e-ad1b-cbc1aee2f748",
      "value": [
        {
          "_id": "2aba8e98-b8fd-4477-8c6e-a6f565062073",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T15:38:23.312+09:00 ERROR 29952 --- [demo] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "897cc04e-7128-44ac-bb93-9de5ff961ead": {
      "id": "897cc04e-7128-44ac-bb93-9de5ff961ead",
      "value": [
        {
          "_id": "522da36c-58b6-47ff-baaf-f583be25378e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "8fc9d2ec-62ed-4959-8b85-f4d160a5b992": {
      "id": "8fc9d2ec-62ed-4959-8b85-f4d160a5b992",
      "value": [
        {
          "_id": "11d4a090-105b-4d0c-8b8c-c3d394c52da2",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "9e2aef8b-7844-4f3d-800a-4f260058f66c": {
      "id": "9e2aef8b-7844-4f3d-800a-4f260058f66c",
      "value": [
        {
          "_id": "ef60b905-da31-4ce8-843c-87afb3ee2ac4",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"바뀌고 에러나기\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "a898ec1f-a6a2-4434-8937-cb1bd456215f": {
      "id": "a898ec1f-a6a2-4434-8937-cb1bd456215f",
      "value": [
        {
          "_id": "05307d07-4dd9-4596-9bd0-0140d4a2fbe0",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"변경합쉬다\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "a9e111fb-c40d-4a40-98d9-244e5a331712": {
      "id": "a9e111fb-c40d-4a40-98d9-244e5a331712",
      "value": [
        {
          "_id": "f9ffce45-9b35-40f6-96c0-441363b31843",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "b0e1f879-fef8-4518-8c16-b4e2623dac1f": {
      "id": "b0e1f879-fef8-4518-8c16-b4e2623dac1f",
      "value": [
        {
          "_id": "a1a3c26e-1266-45c2-860b-a9a0cff2d794",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "b67f98d7-0540-41b2-8dfe-839477d7eb7c": {
      "id": "b67f98d7-0540-41b2-8dfe-839477d7eb7c",
      "value": [
        {
          "_id": "86a7caf2-1423-4ecd-9da6-94fadac2637e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "b8900bda-0ffb-49a9-8495-1b2834586bf2": {
      "id": "b8900bda-0ffb-49a9-8495-1b2834586bf2",
      "value": [
        {
          "_id": "6c50dba9-9cbf-488d-ad81-0f5413dbd946",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "bb0484b7-13e7-4ff2-a9c5-4333accfcc24": {
      "id": "bb0484b7-13e7-4ff2-a9c5-4333accfcc24",
      "value": [
        {
          "_id": "cc2ff3fe-7131-4c6e-befd-2c6e2ab13e5f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "d07d27a2-10c4-4574-8db4-6a9da7101a25": {
      "id": "d07d27a2-10c4-4574-8db4-6a9da7101a25",
      "value": [
        {
          "_id": "4908c415-d46f-40c7-8e19-d94fa3a3f272",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "d08f7c54-b6de-478d-bbc4-b577e4d01e3a": {
      "id": "d08f7c54-b6de-478d-bbc4-b577e4d01e3a",
      "value": [
        {
          "_id": "ed8931fb-9ad9-4c47-809d-298051a1c49a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "d376015f-d6e4-42fb-8bed-8e94b5429e59": {
      "id": "d376015f-d6e4-42fb-8bed-8e94b5429e59",
      "value": [
        {
          "_id": "c09a232d-808c-42b4-ad58-1af1f6e08c8f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "d6ee4228-d652-4d47-b41b-4920614073a6": {
      "id": "d6ee4228-d652-4d47-b41b-4920614073a6",
      "value": [
        {
          "_id": "5e976026-fef2-4fc5-80d3-297fa70d64d1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "de203437-1f10-46bc-af69-c0afbf0a53da": {
      "id": "de203437-1f10-46bc-af69-c0afbf0a53da",
      "value": [
        {
          "_id": "39cd7e52-2204-4987-bb9c-2949ea6090fc",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 24,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649a434fa3bf260a286ca5a"
  },
  "directoryId": 292,
  "lastOrder": 33,
  "content": {
    "0592a063-c269-4988-a9ef-6157dc43d6c8": {
      "id": "0592a063-c269-4988-a9ef-6157dc43d6c8",
      "value": [
        {
          "_id": "04196915-b95c-47cf-be63-231040ad7f3c",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "10f770b5-e361-4b91-89b5-2f8f7e380b8b": {
      "id": "10f770b5-e361-4b91-89b5-2f8f7e380b8b",
      "value": [
        {
          "_id": "e765cef7-c44a-4a51-81a4-51aed03027ff",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T15:45:57.943+09:00 ERROR 30868 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "195a5dcf-ede0-4be8-baf0-fbb266fe3549": {
      "id": "195a5dcf-ede0-4be8-baf0-fbb266fe3549",
      "value": [
        {
          "_id": "67cdd58a-838e-4de9-aa38-ed38d00362d1",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"바뀌고 성공2\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "208aa2b1-6999-404f-902e-61f265d767d7": {
      "id": "208aa2b1-6999-404f-902e-61f265d767d7",
      "value": [
        {
          "_id": "76b9cf4f-a219-40d5-a6d2-13fd44a5adda",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "2a07bcb6-2051-4675-89f0-95e0360b4f2f": {
      "id": "2a07bcb6-2051-4675-89f0-95e0360b4f2f",
      "value": [
        {
          "_id": "68d06b53-a2f6-425e-a9c3-59e6bdbf8c74",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "2a52b81e-4e17-40b4-9e70-3120c56edff5": {
      "id": "2a52b81e-4e17-40b4-9e70-3120c56edff5",
      "value": [
        {
          "_id": "a091584d-9d49-4edd-8dd4-1c35c402273d",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "2dc15838-8a97-4a7a-a47b-4ccd6611077d": {
      "id": "2dc15838-8a97-4a7a-a47b-4ccd6611077d",
      "value": [
        {
          "_id": "3c1724f3-3f9c-498f-875f-a241d5bf65d4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "2f04cc0f-acc9-431e-b6c5-d142a99c3fc6": {
      "id": "2f04cc0f-acc9-431e-b6c5-d142a99c3fc6",
      "value": [
        {
          "_id": "ce4a47c7-9b91-4225-93d6-016ea5eab3ec",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "2f5e8638-9c23-46c1-b0f2-1bea22987bf8": {
      "id": "2f5e8638-9c23-46c1-b0f2-1bea22987bf8",
      "value": [
        {
          "_id": "956a1a07-17b5-44fd-8f1e-600304157ebe",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nService 클래스에서는 ObjectMapper를 사용하여 Map을 JSON 문자열로 변환한 후, 다시 JSON 문자열을 List로 변환하는 작업을 수행한다. 변환 과정에서 발생하는 예외는 RuntimeException으로 처리되며, 최종적으로 \"바뀌고 성공2\"를 출력한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "31c45aa2-6028-45af-8af3-35c71d6213fa": {
      "id": "31c45aa2-6028-45af-8af3-35c71d6213fa",
      "value": [
        {
          "_id": "f4ef4e68-7ed8-4a4d-97f3-5f3186de6314",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "3b3ad7b8-ba87-4349-bcb8-31a18dd0c523": {
      "id": "3b3ad7b8-ba87-4349-bcb8-31a18dd0c523",
      "value": [
        {
          "_id": "b8143539-f261-45cf-85b3-dd80cea935ca",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nObjectMapper를 사용하여 Map을 JSON 문자열로 변환하고 다시 List로 변환하는 과정에서 예외가 발생하는 서비스 메서드입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "4847e612-5911-4074-aaab-8c6e1b2fa154": {
      "id": "4847e612-5911-4074-aaab-8c6e1b2fa154",
      "value": [
        {
          "_id": "43029773-d704-459a-af92-483d40ca8134",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"바뀌고 에러2\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "49802752-1700-47c2-9340-615a78d5e921": {
      "id": "49802752-1700-47c2-9340-615a78d5e921",
      "value": [
        {
          "_id": "89a9eac5-5cb5-4469-84cd-858a0583d2e4",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "4cbb6533-d0b0-45e0-a156-07af1a23e684": {
      "id": "4cbb6533-d0b0-45e0-a156-07af1a23e684",
      "value": [
        {
          "_id": "3e677d19-e42e-46a1-9c23-a9eb1770eb16",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nMap 타입을 List 타입으로 변환할 때 에러가 발생하였습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "569c9cc9-43d5-4b66-bb64-9f97c86cd7d8": {
      "id": "569c9cc9-43d5-4b66-bb64-9f97c86cd7d8",
      "value": [
        {
          "_id": "746126c2-82e7-4ece-bb03-e886f54e5853",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "5ab3e34f-4884-40f9-b7c6-5f88579ed8a9": {
      "id": "5ab3e34f-4884-40f9-b7c6-5f88579ed8a9",
      "value": [
        {
          "_id": "ae4b0a87-0262-4569-9711-1a03d24f45f0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "5e4d0fec-f4ae-464d-98c3-7f79e4104ad5": {
      "id": "5e4d0fec-f4ae-464d-98c3-7f79e4104ad5",
      "value": [
        {
          "_id": "63ac9dc6-b829-4de4-ade8-bf0c45931aa0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java : 22",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "6c39c719-0ac3-4940-a355-3676090dc82d": {
      "id": "6c39c719-0ac3-4940-a355-3676090dc82d",
      "value": [
        {
          "_id": "4adf1eea-c3fd-4588-a2b7-bb8ca17d051f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "6d94583b-1c60-4909-9940-5d94236ac2b7": {
      "id": "6d94583b-1c60-4909-9940-5d94236ac2b7",
      "value": [
        {
          "_id": "3519ab37-7055-4359-9f39-4bff35142ff5",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "738b9b02-172e-4eeb-b4c7-daead95cd0e7": {
      "id": "738b9b02-172e-4eeb-b4c7-daead95cd0e7",
      "value": [
        {
          "_id": "044afdb3-6863-4312-92cc-9592e827b2b5",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "9137e174-7628-425e-87f5-0b4407262453": {
      "id": "9137e174-7628-425e-87f5-0b4407262453",
      "value": [
        {
          "_id": "5822e5f7-4f98-4eef-850f-db76744bf44e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "9838ea43-2571-42f4-af89-3632b04f68c0": {
      "id": "9838ea43-2571-42f4-af89-3632b04f68c0",
      "value": [
        {
          "_id": "7e73c8cb-57dc-4a83-b711-e9958f759742",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"바뀌고 성공2\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "a1ffc6a5-67c2-4561-bf22-7ce9e1744d49": {
      "id": "a1ffc6a5-67c2-4561-bf22-7ce9e1744d49",
      "value": [
        {
          "_id": "0d228107-873a-4c10-a5c0-836c5f06a02c",
          "type": "code",
          "children": [
            {
              "text": "package com.example.demo;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@org.springframework.stereotype.Service\npublic class Service {\n\n    public void doSomething(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"123\");\n        map.put(\"b\", \"234\");\n        map.put(\"c\", \"345\");\n\n        try {\n            String a = objectMapper.writeValueAsString(map);\n            List<String> list = objectMapper.readValue(a, List.class);\n            list.get(0);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n\n        System.out.println(\"바뀌고 에러2\");\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "a993fc00-fd14-4d0b-8511-a2739117b9a1": {
      "id": "a993fc00-fd14-4d0b-8511-a2739117b9a1",
      "value": [
        {
          "_id": "5f6089bc-b300-41c5-8fdb-4792d86b2daa",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 처리 중 발생한 오류로, JSON 데이터를 ArrayList<Object> 타입으로 역직렬화할 수 없어 발생한 것으로 보인다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "b3936c57-15cc-4a2b-9454-42c62bd23ee3": {
      "id": "b3936c57-15cc-4a2b-9454-42c62bd23ee3",
      "value": [
        {
          "_id": "f514af47-d1a6-492a-9a58-265b5a869151",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "b9cfe235-5dd4-4953-8b29-02d0066c9588": {
      "id": "b9cfe235-5dd4-4953-8b29-02d0066c9588",
      "value": [
        {
          "_id": "cedfdbe0-5ec8-419c-b7ee-b73337058f44",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "bf062cfb-b7e3-4ece-bac3-47f49bb16975": {
      "id": "bf062cfb-b7e3-4ece-bac3-47f49bb16975",
      "value": [
        {
          "_id": "ff337067-4e24-4e69-99a3-69d3b5b515e6",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 33,
        "depth": 0
      }
    },
    "c0143513-6d33-4abd-933a-f3ebfb91c661": {
      "id": "c0143513-6d33-4abd-933a-f3ebfb91c661",
      "value": [
        {
          "_id": "be509439-dd56-4f17-9519-bb0a41c7508d",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "d5d875cc-e118-42c2-ab0a-eedfc28b3940": {
      "id": "d5d875cc-e118-42c2-ab0a-eedfc28b3940",
      "value": [
        {
          "_id": "750968bf-b6e8-465c-b69c-f373cdaf6073",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T15:43:47.713+09:00 ERROR 19872 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: (String)\"{\"a\":\"123\",\"b\":\"234\",\"c\":\"345\"}\"; line: 1, column: 1]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.example.demo.Service.doSomething(Service.java:22) ~[classes/:na]\n\tat com.example.demo.Controller.test(Controller.java:15) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "dfe9711e-377c-4dc4-aa85-d29151b7604b": {
      "id": "dfe9711e-377c-4dc4-aa85-d29151b7604b",
      "value": [
        {
          "_id": "38841dc5-b2a9-49ca-a984-2069b87d70b2",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "e7956f41-2f3b-42bc-b7af-20411c0285bd": {
      "id": "e7956f41-2f3b-42bc-b7af-20411c0285bd",
      "value": [
        {
          "_id": "811107b3-3769-44ee-a23b-8fa4a19a161a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "f00fbcf5-a5eb-4ce0-994f-de7994e368c2": {
      "id": "f00fbcf5-a5eb-4ce0-994f-de7994e368c2",
      "value": [
        {
          "_id": "944e829f-3c03-4b84-8ca6-5cf6961eca76",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "f268c4da-e9dd-4d9a-a0ec-6d6a3cf51660": {
      "id": "f268c4da-e9dd-4d9a-a0ec-6d6a3cf51660",
      "value": [
        {
          "_id": "678cdc7a-081d-4ab0-bdd6-1d39162e37b2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 처리 중에 JSON 형식이 맞지 않아서 발생한 에러이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 32,
        "depth": 0
      }
    },
    "fa8e7696-8d0c-41ae-864c-57b28ac93c80": {
      "id": "fa8e7696-8d0c-41ae-864c-57b28ac93c80",
      "value": [
        {
          "_id": "04527606-1ad0-4f9c-b404-e386c9e5e09c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "Service.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "ffe5204c-4172-4eb7-aa35-e7944a4dc85a": {
      "id": "ffe5204c-4172-4eb7-aa35-e7944a4dc85a",
      "value": [
        {
          "_id": "00e8fc5c-a0b0-4c58-a81a-0074888f1d43",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649b80c58b0806fa6ef89b4"
  },
  "directoryId": 294,
  "lastOrder": -1,
  "content": {
    "14b98671-9cb5-41f2-a06a-26b6b25f9ba9": {
      "id": "14b98671-9cb5-41f2-a06a-26b6b25f9ba9",
      "value": [
        {
          "_id": "da01f961-dd37-4947-b44b-f74e6a20451a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649c1ec31539d74cc0d4e90"
  },
  "directoryId": 295,
  "lastOrder": 15,
  "content": {
    "09ae0148-9ef8-4862-8795-2531750377ec": {
      "id": "09ae0148-9ef8-4862-8795-2531750377ec",
      "value": [
        {
          "_id": "adab0905-e613-4220-836f-5895be80f52e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://k10d209.p.ssafy.io/editor/295",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://k10d209.p.ssafy.io/editor/295",
                "title": "https://k10d209.p.ssafy.io/editor/295"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "2095b8dc-0f44-4a0f-9390-e0f5da8747c8": {
      "id": "2095b8dc-0f44-4a0f-9390-e0f5da8747c8",
      "value": [
        {
          "_id": "3945f737-9ab9-48ff-8cac-d1eefb8fb457",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "4be7315b-3f0e-45af-a7b5-ab8513ccd702": {
      "id": "4be7315b-3f0e-45af-a7b5-ab8513ccd702",
      "value": [
        {
          "_id": "00e10555-18f3-4993-9549-98e4915a162f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n해당 URL에 접속한 결과, 내용을 확인할 수 없었습니다. 다시 한번 확인해 주시거나, 다른 내용으로 문의해주시면 감사하겠습니다. 유효한 내용을 제공하신다면 제가 도와드릴 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 2
      }
    },
    "7b6ffb66-790c-45ea-9319-60c9d7a14e79": {
      "id": "7b6ffb66-790c-45ea-9319-60c9d7a14e79",
      "value": [
        {
          "_id": "6be07d6d-11cd-4b52-bebe-ffcfd5bc492b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://bestinu.tistory.com/45",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://bestinu.tistory.com/45",
                "title": "https://bestinu.tistory.com/45"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "8cc4b262-853c-4401-a9ec-6ddd9373f430": {
      "id": "8cc4b262-853c-4401-a9ec-6ddd9373f430",
      "value": [
        {
          "_id": "a4b8cb24-effe-40af-b9c0-4f4e0c866a3c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n해당 URL에 대한 정보를 직접 제공하지 않기 때문에, 내용에 대한 요약을 제공할 수 없습니다. URL을 클릭하거나 방문해야만 사이트의 내용을 확인할 수 있습니다. 죄송합니다만, 추가적인 정보를 제공해주시면 더 도움이 될 것 같습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 2
      }
    },
    "9e9364e8-e1c7-4380-872a-90d19a90e83f": {
      "id": "9e9364e8-e1c7-4380-872a-90d19a90e83f",
      "value": [
        {
          "_id": "269bc71f-5895-4bfc-961e-13472b64f895",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "d31821dd-7b15-45f0-bf50-5787bac226af": {
      "id": "d31821dd-7b15-45f0-bf50-5787bac226af",
      "value": [
        {
          "_id": "a7125943-fc61-4bd2-a044-23e121023fcb",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "db394f20-beea-4769-abaf-b3136def1f06": {
      "id": "db394f20-beea-4769-abaf-b3136def1f06",
      "value": [
        {
          "_id": "1e5da3d4-80d8-403e-b3ac-f634dbdabe80",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "e82cc25d-095e-49f5-8412-84c581a9fdf4": {
      "id": "e82cc25d-095e-49f5-8412-84c581a9fdf4",
      "value": [
        {
          "_id": "3c2327cc-80a2-4c4d-93b1-9424563bbdf2",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://k10d209.p.ssafy.io/editor",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://k10d209.p.ssafy.io/editor",
                "title": "https://k10d209.p.ssafy.io/editor"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "f741addc-7cf7-4286-bf13-ca99ecdd4116": {
      "id": "f741addc-7cf7-4286-bf13-ca99ecdd4116",
      "value": [
        {
          "_id": "67580184-4bdf-46f9-a132-017d149a679a",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n위 URL의 글은 '선택의 중요성'을 다루고 있다. 성공과 실패는 사람의 생각과 선택에 따라 결정된다. 항상 성공을 가져다주는 공식은 없지만, 자신에게 중요한 선택들은 성공으로 이끌 수 있다. 성공은 나의 선택에 따라 갈릴 수 있고, 이를 위해 어떤 선택을 해야 하는지 항상 생각해야 한다. 추구하는 것이 무엇인지 아는 것도 중요하다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 14,
        "depth": 2
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649cffe31539d74cc0d4e91"
  },
  "directoryId": 298,
  "lastOrder": 62,
  "content": {
    "021a38c4-5435-4f7b-abb3-2d8e5c4705b2": {
      "id": "021a38c4-5435-4f7b-abb3-2d8e5c4705b2",
      "value": [
        {
          "_id": "c18e9e33-c888-41ba-b599-f29837d8a716",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "0301f0c8-7095-4b4d-91c1-0f4ea2e8844d": {
      "id": "0301f0c8-7095-4b4d-91c1-0f4ea2e8844d",
      "value": [
        {
          "_id": "71778522-75dd-4ee3-893c-c87286354a08",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "0afbe1f1-4373-4200-8b37-53e252472964": {
      "id": "0afbe1f1-4373-4200-8b37-53e252472964",
      "value": [
        {
          "_id": "c497ea4b-3eea-4e18-a233-c4e9c86da37e",
          "type": "code",
          "children": [
            {
              "text": "Note: C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 60,
        "depth": 0
      }
    },
    "0bfeaf51-12b3-4caa-bff2-f687f8b12a17": {
      "id": "0bfeaf51-12b3-4caa-bff2-f687f8b12a17",
      "value": [
        {
          "_id": "a638c476-4fc4-44d4-b7ad-f303ad5177bb",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 저장을 위한 서비스 클래스로, 주어진 파일 요청을 받아 ObjectMapper를 사용하여 Map으로 변환 후 파일 저장을 수행한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "0c198d69-dd67-454c-858d-7c7721cdefcf": {
      "id": "0c198d69-dd67-454c-858d-7c7721cdefcf",
      "value": [
        {
          "_id": "711a4a51-251f-4506-ab85-937349d1d805",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 58,
        "depth": 0
      }
    },
    "1562f4da-2c15-4810-8c42-c10cbb2c5041": {
      "id": "1562f4da-2c15-4810-8c42-c10cbb2c5041",
      "value": [
        {
          "_id": "3cd8c49e-2071-4f53-8b74-44e10b4addc5",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@Builder\npublic class FileRequest {\n\n    private int id;\n    private String title;\n    private String content;\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "1626816f-0896-4afc-9b85-49f7dd1e2a57": {
      "id": "1626816f-0896-4afc-9b85-49f7dd1e2a57",
      "value": [
        {
          "_id": "5a35382c-58a9-4dce-86b4-7fef605e565e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OdodocApplication.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 31,
        "depth": 1
      }
    },
    "22848a1b-34af-45bd-919d-b58d8ae012aa": {
      "id": "22848a1b-34af-45bd-919d-b58d8ae012aa",
      "value": [
        {
          "_id": "1c7bfb72-e735-4924-b99e-5e68601aeeac",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 39,
        "depth": 0
      }
    },
    "23f92792-18c2-4b15-a6ba-89521329f50b": {
      "id": "23f92792-18c2-4b15-a6ba-89521329f50b",
      "value": [
        {
          "_id": "b1de6999-d857-435c-a9c7-22e62fea1181",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 요청 DTO 클래스.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "2552fe38-cf16-49c4-b6da-a9912b3cd326": {
      "id": "2552fe38-cf16-49c4-b6da-a9912b3cd326",
      "value": [
        {
          "_id": "7dc987ea-907b-4524-b0ea-e1efa3eaba56",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "2a7eca18-1eab-48f5-bfd8-9fb4d730ca9a": {
      "id": "2a7eca18-1eab-48f5-bfd8-9fb4d730ca9a",
      "value": [
        {
          "_id": "95d028bd-922d-466b-b98b-ba1c8e02d3f0",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 28,
        "depth": 0
      }
    },
    "2ed859f9-88c7-44f2-b6fe-fdae45bf42f6": {
      "id": "2ed859f9-88c7-44f2-b6fe-fdae45bf42f6",
      "value": [
        {
          "_id": "50184c34-2824-44dd-a5cb-d3ad0b372803",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "31920298-5261-40cf-ba9a-81f6e58aa343": {
      "id": "31920298-5261-40cf-ba9a-81f6e58aa343",
      "value": [
        {
          "_id": "dd2f0c5d-e001-47e3-998b-555a49901631",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest){\n        Map<String, String> map = new HashMap<>();\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "327e100d-891a-422f-82b6-2ddb1b0d4f25": {
      "id": "327e100d-891a-422f-82b6-2ddb1b0d4f25",
      "value": [
        {
          "_id": "6a057a47-3712-4ca2-94fc-e65b7e1ae261",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 35,
        "depth": 0
      }
    },
    "37c42d6b-fc60-4dd5-9b51-b9ce9cf58364": {
      "id": "37c42d6b-fc60-4dd5-9b51-b9ce9cf58364",
      "value": [
        {
          "_id": "da2a5032-f93d-47cc-9ebe-e168c95f1c55",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.controller;\n\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport com.ssafy.ododoc.file.service.FileService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class FileController {\n\n    private final FileService fileService;\n\n    @PostMapping(\"/save\")\n    public void saveFile(@RequestBody FileRequest fileRequest){\n        fileService.doFileSave(fileRequest);\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "3cddd889-969f-464a-9824-bd22b393854f": {
      "id": "3cddd889-969f-464a-9824-bd22b393854f",
      "value": [
        {
          "_id": "b87786eb-0dd8-4f8b-9f88-5d8e92628300",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 34,
        "depth": 0
      }
    },
    "4cae6536-7098-4df3-82b5-5ac24a4c6139": {
      "id": "4cae6536-7098-4df3-82b5-5ac24a4c6139",
      "value": [
        {
          "_id": "f59a0bec-085b-4eda-b082-5339f09d0836",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 이름과 클래스 이름이 일치하지 않아서, 그리고 FileRequest 클래스에서 getTitle(), getContent() 메소드를 찾을 수 없어서 에러가 발생한 것 같습니다. 또한 log 변수가 선언되지 않아서도 에러가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "52538b2a-210f-44ad-9617-eb7fcc50da2e": {
      "id": "52538b2a-210f-44ad-9617-eb7fcc50da2e",
      "value": [
        {
          "_id": "92a0f7dc-4c29-47f0-b76e-6e68160fe8b9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 40,
        "depth": 0
      }
    },
    "580f233e-720f-4aa3-a02b-3dcccbb466e7": {
      "id": "580f233e-720f-4aa3-a02b-3dcccbb466e7",
      "value": [
        {
          "_id": "6dfeb11a-6650-48f9-b22c-e73bbcbce5ea",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 41,
        "depth": 0
      }
    },
    "5c3a61c7-dfdd-4b14-a978-6f5dc1ba15ad": {
      "id": "5c3a61c7-dfdd-4b14-a978-6f5dc1ba15ad",
      "value": [
        {
          "_id": "a1e5e903-3e46-4b5a-ac02-7c68172d4d0e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 요청을 위한 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 57,
        "depth": 1
      }
    },
    "5dfec675-cee2-433a-b077-472efffecc2e": {
      "id": "5dfec675-cee2-433a-b077-472efffecc2e",
      "value": [
        {
          "_id": "7802e888-c048-4ab4-af3f-530b7bcece08",
          "type": "code",
          "children": [
            {
              "text": "C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\OdodocApplication.java:7: error: class OdodocProjectApplication is public, should be declared in a file named OdodocProjectApplication.java\r\npublic class OdodocProjectApplication {\r\n       ^\r\nC:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java:23: error: cannot find symbol\r\n        map.put(\"title\", fileRequest.getTitle());\r\n                                    ^\r\n  symbol:   method getTitle()\r\n  location: variable fileRequest of type FileRequest\r\nC:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java:24: error: cannot find symbol\r\n        map.put(\"content\", fileRequest.getContent());\r\n                                      ^\r\n  symbol:   method getContent()\r\n  location: variable fileRequest of type FileRequest\r\nC:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java:27: error: cannot find symbol\r\n        log.info(\"파일 저장 호출 : {}\", list);\r\n        ^\r\n  symbol:   variable log\r\n  location: class FileService\r\nNote: C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n4 errors\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':compileJava'.\r\n> Compilation failed; see the compiler error output for details.\r\n\r\n* Try:\r\n> Run with --info option to get more log output.\r\n> Run with --scan to get full insights.\r\n\r\nBUILD FAILED in 2s\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "5ed1c750-c0e9-4cef-baa2-c1463dada83f": {
      "id": "5ed1c750-c0e9-4cef-baa2-c1463dada83f",
      "value": [
        {
          "_id": "10fa4bb4-4776-4fa5-8e34-556d28a38e4f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 어플리케이션을 실행하는 메인 애플리케이션 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "63099f3a-7ec5-44d8-b2ee-e0ae799bb7d1": {
      "id": "63099f3a-7ec5-44d8-b2ee-e0ae799bb7d1",
      "value": [
        {
          "_id": "d9c7fc61-e7b4-4883-8248-7e54950ba10f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@Builder\npublic class FileRequest {\n\n    private String id;\n    private String title;\n    private String content;\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 56,
        "depth": 1
      }
    },
    "685ed9f3-1a92-4d19-81c4-8ce90c3fe7de": {
      "id": "685ed9f3-1a92-4d19-81c4-8ce90c3fe7de",
      "value": [
        {
          "_id": "3ce37577-d766-44bf-9ec7-1a0ca9833a3a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 23,
        "depth": 0
      }
    },
    "6a56cf79-c5b1-4e64-9225-8e9eb3f16e1e": {
      "id": "6a56cf79-c5b1-4e64-9225-8e9eb3f16e1e",
      "value": [
        {
          "_id": "f4d03b9c-c7c6-4db8-aba5-21273264268a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 47,
        "depth": 0
      }
    },
    "6b11e5e5-039f-4a3e-a01e-2174bb4e8b42": {
      "id": "6b11e5e5-039f-4a3e-a01e-2174bb4e8b42",
      "value": [
        {
          "_id": "d68218b5-e414-4788-9d89-7f46b7a9f657",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 55,
        "depth": 1
      }
    },
    "6c161b08-daf3-474a-8607-8918663e13d4": {
      "id": "6c161b08-daf3-474a-8607-8918663e13d4",
      "value": [
        {
          "_id": "4d5439e4-a609-43da-90dd-3bcf326d5e75",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 52,
        "depth": 1
      }
    },
    "7202bbf3-b558-46ef-905b-6f7f91b049fd": {
      "id": "7202bbf3-b558-46ef-905b-6f7f91b049fd",
      "value": [
        {
          "_id": "98b0aa99-3f5b-4ad0-9831-843a3dc8a666",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "74108ebd-3589-4d8d-9cf1-fb13100fb9d1": {
      "id": "74108ebd-3589-4d8d-9cf1-fb13100fb9d1",
      "value": [
        {
          "_id": "60fe526c-5d5f-4912-80fe-5d60e36ac677",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "7539107a-a1ff-4757-a133-5b921da88268": {
      "id": "7539107a-a1ff-4757-a133-5b921da88268",
      "value": [
        {
          "_id": "8cc2fc42-75e4-489d-8ad7-430293116dfb",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "7d21864b-7ecd-4b87-8a7d-fa1692806d5a": {
      "id": "7d21864b-7ecd-4b87-8a7d-fa1692806d5a",
      "value": [
        {
          "_id": "aaa847b8-8cee-4462-95a0-1833c053aba2",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "89533858-67bd-46ec-b396-2c7caa847ddf": {
      "id": "89533858-67bd-46ec-b396-2c7caa847ddf",
      "value": [
        {
          "_id": "0b2a40ea-ae5f-41c6-8f0f-8a644821f68d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n클래스 이름이 파일 이름과 일치하지 않아서 public class가 정의된 파일 이름을 수정해야 함. 또한, FileRequest 클래스에 getTitle(), getContent() 메서드가 없어서 호출할 수 없고, log 변수도 선언되어 있지 않아서 오류가 발생한 것으로 보임.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "8e02d40f-d5a8-4507-90a4-12a9c0bf2725": {
      "id": "8e02d40f-d5a8-4507-90a4-12a9c0bf2725",
      "value": [
        {
          "_id": "37359687-a32c-4508-ac63-6b4fb191cbcc",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileController.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "8f08fa05-b98f-4bf6-ab9d-a022a52a5687": {
      "id": "8f08fa05-b98f-4bf6-ab9d-a022a52a5687",
      "value": [
        {
          "_id": "0e28e735-f5b3-41b7-a246-daac8feb241c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 62,
        "depth": 0
      }
    },
    "905afb74-4773-4df4-8b70-709021919bdd": {
      "id": "905afb74-4773-4df4-8b70-709021919bdd",
      "value": [
        {
          "_id": "2b4ea8b9-2b52-42d2-90c3-c555c44abbf7",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileController.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 49,
        "depth": 1
      }
    },
    "95ebcf70-6b8b-455d-af5c-c83049f4ec33": {
      "id": "95ebcf70-6b8b-455d-af5c-c83049f4ec33",
      "value": [
        {
          "_id": "8f627e96-ceeb-4c71-a96f-d5ee28effbab",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 59,
        "depth": 0
      }
    },
    "980fdcec-52e2-4f63-b8aa-9cf4653dd046": {
      "id": "980fdcec-52e2-4f63-b8aa-9cf4653dd046",
      "value": [
        {
          "_id": "6fcc1114-bea5-4a31-82a2-86b7393fa8b5",
          "type": "code",
          "children": [
            {
              "text": "C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\OdodocApplication.java:7: error: class OdodocProjectApplication is public, should be declared in a file named OdodocProjectApplication.java\r\npublic class OdodocProjectApplication {\r\n       ^\r\nC:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java:23: error: cannot find symbol\r\n        map.put(\"title\", fileRequest.getTitle());\r\n                                    ^\r\n  symbol:   method getTitle()\r\n  location: variable fileRequest of type FileRequest\r\nC:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java:24: error: cannot find symbol\r\n        map.put(\"content\", fileRequest.getContent());\r\n                                      ^\r\n  symbol:   method getContent()\r\n  location: variable fileRequest of type FileRequest\r\nC:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java:27: error: cannot find symbol\r\n        log.info(\"파일 저장 호출 : {}\", list);\r\n        ^\r\n  symbol:   variable log\r\n  location: class FileService\r\nNote: C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n4 errors\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':compileJava'.\r\n> Compilation failed; see the compiler error output for details.\r\n\r\n* Try:\r\n> Run with --info option to get more log output.\r\n> Run with --scan to get full insights.\r\n\r\nBUILD FAILED in 714ms\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "983beaf9-cb42-4e3e-b2d7-1b77b30e3a8a": {
      "id": "983beaf9-cb42-4e3e-b2d7-1b77b30e3a8a",
      "value": [
        {
          "_id": "dc1975ec-c9d9-46f0-95be-5f8c24275475",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "9b887d41-24e4-4821-b1f4-2cbc3c9d3fde": {
      "id": "9b887d41-24e4-4821-b1f4-2cbc3c9d3fde",
      "value": [
        {
          "_id": "8197697f-528d-4098-a7db-b66e5d397214",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OdodocProjectApplication.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 42,
        "depth": 1
      }
    },
    "9e25fb7f-c246-437b-a4be-eddbf6b7d458": {
      "id": "9e25fb7f-c246-437b-a4be-eddbf6b7d458",
      "value": [
        {
          "_id": "6d206201-25f7-4055-a174-7fca75cd3db3",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "a593fc79-6c86-4705-b005-f42e2a32b0e5": {
      "id": "a593fc79-6c86-4705-b005-f42e2a32b0e5",
      "value": [
        {
          "_id": "adf5469c-3091-4d47-a63b-bb29d5df3003",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService는 입력받은 FileRequest를 Map으로 변환한 뒤 List로 변환하여 파일로 저장하는 기능을 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 54,
        "depth": 1
      }
    },
    "a98a3326-faf9-42ab-970b-d65d3f7b14ec": {
      "id": "a98a3326-faf9-42ab-970b-d65d3f7b14ec",
      "value": [
        {
          "_id": "57ec2e0b-3854-4209-85a4-fcf75f92df69",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 48,
        "depth": 0
      }
    },
    "adbc9bdc-4dfe-418b-8622-c08b8d858bad": {
      "id": "adbc9bdc-4dfe-418b-8622-c08b8d858bad",
      "value": [
        {
          "_id": "fac17e03-0a0f-4e7e-956b-ddc5164a3d0d",
          "type": "code",
          "children": [
            {
              "text": "Note: C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 36,
        "depth": 0
      }
    },
    "af830fda-5498-4c6f-b3d0-2eae85cfbf3c": {
      "id": "af830fda-5498-4c6f-b3d0-2eae85cfbf3c",
      "value": [
        {
          "_id": "0119bb28-237b-4f7f-9ccc-655de67e59a5",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "b1211d92-6e66-4215-ae59-0b54416ed21d": {
      "id": "b1211d92-6e66-4215-ae59-0b54416ed21d",
      "value": [
        {
          "_id": "58e7bd85-cdec-4453-b925-8246aa234860",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService는 주어진 파일 정보를 Map 형태로 변환하여 저장하는 기능을 수행한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "b91d7790-81a0-4412-a7ee-e834a604dacd": {
      "id": "b91d7790-81a0-4412-a7ee-e834a604dacd",
      "value": [
        {
          "_id": "ab91c9bc-54fe-454c-b558-1d0a4529252c",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n\n        log.info(\"파일 저장 호출 : {}\", list);\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "c5fe2860-45da-4eca-8c4e-5c6cf7765027": {
      "id": "c5fe2860-45da-4eca-8c4e-5c6cf7765027",
      "value": [
        {
          "_id": "8c662964-20bf-448f-a79e-6e32d4018c34",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest){\n        Map<String, String> map = new HashMap<>();\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "c6d0d66c-c5f5-47b9-b4a6-72d96ac87d6d": {
      "id": "c6d0d66c-c5f5-47b9-b4a6-72d96ac87d6d",
      "value": [
        {
          "_id": "c1c58313-f7df-4d55-87d6-c3ae59f91f60",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 46,
        "depth": 0
      }
    },
    "cb313c15-15d0-4489-8546-4ab6af12fb56": {
      "id": "cb313c15-15d0-4489-8546-4ab6af12fb56",
      "value": [
        {
          "_id": "dfd47bcc-4041-487b-9eba-18d5cc163298",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileController는 FileService를 사용하여 파일을 저장하는 saveFile 메서드를 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "cc0475f1-57c8-4e5d-a436-a64d478c5c58": {
      "id": "cc0475f1-57c8-4e5d-a436-a64d478c5c58",
      "value": [
        {
          "_id": "a4e43cb9-fd64-464b-bf4b-10902a0f2092",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "cca772b6-988d-41a0-9cd2-d76f604cd819": {
      "id": "cca772b6-988d-41a0-9cd2-d76f604cd819",
      "value": [
        {
          "_id": "7fc5f12a-16a2-46d5-97fb-d8be526990d0",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n컴파일 시에 타입 안전성 검사를 하지 않아서 발생한 경고 메시지입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 37,
        "depth": 0
      }
    },
    "cf655342-3952-4196-9d46-a2f368dcd55b": {
      "id": "cf655342-3952-4196-9d46-a2f368dcd55b",
      "value": [
        {
          "_id": "a4b2cddc-3b69-471b-8c15-d3417c69f917",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "cf7f253c-e84f-493d-b743-720173ede962": {
      "id": "cf7f253c-e84f-493d-b743-720173ede962",
      "value": [
        {
          "_id": "cb5500d5-1a84-4c33-adf2-99eefa305648",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일을 저장하는 기능을 구현한 컨트롤러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 51,
        "depth": 1
      }
    },
    "d3217001-386d-4c65-81c1-b5d5043e4b14": {
      "id": "d3217001-386d-4c65-81c1-b5d5043e4b14",
      "value": [
        {
          "_id": "5e3b234a-04bb-498d-b303-f5b00563d504",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 프로젝트의 애플리케이션을 실행하는 메인 메소드입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 44,
        "depth": 1
      }
    },
    "d38cf25f-6b03-4f21-b3f4-b3cb70340894": {
      "id": "d38cf25f-6b03-4f21-b3f4-b3cb70340894",
      "value": [
        {
          "_id": "1c4e47c0-ce9f-415b-b5a3-bd0c11ad8204",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class OdodocProjectApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(OdodocProjectApplication.class, args);\n\t}\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 43,
        "depth": 1
      }
    },
    "d66c4dc4-5eb5-4e31-b64e-06a236fbec5f": {
      "id": "d66c4dc4-5eb5-4e31-b64e-06a236fbec5f",
      "value": [
        {
          "_id": "3c86f53e-d5ce-46f2-82fb-cb881a7454e2",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.controller;\n\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class FileController {\n\n    @PostMapping(\"/save\")\n    public void saveFile(@RequestBody FileRequest fileRequest){\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 50,
        "depth": 1
      }
    },
    "dc0a341e-1ad3-4cb3-acc5-56eaf26d695c": {
      "id": "dc0a341e-1ad3-4cb3-acc5-56eaf26d695c",
      "value": [
        {
          "_id": "e64c972c-0265-4507-8b57-d8ffaa24f491",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class OdodocApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(OdodocApplication.class, args);\n\t}\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "dcb5d7c1-7955-4b4d-b4b1-6563e2429cc0": {
      "id": "dcb5d7c1-7955-4b4d-b4b1-6563e2429cc0",
      "value": [
        {
          "_id": "30a975af-61d6-4859-9fee-eb9c481e3ffe",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 38,
        "depth": 0
      }
    },
    "e6b29741-64dd-403f-a736-2538c3cc754c": {
      "id": "e6b29741-64dd-403f-a736-2538c3cc754c",
      "value": [
        {
          "_id": "86867e0a-c996-4118-a6f9-c4ec2e69f7df",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "e753c26f-1001-4b3c-a3c3-95643f308735": {
      "id": "e753c26f-1001-4b3c-a3c3-95643f308735",
      "value": [
        {
          "_id": "8f66aecd-e30c-40c6-b953-17997414eca7",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "e95bbdc4-f0d4-48cc-b32c-8d1eae2ddd77": {
      "id": "e95bbdc4-f0d4-48cc-b32c-8d1eae2ddd77",
      "value": [
        {
          "_id": "a764a84d-5a02-49ca-bc73-0371cab02062",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "eddddce6-226d-4578-9d9b-353e0c650596": {
      "id": "eddddce6-226d-4578-9d9b-353e0c650596",
      "value": [
        {
          "_id": "ea913319-699a-4459-b3d8-2966bf200d92",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "f3d40261-7ea4-4a27-a94b-9a2e6ceaba2e": {
      "id": "f3d40261-7ea4-4a27-a94b-9a2e6ceaba2e",
      "value": [
        {
          "_id": "122e9f39-2e71-4cd7-9669-06340b813b06",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 45,
        "depth": 0
      }
    },
    "f42a0773-232d-4be7-994d-86f1f9d6a4fb": {
      "id": "f42a0773-232d-4be7-994d-86f1f9d6a4fb",
      "value": [
        {
          "_id": "be9a07b9-ee59-467a-b309-08023e0af284",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService.java 파일에서 비검사 또는 안전하지 않은 작업을 사용했기 때문에 경고 메시지가 나타났습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 61,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d70731539d74cc0d4e92"
  },
  "directoryId": 299,
  "lastOrder": 55,
  "content": {
    "05ac579a-dc86-4b86-a198-0d247915277e": {
      "id": "05ac579a-dc86-4b86-a198-0d247915277e",
      "value": [
        {
          "_id": "a00b7e44-fc15-44f4-9c5e-44f2fe638502",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n위 URL의 내용에 접근할 수 없습니다. URL의 열람 권한이 없거나 존재하지 않는 페이지일 수 있습니다. 다시 한 번 확인해 주시면 감사하겠습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 45,
        "depth": 2
      }
    },
    "08aecc18-2330-42ea-a109-6227ab03d024": {
      "id": "08aecc18-2330-42ea-a109-6227ab03d024",
      "value": [
        {
          "_id": "885a0eac-bfb6-4eeb-bd5d-d44b66343e04",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 블로그 게시글은 JavaScript의 명령어 'reduce'에 대해 설명하고 있다. Reduce는 배열 내 요소를 결합하여 단일 출력 결과를 만드는 데 사용되며, 순환 연산을 단순화하는 데 유용하다. 계산 결과는 그 다음 계산의 입력으로 사용되며, 최종 결과는 단일 값이 된다. 또한 'reduceRight' 명령어를 통해 배열을 오른쪽에서 왼쪽으로 처리할 수 있다. 'reduce'를 이해하고 활용하면 JavaScript에서 데이터를 효율적으로 처리하는데 도움이 된다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 42,
        "depth": 2
      }
    },
    "0e6974e1-0eb2-42ea-9b4c-52d46431c42c": {
      "id": "0e6974e1-0eb2-42ea-9b4c-52d46431c42c",
      "value": [
        {
          "_id": "e9ffcd1d-c24c-4208-9f76-9182112d1854",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "137831df-fa3e-4362-9c49-961f61048500": {
      "id": "137831df-fa3e-4362-9c49-961f61048500",
      "value": [
        {
          "_id": "a8b65a15-2d55-4ac5-9714-70e9aa250f2e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 글은 Java에서 ObjectMapper를 사용하여 JSON을 Object로 변환하려 할 때, 지정된 항목 값이 없는 경우 Array로 변환할 때 발생하는 MismatchedInputException에 대해 설명하고 있다. 여기서는 JSON의 null 값이나 또는 필드 값이 비어있는 경우 세 가지 상황에 대한 대응 방안을 제시하고 있다. 비어있는 값 대신 기본 배열을 설정하거나, Object 대신 Array로 변환해야하는 경우 ObjectMapper 클래스를 조정하는 방법, 마지막으로는 JSON 문자열이 비어있거나 Invalid한 경우 Object로 변환하는 대신 null을 반환하는 방법인데, 이 세 가지 방법 모두 Jackson 라이브러리의 기능을 활용하고 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 36,
        "depth": 2
      }
    },
    "14152a2c-1740-4b82-99f7-e01e04016e38": {
      "id": "14152a2c-1740-4b82-99f7-e01e04016e38",
      "value": [
        {
          "_id": "4cfdf916-5db0-491a-af92-b515d5e5b071",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 33,
        "depth": 0
      }
    },
    "234dfcd8-a61f-4462-aa76-397b213360d2": {
      "id": "234dfcd8-a61f-4462-aa76-397b213360d2",
      "value": [
        {
          "_id": "e296d2f0-68f9-49b0-b66c-c63c59b2a55b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://k10d209.p.ssafy.io/editor",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://k10d209.p.ssafy.io/editor",
                "title": "https://k10d209.p.ssafy.io/editor"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "3268cd83-1992-49ac-9b61-5cad65446060": {
      "id": "3268cd83-1992-49ac-9b61-5cad65446060",
      "value": [
        {
          "_id": "9db6266f-50d2-449f-b128-06a5f5a4bf80",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 40,
        "depth": 0
      }
    },
    "376f9d76-9ccb-46b2-9792-e2ac47dde1e1": {
      "id": "376f9d76-9ccb-46b2-9792-e2ac47dde1e1",
      "value": [
        {
          "_id": "62e757d7-671f-472f-af57-889e5c712fa8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "39cbb82c-4443-4833-afe4-0cddaa72ffb7": {
      "id": "39cbb82c-4443-4833-afe4-0cddaa72ffb7",
      "value": [
        {
          "_id": "98900a76-c942-47e4-9ab6-4bf5a2fd1bf0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "47aaa29f-074a-4c4b-b359-5b0f52b5f6a8": {
      "id": "47aaa29f-074a-4c4b-b359-5b0f52b5f6a8",
      "value": [
        {
          "_id": "64515d16-22e2-4293-94bc-5d8d287bfe5f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://jinseongsoft.tistory.com/232",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://jinseongsoft.tistory.com/232",
                "title": "https://jinseongsoft.tistory.com/232"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 41,
        "depth": 1
      }
    },
    "4c7619f4-1354-421a-bdda-af768005f935": {
      "id": "4c7619f4-1354-421a-bdda-af768005f935",
      "value": [
        {
          "_id": "6a242002-9fd9-431e-aa49-d55c57baf345",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일을 저장하는 기능을 수행하는 FileController 클래스의 saveFile 메서드를 통해 파일을 저장한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 19,
        "depth": 1
      }
    },
    "516f0749-8e55-4c4a-8b88-b358d273d80f": {
      "id": "516f0749-8e55-4c4a-8b88-b358d273d80f",
      "value": [
        {
          "_id": "0f55361d-56a5-4055-b9b0-4755806ceb29",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 55,
        "depth": 0
      }
    },
    "55cef0c1-f290-4796-bb8e-35a6e6b652d8": {
      "id": "55cef0c1-f290-4796-bb8e-35a6e6b652d8",
      "value": [
        {
          "_id": "c0838bb8-3263-4450-af57-ba90a7494b3b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 43,
        "depth": 0
      }
    },
    "578b4a6a-f3cb-45ac-81e7-fc36c6f6e0b6": {
      "id": "578b4a6a-f3cb-45ac-81e7-fc36c6f6e0b6",
      "value": [
        {
          "_id": "6c58e085-6156-4c72-904d-3e9a278eba2e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://k10d209.p.ssafy.io/oauth?provider=kakao&code=gSlnEOWr0SxxFg6EHf4OcdMnLgiV3WE-djKzX5eiqMtiMf3eLnAZKAAAAAQKPXRoAAABj5Bg5IAhI_W2iNNaeg",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://k10d209.p.ssafy.io/oauth?provider=kakao&code=gSlnEOWr0SxxFg6EHf4OcdMnLgiV3WE-djKzX5eiqMtiMf3eLnAZKAAAAAQKPXRoAAABj5Bg5IAhI_W2iNNaeg",
                "title": "https://k10d209.p.ssafy.io/oauth?provider=kakao&code=gSlnEOWr0SxxFg6EHf4OcdMnLgiV3WE-djKzX5eiqMtiMf3eLnAZKAAAAAQKPXRoAAABj5Bg5IAhI_W2iNNaeg"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 50,
        "depth": 1
      }
    },
    "5fe637d0-bceb-4a54-a41a-1e032c6f6341": {
      "id": "5fe637d0-bceb-4a54-a41a-1e032c6f6341",
      "value": [
        {
          "_id": "977af17b-9cc7-4b71-89f4-925a7d8eb696",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@Builder\npublic class FileRequest {\n\n    private String id;\n    private String title;\n    private String content;\n\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 24,
        "depth": 1
      }
    },
    "61b21493-ae79-4046-ba17-607b35c4f68b": {
      "id": "61b21493-ae79-4046-ba17-607b35c4f68b",
      "value": [
        {
          "_id": "a6d6926e-229a-4d9f-ac7d-74b1b32f510b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://herojoon-dev.tistory.com/154",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://herojoon-dev.tistory.com/154",
                "title": "https://herojoon-dev.tistory.com/154"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 38,
        "depth": 1
      }
    },
    "63858942-3e37-4660-b365-42e74b9a2306": {
      "id": "63858942-3e37-4660-b365-42e74b9a2306",
      "value": [
        {
          "_id": "57f06d6a-08d6-4e2e-9b23-4711ed4a221f",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "6b652d7e-b72e-475c-9854-1aca2dde94fb": {
      "id": "6b652d7e-b72e-475c-9854-1aca2dde94fb",
      "value": [
        {
          "_id": "cc746771-d1b2-4b30-a921-2d026db6faa4",
          "type": "code",
          "children": [
            {
              "text": "Note: C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 28,
        "depth": 0
      }
    },
    "6bccefa7-fdb3-43ea-8faa-c0f8b401e2bf": {
      "id": "6bccefa7-fdb3-43ea-8faa-c0f8b401e2bf",
      "value": [
        {
          "_id": "cea8a45b-f4fc-4a54-ade9-475023a8c59f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://accounts.kakao.com/login/?continue=https%3A%2F%2Fkauth.kakao.com%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26redirect_uri%3Dhttps%253A%252F%252Fk10d209.p.ssafy.io%252Foauth%253Fprovider%253Dkakao%26through_account%3Dtrue%26client_id%3Da23282fc18f2b445d559dfe93fa96e6b#login",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://accounts.kakao.com/login/?continue=https%3A%2F%2Fkauth.kakao.com%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26redirect_uri%3Dhttps%253A%252F%252Fk10d209.p.ssafy.io%252Foauth%253Fprovider%253Dkakao%26through_account%3Dtrue%26client_id%3Da23282fc18f2b445d559dfe93fa96e6b#login",
                "title": "https://accounts.kakao.com/login/?continue=https%3A%2F%2Fkauth.kakao.com%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26redirect_uri%3Dhttps%253A%252F%252Fk10d209.p.ssafy.io%252Foauth%253Fprovider%253Dkakao%26through_account%3Dtrue%26client_id%3Da23282fc18f2b445d559dfe93fa96e6b#login"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 47,
        "depth": 1
      }
    },
    "799a1998-4545-4e8b-b565-cc6f41d368d2": {
      "id": "799a1998-4545-4e8b-b565-cc6f41d368d2",
      "value": [
        {
          "_id": "9b349024-a302-4909-bdf1-8ee958d2d45f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 요청에 대한 정보를 담고 있는 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 25,
        "depth": 1
      }
    },
    "7aa0fc8f-832d-4aec-b58b-6bf7a9ce7940": {
      "id": "7aa0fc8f-832d-4aec-b58b-6bf7a9ce7940",
      "value": [
        {
          "_id": "22de0cc7-8b54-4360-bc9d-1d024bd2e9d9",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 URL은 카카오 소셜 로그인을 통한 인증 코드를 받기 위한 것입니다. 인증 과정 상에서 해당 URL이 호출되면, 카카오 서버는 사용자 정보를 인증한 후 인증 코드를 반환합니다. 이 코드를 앱 내부에서 사용하여 사용자 인증을 처리합니다. 여기서 'gSlnEOWr0SxxFg6EHf4OcdMnLgiV3WE-djKzX5eiqMtiMf3eLnAZKAAAAAQKPXRoAAABj5Bg5IAhI_W2iNNaeg'이 인증 코드의 예시입니다. 이 인증된 코드는 일정 기간 동안만 유효합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 51,
        "depth": 2
      }
    },
    "7c46de35-d736-4433-a22a-0ec947c0dd77": {
      "id": "7c46de35-d736-4433-a22a-0ec947c0dd77",
      "value": [
        {
          "_id": "dcdc9360-6028-47a1-82ec-9b2ad67e5f0c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "8811470b-3bae-4b07-aef9-c200cd4060a9": {
      "id": "8811470b-3bae-4b07-aef9-c200cd4060a9",
      "value": [
        {
          "_id": "4e4a8f95-22a9-44f7-aee7-34983866bb69",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "8c3c0e3e-3ba2-4057-92da-35717048f426": {
      "id": "8c3c0e3e-3ba2-4057-92da-35717048f426",
      "value": [
        {
          "_id": "2d4fb4f3-b4e0-42d9-868e-f40a4a148452",
          "type": "heading-two",
          "children": [
            {
              "text": "검색 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 32,
        "depth": 0
      }
    },
    "8cd5a7c9-36c6-437b-b0e4-ab9974d2ec18": {
      "id": "8cd5a7c9-36c6-437b-b0e4-ab9974d2ec18",
      "value": [
        {
          "_id": "ab8279ef-5fc0-48c4-b8ff-f7f97ca8acf1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 49,
        "depth": 0
      }
    },
    "9dc2eff1-44fb-4488-97d9-9df7652b75b8": {
      "id": "9dc2eff1-44fb-4488-97d9-9df7652b75b8",
      "value": [
        {
          "_id": "81de36b6-d4f1-4db0-95ed-d07134cdeeb1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 37,
        "depth": 0
      }
    },
    "9f5e5c68-b3ee-46a6-b028-d7237c81b133": {
      "id": "9f5e5c68-b3ee-46a6-b028-d7237c81b133",
      "value": [
        {
          "_id": "3cc19419-d4ba-4d5d-806b-d63732de764f",
          "type": "heading-three",
          "children": [
            {
              "text": "com.fasterxml.jackson.databind.exc.MismatchedInputException",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 34,
        "depth": 0
      }
    },
    "a0019a5f-ed2c-4fe6-9136-59e87ae5abcb": {
      "id": "a0019a5f-ed2c-4fe6-9136-59e87ae5abcb",
      "value": [
        {
          "_id": "2e188b43-d3c9-42b2-9956-a1a99dc4919c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService.java 파일에서 unchecked 혹은 unsafe한 작업이 사용되어서 컴파일 시에 에러가 발생한 것이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "ab76e9ee-cfe9-4c44-9206-bc5711aeeb3b": {
      "id": "ab76e9ee-cfe9-4c44-9206-bc5711aeeb3b",
      "value": [
        {
          "_id": "2e800c09-a9a7-49be-8800-1700241a4d33",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://k10d209.p.ssafy.io/editor/299",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://k10d209.p.ssafy.io/editor/299",
                "title": "https://k10d209.p.ssafy.io/editor/299"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 44,
        "depth": 1
      }
    },
    "ad5e2298-aa34-4c01-a330-6e0c5cdba35b": {
      "id": "ad5e2298-aa34-4c01-a330-6e0c5cdba35b",
      "value": [
        {
          "_id": "8c4129c1-ff56-4e6a-968f-33d7e28cf7af",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "caa45860-d717-40a3-9f0e-76f5a693c5fe": {
      "id": "caa45860-d717-40a3-9f0e-76f5a693c5fe",
      "value": [
        {
          "_id": "cb5276de-5c62-4506-8244-82b4e9906b20",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.controller;\n\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport com.ssafy.ododoc.file.service.FileService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class FileController {\n\n    private final FileService fileService;\n\n    @PostMapping(\"/save\")\n    public void saveFile(@RequestBody FileRequest fileRequest){\n        fileService.doFileSave(fileRequest);\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 18,
        "depth": 1
      }
    },
    "d135357d-14c6-4624-b01b-6c8279916a45": {
      "id": "d135357d-14c6-4624-b01b-6c8279916a45",
      "value": [
        {
          "_id": "9a25dc50-0f6e-4341-9786-ee4fd2053896",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 52,
        "depth": 0
      }
    },
    "d599364e-3db6-4b68-b7c2-cc52dda71748": {
      "id": "d599364e-3db6-4b68-b7c2-cc52dda71748",
      "value": [
        {
          "_id": "3a86e396-2288-41bf-a898-d2b9a7f8dcd9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "d8303bf4-f6ab-4de2-a2a4-cd592dcda5f9": {
      "id": "d8303bf4-f6ab-4de2-a2a4-cd592dcda5f9",
      "value": [
        {
          "_id": "f6fa5215-1bac-4c95-b020-9095ab7ad45b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 46,
        "depth": 0
      }
    },
    "df8f907e-7ee6-416c-98be-f846a96e5d76": {
      "id": "df8f907e-7ee6-416c-98be-f846a96e5d76",
      "value": [
        {
          "_id": "184fb930-29f4-4c5c-9bec-c484ac9dab3a",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n\n        log.info(\"파일 저장 호출 : {}\", list);\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "e8245279-d832-473f-81c8-bd6c31a87444": {
      "id": "e8245279-d832-473f-81c8-bd6c31a87444",
      "value": [
        {
          "_id": "6c42d754-ae43-486f-b913-945a5ec4a422",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://bloodguy.tistory.com/entry/Java-Jackson-ObjectMapper%EB%A1%9C-json-%EB%B3%80%ED%99%98%EC%8B%9C-object-%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%B4-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-array-%EB%A1%9C-%EB%84%98%EC%96%B4%EC%98%AC-%EB%95%8C-MismatchedInputException-%EB%B0%9C%EC%83%9D%EC%8B%9C",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://bloodguy.tistory.com/entry/Java-Jackson-ObjectMapper%EB%A1%9C-json-%EB%B3%80%ED%99%98%EC%8B%9C-object-%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%B4-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-array-%EB%A1%9C-%EB%84%98%EC%96%B4%EC%98%AC-%EB%95%8C-MismatchedInputException-%EB%B0%9C%EC%83%9D%EC%8B%9C",
                "title": "https://bloodguy.tistory.com/entry/Java-Jackson-ObjectMapper%EB%A1%9C-json-%EB%B3%80%ED%99%98%EC%8B%9C-object-%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%B4-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-array-%EB%A1%9C-%EB%84%98%EC%96%B4%EC%98%AC-%EB%95%8C-MismatchedInputException-%EB%B0%9C%EC%83%9D%EC%8B%9C"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 35,
        "depth": 1
      }
    },
    "ecb5fc6b-3a0b-428c-b654-d54cd3ec43a9": {
      "id": "ecb5fc6b-3a0b-428c-b654-d54cd3ec43a9",
      "value": [
        {
          "_id": "d101e938-8dd8-4b87-aade-bf5ea66f7bac",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileController.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 17,
        "depth": 1
      }
    },
    "ee51adee-63ca-4946-bafa-223205cc9219": {
      "id": "ee51adee-63ca-4946-bafa-223205cc9219",
      "value": [
        {
          "_id": "4eecc4fe-a72d-4029-a63f-5ef5fca50ba8",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 URL은 카카오 계정으로 로그인하는 페이지를 나타냅니다. 로그인 이후에 사용자를 인증 서버(oauth)로 이동시키게 됩니다. 특정 사이트(k10d209.p.ssafy.io)에서 카카오를 통한 인증을 제공하고 있습니다. 이 과정에서 클라이언트 식별자가 필요하며, 이를 위해 client_id가 URL에 포함되어 있습니다. 마지막으로, 'through_account=true'는 카카오 계정을 통해 로그인한다는 의미입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 48,
        "depth": 2
      }
    },
    "eeb0ac5c-c60d-425d-a9c3-7f7d6649fecf": {
      "id": "eeb0ac5c-c60d-425d-a9c3-7f7d6649fecf",
      "value": [
        {
          "_id": "63776120-630b-4d1a-aa86-c4d38fee7ec2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n위 URL은 웹 기반의 텍스트 에디터 페이지로 보입니다. 접속자는 이 페이지에서 직접 텍스트를 작성하거나 코드를 작성할 수 있습니다. 저장 및 공유 기능을 통해 작성한 내용을 다른 사용자와 공유할 수도 있습니다. 또한, 여러 가지 언어 설정 변경이 가능하게끔 되어 있습니다. 그러나 URL만으로는 구체적인 서비스 내용, 제공 기능 등에 대한 정보는 한정적입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 54,
        "depth": 2
      }
    },
    "f692ff6e-d4e4-4587-9ab3-4562b52a0863": {
      "id": "f692ff6e-d4e4-4587-9ab3-4562b52a0863",
      "value": [
        {
          "_id": "ae8ff778-fea9-480c-8ab8-d618a956d8b5",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService는 주어진 FileRequest를 받아 ObjectMapper를 사용하여 Map으로 변환한 뒤 List로 변환하여 파일로 저장하는 서비스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "f6ece9bf-d65a-4441-9ca6-c2039b5df401": {
      "id": "f6ece9bf-d65a-4441-9ca6-c2039b5df401",
      "value": [
        {
          "_id": "5aa74816-7e54-49b0-a08a-481404b52f9d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 포스트는 Python의 flask 패키지를 설치하고 사용하는 방법에 대해 설명합니다. 먼저, Python과 pip의 설치가 필요하며 라이브러리 의존성 문제를 해결하기 위해 가상환경을 설정하는 방법도 함께 설명하고 있습니다. flask 패키지를 설치한 후에는 간단한 웹서버를 만드는 예제를 통해 flask를 어떻게 사용하는지 보여줍니다. 마지막으로, flask가 제공하는 다양한 기능을 사용하기 위해 추가로 필요한 패키지와 해당 패키지를 설치, 사용하는 방법을 안내합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 39,
        "depth": 2
      }
    },
    "f90baabd-d8fa-4c26-aa52-56f83f060e55": {
      "id": "f90baabd-d8fa-4c26-aa52-56f83f060e55",
      "value": [
        {
          "_id": "0ce13c58-bbd3-4a69-9499-c920963320dd",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "fa5b01fa-6127-47d9-892e-40d46da9121b": {
      "id": "fa5b01fa-6127-47d9-892e-40d46da9121b",
      "value": [
        {
          "_id": "c66289f1-02ab-4d5a-bc62-b7bc9bd25e4d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d70731539d74cc0d4e93"
  },
  "directoryId": 300,
  "lastOrder": 22,
  "content": {
    "0fef6565-9a97-42aa-8aff-2cc75c9193e8": {
      "id": "0fef6565-9a97-42aa-8aff-2cc75c9193e8",
      "value": [
        {
          "_id": "f03a18c3-604d-4db2-939f-d1dddfbf4b61",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileController.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "12cf7b71-6eac-402e-8511-95bd7dd406a3": {
      "id": "12cf7b71-6eac-402e-8511-95bd7dd406a3",
      "value": [
        {
          "_id": "7ece8ac6-f252-4f78-878c-3d8a64a71358",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "1533beb6-531d-4cac-b66d-d2b195b4eaed": {
      "id": "1533beb6-531d-4cac-b66d-d2b195b4eaed",
      "value": [
        {
          "_id": "199482a3-2031-47c5-b8cb-450d23e61cae",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "160d50d6-c08c-4101-9c00-1f598e1dc2b8": {
      "id": "160d50d6-c08c-4101-9c00-1f598e1dc2b8",
      "value": [
        {
          "_id": "38def718-afcf-4cc4-8a47-e902e5a68bd9",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "1bbd988f-0ea3-4456-88c3-cf1e99361667": {
      "id": "1bbd988f-0ea3-4456-88c3-cf1e99361667",
      "value": [
        {
          "_id": "c913366a-05be-4202-af6f-8aa683fd791f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n한글 파일 요청 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "242daed3-1958-4beb-99ef-86f6ca00bc41": {
      "id": "242daed3-1958-4beb-99ef-86f6ca00bc41",
      "value": [
        {
          "_id": "197fa2ef-85f4-49ff-9af3-28af1e6f6cfb",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@Builder\npublic class FileRequest {\n\n    private String id;\n    private String title;\n    private String content;\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "2607ff95-eb0b-4aba-a9cf-6e50a2f837f2": {
      "id": "2607ff95-eb0b-4aba-a9cf-6e50a2f837f2",
      "value": [
        {
          "_id": "c9997622-6edf-4f9e-80bb-81824b355d2c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "28fe6db5-d28c-4906-a8fa-f81607b920b5": {
      "id": "28fe6db5-d28c-4906-a8fa-f81607b920b5",
      "value": [
        {
          "_id": "71837383-63dc-42af-88bd-4325c2b71755",
          "type": "code",
          "children": [
            {
              "text": "Note: C:\\Users\\SSAFY\\Desktop\\SSAFY\\Project\\OdodocProject\\src\\main\\java\\com\\ssafy\\ododoc\\file\\service\\FileService.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "2af9bbad-7253-49c1-a763-9872b0b2bb1c": {
      "id": "2af9bbad-7253-49c1-a763-9872b0b2bb1c",
      "value": [
        {
          "_id": "fd89255f-2bac-4b27-9a0a-2922ce2795ee",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "4cb1aee9-c20c-4a45-974a-a5733ee5e9a4": {
      "id": "4cb1aee9-c20c-4a45-974a-a5733ee5e9a4",
      "value": [
        {
          "_id": "feabeef8-b3b5-4690-8898-f022cbe6c9d9",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "4f3ddfef-1611-46cc-be83-289b54041d19": {
      "id": "4f3ddfef-1611-46cc-be83-289b54041d19",
      "value": [
        {
          "_id": "b21e7462-9818-4108-a746-e67ccb81ded5",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileController는 FileService를 사용하여 파일을 저장하는 API를 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "541dae15-5f66-4528-80aa-51e281a367a3": {
      "id": "541dae15-5f66-4528-80aa-51e281a367a3",
      "value": [
        {
          "_id": "e96e4097-c926-43e1-9f1a-229dcda87599",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "5e26acaf-00bd-4afc-bcb9-2f78c84acd39": {
      "id": "5e26acaf-00bd-4afc-bcb9-2f78c84acd39",
      "value": [
        {
          "_id": "aadf6124-4f11-4b2a-98a8-fe4eb8a8f34f",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "630534b6-d256-4fb6-b53d-6129c7428f46": {
      "id": "630534b6-d256-4fb6-b53d-6129c7428f46",
      "value": [
        {
          "_id": "5d37d6a1-f42c-4690-9737-fd490c999261",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "6c5d9973-23a6-4e02-840e-fc1fec0bf0ed": {
      "id": "6c5d9973-23a6-4e02-840e-fc1fec0bf0ed",
      "value": [
        {
          "_id": "dcb19df6-a628-425f-a3ec-eeaf35558ded",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "6db0420b-8068-47a4-b3fb-9e705426a328": {
      "id": "6db0420b-8068-47a4-b3fb-9e705426a328",
      "value": [
        {
          "_id": "ae7c80f7-2850-49d1-8fc9-e36aaaf00d24",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.controller;\n\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport com.ssafy.ododoc.file.service.FileService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class FileController {\n\n    private final FileService fileService;\n\n    @PostMapping(\"/save\")\n    public void saveFile(@RequestBody FileRequest fileRequest){\n        fileService.doFileSave(fileRequest);\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "830bfc70-b57e-4ef3-a20b-befab2a0f4e1": {
      "id": "830bfc70-b57e-4ef3-a20b-befab2a0f4e1",
      "value": [
        {
          "_id": "911327e8-00fe-43fd-9840-245ab4de430f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nnull",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 21,
        "depth": 0
      }
    },
    "af232b6a-cc43-483d-a83e-75bdfef9f873": {
      "id": "af232b6a-cc43-483d-a83e-75bdfef9f873",
      "value": [
        {
          "_id": "0d6d6a79-d147-4619-8a44-3ff581980b00",
          "type": "code",
          "children": [
            {
              "text": "> Task :compileJava UP-TO-DATE\r\n> Task :processResources UP-TO-DATE\r\n> Task :classes UP-TO-DATE\r\n\r\nBUILD SUCCESSFUL in 327ms\r\n2 actionable tasks: 2 up-to-date\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "dd8327d3-0e4f-434d-85d1-6745d6fef952": {
      "id": "dd8327d3-0e4f-434d-85d1-6745d6fef952",
      "value": [
        {
          "_id": "504e9dca-9513-4bb9-a09e-0fc65c71cdc7",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService는 ObjectMapper를 사용하여 FileRequest를 Map으로 변환한 후 List로 변환하여 파일을 저장하는 기능을 제공하는 서비스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "f09e0130-5c77-4943-b841-f82bf60a3dd1": {
      "id": "f09e0130-5c77-4943-b841-f82bf60a3dd1",
      "value": [
        {
          "_id": "535eedfd-3c86-44e5-b658-01b1c0b24257",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileService.java 파일에서는 안전하지 않은 연산을 사용하고 있어서 컴파일 시 경고 메시지가 나타나고 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "f67aac57-a13c-47c0-90c4-2d8cc6c6aaf6": {
      "id": "f67aac57-a13c-47c0-90c4-2d8cc6c6aaf6",
      "value": [
        {
          "_id": "5c11fb4b-e449-4ae5-9ad2-f58fc376fead",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "fb83ed8b-7eb9-4e49-a978-d7c40f0ff493": {
      "id": "fb83ed8b-7eb9-4e49-a978-d7c40f0ff493",
      "value": [
        {
          "_id": "2ec1bfde-d6e2-430b-8cd3-1912a153e1b5",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "fc59a5a6-5afd-4dc5-adb5-69a638bf6b0a": {
      "id": "fc59a5a6-5afd-4dc5-adb5-69a638bf6b0a",
      "value": [
        {
          "_id": "35f86cd3-ab49-45ac-ad66-cca7b3411bcd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "fe7725fd-b512-4e4c-8dbc-6ade8b44204d": {
      "id": "fe7725fd-b512-4e4c-8dbc-6ade8b44204d",
      "value": [
        {
          "_id": "841dc495-9d00-44c8-a00b-cbf7010258bb",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 9,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d70731539d74cc0d4e94"
  },
  "directoryId": 301,
  "lastOrder": 17,
  "content": {
    "02325554-b73e-4b67-a78d-bb53d748f487": {
      "id": "02325554-b73e-4b67-a78d-bb53d748f487",
      "value": [
        {
          "_id": "c0746b8a-17d0-4403-bd60-6a30ade82b9a",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "039faf7c-404b-4a3d-b895-ecefad192be6": {
      "id": "039faf7c-404b-4a3d-b895-ecefad192be6",
      "value": [
        {
          "_id": "ddd7676d-499d-4a3d-be98-b771d233b30b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "08bd8472-5cbf-4987-bfc5-143927e43474": {
      "id": "08bd8472-5cbf-4987-bfc5-143927e43474",
      "value": [
        {
          "_id": "ace2eb81-8ae4-4a48-b2da-c1e2e9dcd436",
          "type": "code",
          "children": [
            {
              "text": "> Task :compileJava UP-TO-DATE\r\n> Task :processResources UP-TO-DATE\r\n> Task :classes UP-TO-DATE\r\n\r\nBUILD SUCCESSFUL in 325ms\r\n2 actionable tasks: 2 up-to-date\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "0e145788-6935-4a7f-bc66-1c2f48ff5cf8": {
      "id": "0e145788-6935-4a7f-bc66-1c2f48ff5cf8",
      "value": [
        {
          "_id": "fc31a127-de0d-4f2a-911e-f95ef696e0e2",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "1365d425-e6f8-49b1-9352-4e87e77f663d": {
      "id": "1365d425-e6f8-49b1-9352-4e87e77f663d",
      "value": [
        {
          "_id": "ff3a30ea-8715-4236-8221-e25ae028efab",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "2f30c671-ee34-4519-ad58-29b64091e931": {
      "id": "2f30c671-ee34-4519-ad58-29b64091e931",
      "value": [
        {
          "_id": "466abd8d-f63d-458b-91b5-7c3b6836043c",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "552b790d-aaf3-400c-8884-c78219ad14d1": {
      "id": "552b790d-aaf3-400c-8884-c78219ad14d1",
      "value": [
        {
          "_id": "79031e49-04e6-43ef-ab8a-6ad0c8440619",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java : 27",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "5a407ec8-6d24-4808-b6ba-d1588364b0b1": {
      "id": "5a407ec8-6d24-4808-b6ba-d1588364b0b1",
      "value": [
        {
          "_id": "73d475c7-0f5f-464f-a723-a307594caf84",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "65413c40-82df-4f4d-abeb-8e47230e0d04": {
      "id": "65413c40-82df-4f4d-abeb-8e47230e0d04",
      "value": [
        {
          "_id": "dc7b52ac-8140-4063-b58e-9ffe32188171",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "655c70dd-5e41-469c-b1aa-cbc464214ada": {
      "id": "655c70dd-5e41-469c-b1aa-cbc464214ada",
      "value": [
        {
          "_id": "43283756-a5f7-4197-b583-e894ac0ea165",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "6c151b22-8500-4981-ba27-791bb60fdcca": {
      "id": "6c151b22-8500-4981-ba27-791bb60fdcca",
      "value": [
        {
          "_id": "ed08752b-44ed-4afd-9c59-f4498774a294",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "73b5700a-19c7-4179-ada5-8ad27ca953e6": {
      "id": "73b5700a-19c7-4179-ada5-8ad27ca953e6",
      "value": [
        {
          "_id": "a9246ee4-1fe1-4047-9f17-c0a2c67c55dd",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n해당 코드에서는 JSON 객체를 ArrayList<java.lang.Object>로 역직렬화할 수 없어 발생한 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "82dccf62-7fa7-4d4d-89c9-e8cb85b4b858": {
      "id": "82dccf62-7fa7-4d4d-89c9-e8cb85b4b858",
      "value": [
        {
          "_id": "ad27838d-97d3-4909-aaa9-058e53222313",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "892f739f-7238-4f37-9b1e-d255b159612e": {
      "id": "892f739f-7238-4f37-9b1e-d255b159612e",
      "value": [
        {
          "_id": "b5189bf9-0fba-46f1-98d1-0b5a1a2c59e4",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nnull",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "a3fb3082-6e8c-4101-bbb9-48a7e364896a": {
      "id": "a3fb3082-6e8c-4101-bbb9-48a7e364896a",
      "value": [
        {
          "_id": "9d5b3539-9902-416b-a7a7-7fbd4659b858",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "cf94f78e-57b6-454c-bfbc-804c16eaa8f9": {
      "id": "cf94f78e-57b6-454c-bfbc-804c16eaa8f9",
      "value": [
        {
          "_id": "7fb66616-445c-410d-bfb8-7d1feb119e1c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "e80f76bc-5a31-40c1-b4c3-1b1aa5bae75a": {
      "id": "e80f76bc-5a31-40c1-b4c3-1b1aa5bae75a",
      "value": [
        {
          "_id": "845d23e5-8dac-4e21-8b89-db198ef97621",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T19:32:31.099+09:00 ERROR 11236 --- [OdodocProject] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\r\n\r\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\r\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\r\n\tat com.ssafy.ododoc.file.service.FileService.doFileSave(FileService.java:27) ~[main/:na]\r\n\tat com.ssafy.ododoc.file.controller.FileController.saveFile(FileController.java:18) ~[main/:na]\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\r\n\r\n\r\n> Task :OdodocProjectApplication.main() FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':OdodocProjectApplication.main()'.\r\n> Build cancelled while executing task ':OdodocProjectApplication.main()'\r\n\r\n* Try:\r\n> Run with --stacktrace option to get the stack trace.\r\n> Run with --info or --debug option to get more log output.\r\n> Run with --scan to get full insights.\r\n> Get more help at https://help.gradle.org.\r\n\nDeprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.\n\nYou can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n\nFor more on this, please refer to https://docs.gradle.org/8.7/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.\r\n\r\nBUILD FAILED in 10s\r\n3 actionable tasks: 1 executed, 2 up-to-date\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "fdcb8bdd-4bbb-4a92-9894-795771b25d12": {
      "id": "fdcb8bdd-4bbb-4a92-9894-795771b25d12",
      "value": [
        {
          "_id": "4b80b686-aff8-4145-904e-9bf8253988eb",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nobjectMapper.convertValue 메서드를 사용할 때 Map을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d70731539d74cc0d4e95"
  },
  "directoryId": 302,
  "lastOrder": 0,
  "content": {
    "e34c2d3d-f15b-492d-9b9f-88fe71f1fe55": {
      "id": "e34c2d3d-f15b-492d-9b9f-88fe71f1fe55",
      "value": [
        {
          "_id": "0d37cecb-9111-4cd1-b852-66d439b7d26e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d70731539d74cc0d4e96"
  },
  "directoryId": 303,
  "lastOrder": 0,
  "content": {
    "e4f02499-162d-4fa1-aab5-f18b95f99ccd": {
      "id": "e4f02499-162d-4fa1-aab5-f18b95f99ccd",
      "value": [
        {
          "_id": "1eb51f6e-341a-45b3-acc1-848b826ae23e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d70731539d74cc0d4e97"
  },
  "directoryId": 304,
  "lastOrder": 0,
  "content": {
    "d97706df-178c-4719-933d-d64062aafc24": {
      "id": "d97706df-178c-4719-933d-d64062aafc24",
      "value": [
        {
          "_id": "ca90dd7b-2bf3-4502-8ce6-9398b56952d3",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649d8ec7a88bf1f291c7b7e"
  },
  "directoryId": 305,
  "lastOrder": -1,
  "content": {
    "b228e0d2-c3a5-465c-bdf2-b0934b76bd76": {
      "id": "b228e0d2-c3a5-465c-bdf2-b0934b76bd76",
      "value": [
        {
          "_id": "54cfc9ca-94b1-4674-a759-ca48e7ed153d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a3"
  },
  "directoryId": 306,
  "lastOrder": 0,
  "content": {
    "6f1c7c3b-62c9-469b-b3cd-ab7fb6e47ee2": {
      "id": "6f1c7c3b-62c9-469b-b3cd-ab7fb6e47ee2",
      "value": [
        {
          "_id": "1b2227c2-150f-437e-8e23-be2cab1b9536",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a4"
  },
  "directoryId": 307,
  "lastOrder": 5,
  "content": {
    "0504dd46-bcc0-4eb5-a282-d672e5149fee": {
      "id": "0504dd46-bcc0-4eb5-a282-d672e5149fee",
      "value": [
        {
          "_id": "9fb43c0d-e6c1-472e-ac94-b936b69474d5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "086e4ed0-713b-4d78-bf47-493926c25609": {
      "id": "086e4ed0-713b-4d78-bf47-493926c25609",
      "value": [
        {
          "_id": "f5f16129-93d7-40ba-9dd7-81bdccb5697d",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "17c889e6-5a74-41cc-8c8b-f131f0bfeca2": {
      "id": "17c889e6-5a74-41cc-8c8b-f131f0bfeca2",
      "value": [
        {
          "_id": "b446e702-3ed3-4349-927a-39746a3e55b2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileRequest 클래스에 기본 생성자가 없어서 발생한 JSON 변환 오류입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "72b9b463-6845-48db-88c6-0fbdeb3e81ab": {
      "id": "72b9b463-6845-48db-88c6-0fbdeb3e81ab",
      "value": [
        {
          "_id": "deed62d1-6613-49a6-8ac6-30f3404d53ef",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T19:55:12.140+09:00 ERROR 33120 --- [OdodocProject] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class com.ssafy.ododoc.file.dto.FileRequest]] with root cause\n\ncom.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.ssafy.ododoc.file.dto.FileRequest` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 5]\n\tat com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1915) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1360) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1434) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:352) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:161) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:135) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "9f76cbbb-f962-4e08-99d6-1881526b7e33": {
      "id": "9f76cbbb-f962-4e08-99d6-1881526b7e33",
      "value": [
        {
          "_id": "e34f8a14-58b8-4b55-9564-a39efba14f05",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "d9aa0066-9879-4fe9-bef5-e910e9e6b1a2": {
      "id": "d9aa0066-9879-4fe9-bef5-e910e9e6b1a2",
      "value": [
        {
          "_id": "fdd8e796-d6d5-4bc9-bb92-65f2976499df",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "e86637dd-c633-443e-9930-0285014aa4d2": {
      "id": "e86637dd-c633-443e-9930-0285014aa4d2",
      "value": [
        {
          "_id": "32ee7341-2b3c-4556-9d1e-503afa81c743",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a5"
  },
  "directoryId": 308,
  "lastOrder": 26,
  "content": {
    "0ea73523-ed97-47e3-b9a8-de2e69c3d834": {
      "id": "0ea73523-ed97-47e3-b9a8-de2e69c3d834",
      "value": [
        {
          "_id": "92556843-db9b-4773-98cd-f79f84d10428",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "2e8206ec-d4e1-4e59-9747-35658bb8d3d1": {
      "id": "2e8206ec-d4e1-4e59-9747-35658bb8d3d1",
      "value": [
        {
          "_id": "f9290c0e-0c9e-4642-b5fb-07111030206b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 요청 정보를 담고 있는 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "5e8d0e56-0ba2-4907-8bcf-d7939279bf9d": {
      "id": "5e8d0e56-0ba2-4907-8bcf-d7939279bf9d",
      "value": [
        {
          "_id": "5b6a7b05-6600-42b0-ab7e-133216ba2959",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "73e4a76c-05ff-4657-95f0-e11422b3e0c7": {
      "id": "73e4a76c-05ff-4657-95f0-e11422b3e0c7",
      "value": [
        {
          "_id": "0ed04769-0f79-4a9d-9128-07a3cd0cb798",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "7f418d07-4ea1-40d1-86ef-c86c736bc5ef": {
      "id": "7f418d07-4ea1-40d1-86ef-c86c736bc5ef",
      "value": [
        {
          "_id": "0865e078-5ab4-4030-9ff0-026e3da1f4ed",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "991d81ce-e1a3-44fb-a632-4ae62046ea2b": {
      "id": "991d81ce-e1a3-44fb-a632-4ae62046ea2b",
      "value": [
        {
          "_id": "c0a55239-05bc-4451-86e8-3ccb33e0bce6",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "b008b7ae-1d8d-4e7f-bf18-970cb3e94bf3": {
      "id": "b008b7ae-1d8d-4e7f-bf18-970cb3e94bf3",
      "value": [
        {
          "_id": "ab25d257-f9d9-42fb-9f62-445b5557dd56",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "bca164e4-a209-48e1-acc0-1c7f6baa88b5": {
      "id": "bca164e4-a209-48e1-acc0-1c7f6baa88b5",
      "value": [
        {
          "_id": "38f8aae1-64cd-46e5-b765-b1e110b7d885",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T19:58:22.104+09:00 ERROR 30020 --- [OdodocProject] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class com.ssafy.ododoc.file.dto.FileRequest]] with root cause\n\ncom.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.ssafy.ododoc.file.dto.FileRequest` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 5]\n\tat com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1915) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1360) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1434) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:352) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:161) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:135) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "d31bcc15-5c88-4c33-9f06-f67d1044f159": {
      "id": "d31bcc15-5c88-4c33-9f06-f67d1044f159",
      "value": [
        {
          "_id": "35ce9dde-87ab-4079-a594-ec94a5c1aade",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "e3e0dab0-cbd9-4efc-8332-dfa94b7c94c4": {
      "id": "e3e0dab0-cbd9-4efc-8332-dfa94b7c94c4",
      "value": [
        {
          "_id": "2f8fe768-292c-462f-8fb0-86a20a17b4f5",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@AllArgsConstructor\n@Builder\npublic class FileRequest {\n    private String id;\n    private String title;\n    private String content;\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "e8dd9727-1eba-45bf-9ecd-92ed38a7b2b8": {
      "id": "e8dd9727-1eba-45bf-9ecd-92ed38a7b2b8",
      "value": [
        {
          "_id": "c6760ebc-7759-475e-9afc-4409eaccad58",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileRequest 클래스에 기본 생성자가 없어서 발생한 Jackson 라이브러리의 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "ee383e9b-8158-42c3-97c6-d97792f1ab40": {
      "id": "ee383e9b-8158-42c3-97c6-d97792f1ab40",
      "value": [
        {
          "_id": "3e76fa0d-c1b8-4960-8843-dc627fd4959c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a6"
  },
  "directoryId": 309,
  "lastOrder": 28,
  "content": {
    "138f4438-7e25-4dbe-90bc-06762e82ab19": {
      "id": "138f4438-7e25-4dbe-90bc-06762e82ab19",
      "value": [
        {
          "_id": "c2910071-3023-4338-a3cf-ed95b49bc08a",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nObjectMapper이 List로의 변환에 실패하여 에러가 발생함.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "18c037a3-c65d-4e77-86eb-f91f81373fcf": {
      "id": "18c037a3-c65d-4e77-86eb-f91f81373fcf",
      "value": [
        {
          "_id": "4223a910-2454-4cc1-9541-f4fb0e6fbe0c",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T20:01:07.202+09:00 ERROR 21308 --- [OdodocProject] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.ssafy.ododoc.file.service.FileService.doFileSave(FileService.java:27) ~[classes/:na]\n\tat com.ssafy.ododoc.file.controller.FileController.saveFile(FileController.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "40306db8-3edc-41aa-921b-266465f55c64": {
      "id": "40306db8-3edc-41aa-921b-266465f55c64",
      "value": [
        {
          "_id": "7333c1aa-6a81-4451-895e-bc084649b346",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "4b20bbbb-ff3f-45e4-b2f9-a9e65d5911de": {
      "id": "4b20bbbb-ff3f-45e4-b2f9-a9e65d5911de",
      "value": [
        {
          "_id": "3ff947ca-d4c1-4d4f-bd20-144976dbc4bc",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "5bc037f3-fcd4-44ee-8250-95c4e49faee2": {
      "id": "5bc037f3-fcd4-44ee-8250-95c4e49faee2",
      "value": [
        {
          "_id": "6bce3f23-6f24-4e7f-acd0-fb300f51bfa0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "603d67ee-4cb8-43fc-b007-c4dfbaed4de4": {
      "id": "603d67ee-4cb8-43fc-b007-c4dfbaed4de4",
      "value": [
        {
          "_id": "9a3dc308-82b6-496c-b44d-0e6d2ca94c03",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "6f149ce9-4fbd-4e32-b983-e8827077313b": {
      "id": "6f149ce9-4fbd-4e32-b983-e8827077313b",
      "value": [
        {
          "_id": "8128ac4c-47f3-49a0-9a3d-30cf753f1398",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 데이터를 ArrayList<java.lang.Object> 형식으로 변환할 수 없어서 발생한 에러입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "861b6fbd-0dad-464c-a8e9-ff28ec3d9122": {
      "id": "861b6fbd-0dad-464c-a8e9-ff28ec3d9122",
      "value": [
        {
          "_id": "2981f4bd-070c-45cb-ada6-ff098664fb42",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "9c724e57-ec09-4421-83d0-12fbf63c91d4": {
      "id": "9c724e57-ec09-4421-83d0-12fbf63c91d4",
      "value": [
        {
          "_id": "86b5f3f9-cc1b-467e-b944-e832b28d543d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "b9c52575-c255-4284-895d-cd01a080362d": {
      "id": "b9c52575-c255-4284-895d-cd01a080362d",
      "value": [
        {
          "_id": "6aa30136-a793-4707-bcf9-965e4890edfd",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java : 27",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "bbd0309e-ba56-437a-b8eb-912abfed1033": {
      "id": "bbd0309e-ba56-437a-b8eb-912abfed1033",
      "value": [
        {
          "_id": "d19e4a95-76dd-4caa-83a2-034119923776",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "d955da47-81fd-433f-b06f-f3cec1082e87": {
      "id": "d955da47-81fd-433f-b06f-f3cec1082e87",
      "value": [
        {
          "_id": "a586431b-5e7e-4460-9e75-d8562139cebc",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "e38f4218-04d9-4831-a08f-4bf886e4c86d": {
      "id": "e38f4218-04d9-4831-a08f-4bf886e4c86d",
      "value": [
        {
          "_id": "752ee0d0-70cd-4623-969e-dd097785e5ca",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a7"
  },
  "directoryId": 310,
  "lastOrder": 22,
  "content": {
    "096c2aab-45ae-469b-8c77-ee30c106b34b": {
      "id": "096c2aab-45ae-469b-8c77-ee30c106b34b",
      "value": [
        {
          "_id": "ef0e2c4b-9144-485a-a995-92abbfcc3466",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "1993cc29-e7d2-4ddc-8105-61372c93b1b2": {
      "id": "1993cc29-e7d2-4ddc-8105-61372c93b1b2",
      "value": [
        {
          "_id": "c36e64e5-0db4-453a-862d-4d5654bd3290",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n해당 링크는 SSAFY의 사이트로 이동하며, 구체적인 내용을 파악하는 데 한계가 있습니다. 그러나 사이트의 URL을 통해 추측할 때, 'editor' 란 이름의 새 페이지로 이동하며, 이 페이지에서 특정 내용을 편집하거나 수정할 수 있을 것으로 보입니다. 이것은 SSAFY 학생들의 프로젝트 작업이나 과제를 위한 페이지일 수도 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 21,
        "depth": 2
      }
    },
    "23f4d9e4-404c-437c-b43d-d683f44866ab": {
      "id": "23f4d9e4-404c-437c-b43d-d683f44866ab",
      "value": [
        {
          "_id": "03f2d52b-61f5-4e50-8f72-094346eb0c68",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "372dd5d4-28d6-4d0b-b10b-4eb7bb6c75e7": {
      "id": "372dd5d4-28d6-4d0b-b10b-4eb7bb6c75e7",
      "value": [
        {
          "_id": "cfc935ba-def5-41f7-aece-11a73a8013ca",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "3f2049e9-a014-47df-8a8f-080c59247c2d": {
      "id": "3f2049e9-a014-47df-8a8f-080c59247c2d",
      "value": [
        {
          "_id": "5dd013da-0eef-4ebe-b58d-c45f862dad04",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "3f9e9b01-f7d5-4b5d-84d2-0ab783536ca0": {
      "id": "3f9e9b01-f7d5-4b5d-84d2-0ab783536ca0",
      "value": [
        {
          "_id": "c0d21cc5-124f-4091-96cd-1a3d97d9a88b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "4fdee881-6858-4097-93f9-4f57f50fadc2": {
      "id": "4fdee881-6858-4097-93f9-4f57f50fadc2",
      "value": [
        {
          "_id": "55e3da70-6b9d-417d-b3ca-fc70676aee42",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "5f666c5c-b965-4a87-a709-10d409025d0d": {
      "id": "5f666c5c-b965-4a87-a709-10d409025d0d",
      "value": [
        {
          "_id": "963260fa-eb42-4cdc-b809-0e270094a277",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "66bce439-d602-40e4-8c87-88b114cb42e9": {
      "id": "66bce439-d602-40e4-8c87-88b114cb42e9",
      "value": [
        {
          "_id": "25812125-cceb-4670-b38d-f0e716f63c12",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "7063425e-2723-4013-9eca-08bbb8e5d621": {
      "id": "7063425e-2723-4013-9eca-08bbb8e5d621",
      "value": [
        {
          "_id": "1e96cd00-1644-442f-bef1-36e3a20cf89c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a9536a85-a381-47e3-a9d6-5f51bcc6a3bb": {
      "id": "a9536a85-a381-47e3-a9d6-5f51bcc6a3bb",
      "value": [
        {
          "_id": "d654a10c-6e2a-4d07-a3d8-b9019c3b8c14",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T20:04:49.779+09:00 ERROR 34812 --- [OdodocProject] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.ssafy.ododoc.file.service.FileService.doFileSave(FileService.java:27) ~[classes/:na]\n\tat com.ssafy.ododoc.file.controller.FileController.saveFile(FileController.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "c382b73f-7628-466b-b24d-1bfd2c3a8efd": {
      "id": "c382b73f-7628-466b-b24d-1bfd2c3a8efd",
      "value": [
        {
          "_id": "72122431-2c2d-4ee6-9f25-66c26275c0a3",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java : 27",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "c83411f5-4253-4ba2-a90f-ea8dfb0ba7b1": {
      "id": "c83411f5-4253-4ba2-a90f-ea8dfb0ba7b1",
      "value": [
        {
          "_id": "5fd246ad-be5b-4d33-9758-30f51c7a2762",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nObjectMapper을 통해 Map을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "ea270708-997c-419e-8a9b-4f3f61e0c905": {
      "id": "ea270708-997c-419e-8a9b-4f3f61e0c905",
      "value": [
        {
          "_id": "a05ddb1c-26e9-4a7e-9134-d4ef47f4e973",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 처리 중 발생한 에러로, `java.util.ArrayList<java.lang.Object>` 형식으로 값을 역직렬화 할 수 없어 발생한 것으로 보인다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "f10f1fc1-1067-45fc-a2e3-cb22e697afe4": {
      "id": "f10f1fc1-1067-45fc-a2e3-cb22e697afe4",
      "value": [
        {
          "_id": "d87f4a8d-72c7-444c-94ed-4a19c05f7f82",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://k10d209.p.ssafy.io/editor",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://k10d209.p.ssafy.io/editor",
                "title": "https://k10d209.p.ssafy.io/editor"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "f755b62c-2bbc-4775-961b-d681bc916f30": {
      "id": "f755b62c-2bbc-4775-961b-d681bc916f30",
      "value": [
        {
          "_id": "02109ed6-5f15-4802-9cbd-fcf8e53e249a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a8"
  },
  "directoryId": 311,
  "lastOrder": 26,
  "content": {
    "027c3a8b-00c0-4c52-adcf-de856967de59": {
      "id": "027c3a8b-00c0-4c52-adcf-de856967de59",
      "value": [
        {
          "_id": "6a9836d6-46f6-4da6-9276-aa148cd1b1aa",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "05df9c92-075b-4375-972f-33d31077f4eb": {
      "id": "05df9c92-075b-4375-972f-33d31077f4eb",
      "value": [
        {
          "_id": "2a561f98-361a-4e44-8a93-299ea1cd7c87",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "139a837e-e5f6-41dd-a44a-ff9f02232c5f": {
      "id": "139a837e-e5f6-41dd-a44a-ff9f02232c5f",
      "value": [
        {
          "_id": "8a257595-69b7-466e-9b8e-e381fc2e2b62",
          "type": "heading-three",
          "children": [
            {
              "text": "com.fasterxml.jackson.databind.exc.mismatchedinputexception",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "44b8cf57-9413-49ef-a78c-45c7155afe2d": {
      "id": "44b8cf57-9413-49ef-a78c-45c7155afe2d",
      "value": [
        {
          "_id": "6fb5ec29-969a-46ab-a84a-f56cf5414a54",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 처리 중에 JSON값을 ArrayList<java.lang.Object> 타입으로 deserialize하는 과정에서 오류가 발생하였습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "6085348d-c975-49ed-a6d9-40494ef6f3bd": {
      "id": "6085348d-c975-49ed-a6d9-40494ef6f3bd",
      "value": [
        {
          "_id": "a4e21218-3537-4a1f-ab36-61a6814ac3f0",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "620cbfa5-8bad-47af-a708-5392f788d577": {
      "id": "620cbfa5-8bad-47af-a708-5392f788d577",
      "value": [
        {
          "_id": "1076a534-b3cc-418b-9333-cc47e71c4356",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nObjectMapper가 Map을 List로 변환할 수 없습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "67ce461d-11bc-4de9-b859-07c0330a2131": {
      "id": "67ce461d-11bc-4de9-b859-07c0330a2131",
      "value": [
        {
          "_id": "c1a44c96-5d58-4bb7-8910-4bc6a6123563",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "73366f8f-8988-4c20-ba3d-a8d656a99142": {
      "id": "73366f8f-8988-4c20-ba3d-a8d656a99142",
      "value": [
        {
          "_id": "aad4bef0-8d8b-403e-9a68-ac524c10f7ae",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "75994765-6595-49d7-b906-a8ccc6964b47": {
      "id": "75994765-6595-49d7-b906-a8ccc6964b47",
      "value": [
        {
          "_id": "6ec045b3-783d-468f-be7d-0f0dae08464f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n자바의 Jackson 라이브러리를 이용해 JSON을 객체로 변환할 때, 객체에서 지정한 값이 비어있는 배열로 나올 경우에 MismatchedInputException이 발생한다. 이는 ObjectMapper의 기본 설정 때문이다. 이 문제를 해결하려면 ObjectMapper의 configure 메소드를 이용해 DeserializationFeature.FAIL_ON_MISSING_CREATOR_PROPERTIES 설정을 false로 설정하면 된다. 설정을 변경한 후에는 지정한 값이 없더라도 빈 배열 대신 null로 처리되어 예외가 발생하지 않는다. 이를 통해 요청본문으로 받는 JSON의 값이 없을 경우의 예외 상황을 예방할 수 있다.\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 16,
        "depth": 2
      }
    },
    "785e02fa-6d1e-46bf-8d7f-a42e3a66fa63": {
      "id": "785e02fa-6d1e-46bf-8d7f-a42e3a66fa63",
      "value": [
        {
          "_id": "b70c7c7e-363f-4a5e-8e53-b00eefa5cb5c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "7b70e803-6ccd-4657-8f04-3f445b723c25": {
      "id": "7b70e803-6ccd-4657-8f04-3f445b723c25",
      "value": [
        {
          "_id": "476cb704-976e-4683-a25e-6e0cccda8603",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://velog.io/@9to0/Jackson-%EC%98%88%EC%99%B8-MismatchedInputException%EC%99%80-%EA%B8%B0%ED%83%80-%EC%98%88%EC%99%B8",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://velog.io/@9to0/Jackson-%EC%98%88%EC%99%B8-MismatchedInputException%EC%99%80-%EA%B8%B0%ED%83%80-%EC%98%88%EC%99%B8",
                "title": "https://velog.io/@9to0/Jackson-%EC%98%88%EC%99%B8-MismatchedInputException%EC%99%80-%EA%B8%B0%ED%83%80-%EC%98%88%EC%99%B8"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 18,
        "depth": 1
      }
    },
    "8fff60fd-4e42-420f-9717-2e11915bdfe9": {
      "id": "8fff60fd-4e42-420f-9717-2e11915bdfe9",
      "value": [
        {
          "_id": "e27ad439-de5f-4f12-afd0-bc25d67c197c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://bloodguy.tistory.com/entry/Java-Jackson-ObjectMapper%EB%A1%9C-json-%EB%B3%80%ED%99%98%EC%8B%9C-object-%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%B4-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-array-%EB%A1%9C-%EB%84%98%EC%96%B4%EC%98%AC-%EB%95%8C-MismatchedInputException-%EB%B0%9C%EC%83%9D%EC%8B%9C",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://bloodguy.tistory.com/entry/Java-Jackson-ObjectMapper%EB%A1%9C-json-%EB%B3%80%ED%99%98%EC%8B%9C-object-%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%B4-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-array-%EB%A1%9C-%EB%84%98%EC%96%B4%EC%98%AC-%EB%95%8C-MismatchedInputException-%EB%B0%9C%EC%83%9D%EC%8B%9C",
                "title": "https://bloodguy.tistory.com/entry/Java-Jackson-ObjectMapper%EB%A1%9C-json-%EB%B3%80%ED%99%98%EC%8B%9C-object-%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%B4-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-array-%EB%A1%9C-%EB%84%98%EC%96%B4%EC%98%AC-%EB%95%8C-MismatchedInputException-%EB%B0%9C%EC%83%9D%EC%8B%9C"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "a3e8c985-fc94-4cd1-ac64-12f6c7501fd4": {
      "id": "a3e8c985-fc94-4cd1-ac64-12f6c7501fd4",
      "value": [
        {
          "_id": "08cb31be-9168-494a-ada7-fe83accd28bd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "c7c0ff23-fce2-4e52-b200-19d4e4078ff7": {
      "id": "c7c0ff23-fce2-4e52-b200-19d4e4078ff7",
      "value": [
        {
          "_id": "2d310350-9fe2-4418-9055-bebea4015ec7",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "d6be6a9c-881d-4956-83f8-d3f4038dd859": {
      "id": "d6be6a9c-881d-4956-83f8-d3f4038dd859",
      "value": [
        {
          "_id": "cff33374-5ff0-4a25-8349-a005bd8d3779",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java : 27",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "e23e2960-4ff0-4296-b66c-a5dd14dc8e27": {
      "id": "e23e2960-4ff0-4296-b66c-a5dd14dc8e27",
      "value": [
        {
          "_id": "2bfdfab3-7116-48d2-9c4c-2e0ad816e007",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "edb394dd-a7df-4fa0-bc97-f285e2a33ce7": {
      "id": "edb394dd-a7df-4fa0-bc97-f285e2a33ce7",
      "value": [
        {
          "_id": "2d4aa6e4-ba4a-4738-b5a1-c15f1a055a9a",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T20:09:29.741+09:00 ERROR 30484 --- [OdodocProject] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.ssafy.ododoc.file.service.FileService.doFileSave(FileService.java:27) ~[classes/:na]\n\tat com.ssafy.ododoc.file.controller.FileController.saveFile(FileController.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "ef6ca784-c9b8-4c0f-97f5-274b59eb9cb1": {
      "id": "ef6ca784-c9b8-4c0f-97f5-274b59eb9cb1",
      "value": [
        {
          "_id": "5ef673de-ddb6-4522-9633-67e36f9bedab",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "f617baee-141e-4166-8356-03b547825d48": {
      "id": "f617baee-141e-4166-8356-03b547825d48",
      "value": [
        {
          "_id": "d4562e94-597e-4d17-ad12-635915a94451",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "fc77c874-636f-4034-b0c7-45627ce31764": {
      "id": "fc77c874-636f-4034-b0c7-45627ce31764",
      "value": [
        {
          "_id": "27fe43c4-7865-4d34-a219-109d7f9b16cf",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJackson 라이브러리를 사용하여 JSON 데이터를 Java 객체로 변환시킬 때 가끔씩 발생하는 'MismatchedInputException' 오류와 그 외 오류에 대해 설명한다. 이 오류는 Java 객체가 가진 필드와 JSON 데이터의 필드가 일치하지 않을 때 발생한다. @JsonCreator 나 @JsonProperty를 이용해 JSON 객체의 필드를 지정해주면 이 문제를 해결할 수 있다. 이 외에도 Jackson 라이브러리는 더 많은 설정과 기능을 제공하여, 필요한 경우 맞춤화를 통해 사용할 수 있다. 'MismatchedInputException'을 비롯한 Jackson 라이브러리의 오류 대응 방법을 익혀둘 필요가 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 19,
        "depth": 2
      }
    },
    "fe6b0e9f-9ad0-4752-8991-8c83d3a34da5": {
      "id": "fe6b0e9f-9ad0-4752-8991-8c83d3a34da5",
      "value": [
        {
          "_id": "99b5dba3-2a0f-46a9-b22c-ef181c512fd6",
          "type": "heading-two",
          "children": [
            {
              "text": "검색 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 12,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649dfef799c2a76e312c8a9"
  },
  "directoryId": 312,
  "lastOrder": 6,
  "content": {
    "0e4be173-7920-492a-9ec5-52de795e11f6": {
      "id": "0e4be173-7920-492a-9ec5-52de795e11f6",
      "value": [
        {
          "_id": "dca7648c-1080-4967-9dbc-cba78ce939de",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.*;\n\n@Getter\n@Setter\n@RequiredArgsConstructor\npublic class FileRequest {\n    private String id;\n    private String title;\n    private String content;\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "2c2331fb-c529-452a-a6a5-35fd59970a5b": {
      "id": "2c2331fb-c529-452a-a6a5-35fd59970a5b",
      "value": [
        {
          "_id": "76c9c09f-1c08-4289-9127-c33d3daa35be",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileRequest에는 id, title, content 필드를 가지는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "3c1f5ff7-209e-4250-86b7-0221c176b0a0": {
      "id": "3c1f5ff7-209e-4250-86b7-0221c176b0a0",
      "value": [
        {
          "_id": "12f822a0-846a-4eb6-b532-7eb9a1542281",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "4db9482b-baa8-4036-b63e-2ad6cc07fb83": {
      "id": "4db9482b-baa8-4036-b63e-2ad6cc07fb83",
      "value": [
        {
          "_id": "e547a965-4e0d-483e-bfbc-e31bf4fd97f3",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "902fb13a-4a6f-45ca-9ce1-1216bb08326d": {
      "id": "902fb13a-4a6f-45ca-9ce1-1216bb08326d",
      "value": [
        {
          "_id": "3dfc555a-9ada-4a19-82b5-ead739d50e7b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "924200e3-8aa1-401e-9baf-a00834aa616d": {
      "id": "924200e3-8aa1-401e-9baf-a00834aa616d",
      "value": [
        {
          "_id": "ba459cfa-bf47-412f-91f7-b64864734bb8",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "a9c8989f-03b9-42a3-8ba3-2e7d2a6a0c57": {
      "id": "a9c8989f-03b9-42a3-8ba3-2e7d2a6a0c57",
      "value": [
        {
          "_id": "be8121ef-2fab-41b2-be8d-8ba9c59093e7",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "e4fd50ec-c985-49fc-9d01-8292b6e60408": {
      "id": "e4fd50ec-c985-49fc-9d01-8292b6e60408",
      "value": [
        {
          "_id": "f2067586-83e2-4922-a007-e885caa3398a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649e6f8799c2a76e312c8aa"
  },
  "directoryId": 313,
  "lastOrder": -1,
  "content": {
    "52f56a6b-c350-4d88-a14a-0629b78c451d": {
      "id": "52f56a6b-c350-4d88-a14a-0629b78c451d",
      "value": [
        {
          "_id": "683703ad-6b67-4806-aaa4-5314b9d2134c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649e6f8799c2a76e312c8ab"
  },
  "directoryId": 315,
  "lastOrder": 17,
  "content": {
    "0f73108a-086b-4424-bfdd-c8edded21753": {
      "id": "0f73108a-086b-4424-bfdd-c8edded21753",
      "value": [
        {
          "_id": "49dba088-e1c3-435d-9e1a-a3a91142e59c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "1f83eead-a754-44ac-8beb-0cb9bcc231ac": {
      "id": "1f83eead-a754-44ac-8beb-0cb9bcc231ac",
      "value": [
        {
          "_id": "fb68922e-4b38-4494-b7f3-c8f43436d4fa",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n한국어로 요약하면, 파일 요청에 대한 정보를 담은 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "4062af41-0ea4-42c5-8971-088c4e3bbac5": {
      "id": "4062af41-0ea4-42c5-8971-088c4e3bbac5",
      "value": [
        {
          "_id": "0ee72ab5-7529-4c27-8860-266b257216b7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "7cb05c95-a0a4-4b05-95d9-86f678f2940d": {
      "id": "7cb05c95-a0a4-4b05-95d9-86f678f2940d",
      "value": [
        {
          "_id": "5af1d608-0507-4e9c-953f-75c53e7dba9b",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "9ca59a02-6c5a-4b6a-b85d-8b47530d5706": {
      "id": "9ca59a02-6c5a-4b6a-b85d-8b47530d5706",
      "value": [
        {
          "_id": "17209a01-96c4-4c12-bfcb-92ff88d560c3",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "c23d7f40-adad-402f-9068-7ef658da1434": {
      "id": "c23d7f40-adad-402f-9068-7ef658da1434",
      "value": [
        {
          "_id": "47fd60f2-81de-45ca-a1b0-96b4bbf401d7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "e3ff72eb-b5b8-4ac6-9abf-643c2f270ea6": {
      "id": "e3ff72eb-b5b8-4ac6-9abf-643c2f270ea6",
      "value": [
        {
          "_id": "9ecab1b7-e25b-41df-a913-49918631a303",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileRequest.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "f04e19f0-aaab-4bc3-893b-a0c1f771c4aa": {
      "id": "f04e19f0-aaab-4bc3-893b-a0c1f771c4aa",
      "value": [
        {
          "_id": "641876b8-005c-419b-ba25-fbd5eea021fc",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.dto;\n\nimport lombok.*;\n\n@Getter\n@Setter\n@RequiredArgsConstructor\npublic class FileRequest {\n    private String id;\n    private String title;\n    private String content;\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649f50a799c2a76e312c8ac"
  },
  "directoryId": 319,
  "lastOrder": 0,
  "content": {
    "6fbf2a4e-fe53-4a3d-87ac-b6eeee57029b": {
      "id": "6fbf2a4e-fe53-4a3d-87ac-b6eeee57029b",
      "value": [
        {
          "_id": "485f583d-44f3-4728-87c1-bac42d578bbb",
          "type": "paragraph",
          "children": [
            {
              "text": "/",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649fc13799c2a76e312c8ad"
  },
  "directoryId": 321,
  "lastOrder": 33,
  "content": {
    "04fe6a04-c27e-4cc8-bb87-3eb986ca3937": {
      "id": "04fe6a04-c27e-4cc8-bb87-3eb986ca3937",
      "value": [
        {
          "_id": "2ee7b300-988e-470f-bdf6-590228d28c3f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 5,
        "depth": 0
      }
    },
    "061e559b-368c-4726-bea2-414550230c1b": {
      "id": "061e559b-368c-4726-bea2-414550230c1b",
      "value": [
        {
          "_id": "e17315c9-4c4e-45ac-a9e0-e21b32b9653b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false,
              "type": "link",
              "children": [
                {
                  "text": "https://namu.wiki/w/%EB%84%88%EB%B9%84%20%EC%9A%B0%EC%84%A0%20%ED%83%90%EC%83%89",
                  "bold": false,
                  "italic": false,
                  "underline": false,
                  "strike": false,
                  "code": false
                }
              ],
              "props": {
                "nodeType": "inline",
                "checked": false,
                "target": "_blank",
                "rel": "noreferrer",
                "url": "https://namu.wiki/w/%EB%84%88%EB%B9%84%20%EC%9A%B0%EC%84%A0%20%ED%83%90%EC%83%89",
                "title": "https://namu.wiki/w/%EB%84%88%EB%B9%84%20%EC%9A%B0%EC%84%A0%20%ED%83%90%EC%83%89"
              }
            },
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "09c5a60e-c180-47fe-b684-4389a1367ddd": {
      "id": "09c5a60e-c180-47fe-b684-4389a1367ddd",
      "value": [
        {
          "_id": "9014f778-5b71-4130-aeda-969a839889ba",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n\"너비 우선 탐색\"은 그래프나 트리에서 루트 노드부터 가까운 노드를 먼저 탐색하는 방법입니다. 너비가 우선이기 때문에 동일한 레벨의 노드들을 모두 방문하고 다음 레벨의 노드를 방문합니다. 간선의 가중치는 고려해야할 요소가 아니며, 가장 적은 수의 간선을 거치는 경로를 찾는데 유용합니다. 너비 우선 탐색은 주로 간선의 수가 적고 너비가 넓은 그래프에 사용됩니다. 알고리즘의 탐색 순서는 사용하는 큐의 종류에 따라 달라질 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 13,
        "depth": 2
      }
    },
    "769c336d-e4d9-477a-a785-d1d1dcacffea": {
      "id": "769c336d-e4d9-477a-a785-d1d1dcacffea",
      "value": [
        {
          "_id": "d1c2ee1c-c2ab-4621-ba53-9835695d09e0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 28,
        "depth": 0
      }
    },
    "86737246-e19c-404e-b604-7a6f2d72e950": {
      "id": "86737246-e19c-404e-b604-7a6f2d72e950",
      "value": [
        {
          "_id": "1bf4548c-22a2-45c6-9a89-0f422411352c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "8f69e764-c130-4d02-b697-9797e90dc43c": {
      "id": "8f69e764-c130-4d02-b697-9797e90dc43c",
      "value": [
        {
          "_id": "b496558f-f972-4c75-90e9-12ae7a9429c5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "9b07f236-77a8-4df0-a1e5-7e084adc8baa": {
      "id": "9b07f236-77a8-4df0-a1e5-7e084adc8baa",
      "value": [
        {
          "_id": "4b2963bd-da14-40c3-bfbe-a63314a10fe4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "abcc9516-1285-4cc4-91e7-fc52322e13e6": {
      "id": "abcc9516-1285-4cc4-91e7-fc52322e13e6",
      "value": [
        {
          "_id": "10c85310-7a77-42ad-a48b-a0e76c998df9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "b277b987-5241-481e-98a5-40b2685843fe": {
      "id": "b277b987-5241-481e-98a5-40b2685843fe",
      "value": [
        {
          "_id": "6c4acf44-8dfd-4837-9607-08c422f04c8a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "ddbffcb1-ce45-4a97-b888-712a5ee90319": {
      "id": "ddbffcb1-ce45-4a97-b888-712a5ee90319",
      "value": [
        {
          "_id": "d9a3356a-2b35-4aca-85a4-2746e98f2b01",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "6649fc13799c2a76e312c8ae"
  },
  "directoryId": 323,
  "lastOrder": 30,
  "content": {
    "0e5e4b52-c695-4c60-93a6-bc91838f6e41": {
      "id": "0e5e4b52-c695-4c60-93a6-bc91838f6e41",
      "value": [
        {
          "_id": "eb3fce8c-9ce6-486d-8c9e-a1a86ec5fb1e",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "1481a38f-9275-4005-b40d-472759c758d1": {
      "id": "1481a38f-9275-4005-b40d-472759c758d1",
      "value": [
        {
          "_id": "ea849492-373f-45bd-b7d9-ef42a96955bb",
          "type": "bulleted-list",
          "children": [
            {
              "text": "모든 경우의 수를 찾아보는 알고리즘",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "2c57515f-748d-41d4-9ab3-d9bf548a1d27": {
      "id": "2c57515f-748d-41d4-9ab3-d9bf548a1d27",
      "value": [
        {
          "_id": "749c1877-ba87-4b2e-9649-8e0f07006a0f",
          "type": "heading-two",
          "children": [
            {
              "text": "BFS ( 깊이 우선 탐색)",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "31604c55-b291-4ef2-bf7f-337732549aff": {
      "id": "31604c55-b291-4ef2-bf7f-337732549aff",
      "value": [
        {
          "_id": "f90db4b5-8861-47de-bcf4-0d555a349458",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n총 25개의 ESLint 경고가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "48c2c0ca-9b97-4aa2-97de-eef5bb12ae18": {
      "id": "48c2c0ca-9b97-4aa2-97de-eef5bb12ae18",
      "value": [
        {
          "_id": "77e6ec26-8d23-42b0-a664-62639069294c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 23,
        "depth": 0
      }
    },
    "7079d910-98bf-4f52-82b8-783ef0877b51": {
      "id": "7079d910-98bf-4f52-82b8-783ef0877b51",
      "value": [
        {
          "_id": "0e2aa413-ecce-4248-b639-623999be8481",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "8ed47cef-0f70-4739-a6f6-441b8229c980": {
      "id": "8ed47cef-0f70-4739-a6f6-441b8229c980",
      "value": [
        {
          "_id": "2b21f7fc-bcfc-4cc2-8ed6-c73a0c26ee3c",
          "type": "code",
          "children": [
            {
              "text": "\u001b[1m\u001b[33mWARNING\u001b[39m\u001b[22m in \u001b[1m[eslint] \r\nsrc\\App.tsx\r\n  Line 13:8:  'SideBar' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\api\\service\\user.ts\r\n  Line 2:8:  'Cookies' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\editor\\editor\\Editor1.tsx\r\n  Line 143:11:  'rootId' is assigned a value but never used                                                                                                                               @typescript-eslint/no-unused-vars\r\n  Line 155:11:  'editorData' is assigned a value but never used                                                                                                                           @typescript-eslint/no-unused-vars\r\n  Line 198:6:   React Hook useCallback has missing dependencies: 'directoryData', 'setDirectoryData', and 'updateDirectoryItemTitle'. Either include them or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\editor\\sidebar\\Item.tsx\r\n  Line 1:27:    'useEffect' is defined but never used                                                                                                                                                            @typescript-eslint/no-unused-vars\r\n  Line 71:12:   'newFolderName' is assigned a value but never used                                                                                                                                               @typescript-eslint/no-unused-vars\r\n  Line 72:12:   'newFileName' is assigned a value but never used                                                                                                                                                 @typescript-eslint/no-unused-vars\r\n  Line 115:11:  'handleItemClickWrapper' is assigned a value but never used                                                                                                                                      @typescript-eslint/no-unused-vars\r\n  Line 142:11:  'findParentId' is assigned a value but never used                                                                                                                                                @typescript-eslint/no-unused-vars\r\n  Line 172:17:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\editor\\sidebar\\SideBar.tsx\r\n  Line 2:10:    'useDrop' is defined but never used                                                                                                                                                              @typescript-eslint/no-unused-vars\r\n  Line 20:10:   'useFileContext' is defined but never used                                                                                                                                                       @typescript-eslint/no-unused-vars\r\n  Line 59:12:   'isCreatingFile' is assigned a value but never used                                                                                                                                              @typescript-eslint/no-unused-vars\r\n  Line 60:12:   'newFileName' is assigned a value but never used                                                                                                                                                 @typescript-eslint/no-unused-vars\r\n  Line 85:8:    React Hook useEffect has a missing dependency: 'loadDirectory'. Either include it or remove the dependency array                                                                                 react-hooks/exhaustive-deps\r\n  Line 188:17:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\editor\\sidebar\\modal\\FileAddModal.tsx\r\n  Line 1:46:   'useEffect' is defined but never used                                                                                                                                                            @typescript-eslint/no-unused-vars\r\n  Line 38:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n  Line 45:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\editor\\sidebar\\modal\\SettingModal.tsx\r\n  Line 1:17:  'useState' is defined but never used           @typescript-eslint/no-unused-vars\r\n  Line 2:10:  'SelectChangeEvent' is defined but never used  @typescript-eslint/no-unused-vars\r\n  Line 7:8:   'FontSelector' is defined but never used       @typescript-eslint/no-unused-vars\r\n  Line 8:8:   'FontSizeSlider' is defined but never used     @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\editor\\sidebar\\modal\\TrashModal.tsx\r\n  Line 1:25:    'useState' is defined but never used                                                                                                                                                             @typescript-eslint/no-unused-vars\r\n  Line 1:35:    'useEffect' is defined but never used                                                                                                                                                            @typescript-eslint/no-unused-vars\r\n  Line 10:10:   'fetchTrashbin' is defined but never used                                                                                                                                                        @typescript-eslint/no-unused-vars\r\n  Line 31:20:   'dispatch' is assigned a value but never used                                                                                                                                                    @typescript-eslint/no-unused-vars\r\n  Line 32:13:   'accessToken' is assigned a value but never used                                                                                                                                                 @typescript-eslint/no-unused-vars\r\n  Line 134:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n  Line 137:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\homePage\\HomePage3.tsx\r\n  Line 1:39:  'useCallback' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\homePage\\HomePage4.tsx\r\n  Line 35:46:  The ref value 'googleRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'googleRef.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n  Line 36:42:  The ref value 'blogRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'blogRef.current' to a variable inside the effect, and use that variable in the cleanup function      react-hooks/exhaustive-deps\r\n  Line 37:46:  The ref value 'ododocRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ododocRef.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\homePage\\HomePage5.tsx\r\n  Line 50:19:  'setIsRow' is assigned a value but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\menu\\Menu.tsx\r\n  Line 1:10:  'useEffect' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\socialLogin\\Login.tsx\r\n  Line 15:20:  'dispatch' is assigned a value but never used                                                                         @typescript-eslint/no-unused-vars\r\n  Line 50:8:   React Hook useEffect has a missing dependency: 'sendCodeToBackend'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\startPage\\Chrome.tsx\r\n  Line 53:22:  The ref value 'pathRefs.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'pathRefs.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\startPage\\IntelliJ.tsx\r\n  Line 53:22:  The ref value 'pathRefs.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'pathRefs.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\startPage\\VSCode.tsx\r\n  Line 58:22:  The ref value 'pathRefs.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'pathRefs.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\contexts\\TrashContext.tsx\r\n  Line 46:8:  React Hook useEffect has a missing dependency: 'loadTrashbin'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\nsrc\\view\\Editor.tsx\r\n  Line 1:20:   'useEffect' is defined but never used             @typescript-eslint/no-unused-vars\r\n  Line 12:25:  'setDarkMode' is assigned a value but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\view\\HomePage.tsx\r\n  Line 12:10:  'isTypingCompletedPage2' is assigned a value but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\view\\Start.tsx\r\n  Line 3:8:  'Logo' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\n\u001b[39m\u001b[22m\r\n\r\nwebpack compiled with \u001b[1m\u001b[33m1 warning\u001b[39m\u001b[22m\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "9699fe2b-bdc7-4485-a7ba-665b9619563e": {
      "id": "9699fe2b-bdc7-4485-a7ba-665b9619563e",
      "value": [
        {
          "_id": "e11316bb-da17-45ed-b646-d427a7ee1a91",
          "type": "code",
          "children": [
            {
              "text": "N, M = map(int, input().split())\nn_lst = sorted(list(map(int, input().split())))\nans = []\n\ndef dfs(n, lst):\n    if n == M:\n        ans.append(lst)\n        return\n    prev = 0\n    for j in range(N):\n        if prev != n_lst[j]:\n            prev = n_lst[j]\n            dfs(n+1, lst + [n_lst[j]])\n\ndfs(0, [])\nfor li in ans:\n    print(*li)",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "VSCode",
            "language": "javascript",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "9de8f11e-ac6f-4c26-9086-5d0b2f6bd491": {
      "id": "9de8f11e-ac6f-4c26-9086-5d0b2f6bd491",
      "value": [
        {
          "_id": "d18a84c4-95da-4d97-b833-962d06618870",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "9fad16c2-4eb4-4a79-b7cf-b2ac4a3910f8": {
      "id": "9fad16c2-4eb4-4a79-b7cf-b2ac4a3910f8",
      "value": [
        {
          "_id": "18f482ba-dba0-4020-b8d9-2464e2f35e7a",
          "type": "code",
          "children": [
            {
              "text": "Compiled with warnings.\r\n\r\n[eslint] \r\nsrc\\App.tsx\r\n  Line 13:8:  'SideBar' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\api\\service\\user.ts\r\n  Line 2:8:  'Cookies' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\editor\\editor\\Editor1.tsx\r\n  Line 143:11:  'rootId' is assigned a value but never used                                                                                                                               @typescript-eslint/no-unused-vars\r\n  Line 155:11:  'editorData' is assigned a value but never used                                                                                                                           @typescript-eslint/no-unused-vars\r\n  Line 198:6:   React Hook useCallback has missing dependencies: 'directoryData', 'setDirectoryData', and 'updateDirectoryItemTitle'. Either include them or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\editor\\sidebar\\Item.tsx\r\n  Line 1:27:    'useEffect' is defined but never used                                                                                                                                                            @typescript-eslint/no-unused-vars\r\n  Line 71:12:   'newFolderName' is assigned a value but never used                                                                                                                                               @typescript-eslint/no-unused-vars\r\n  Line 72:12:   'newFileName' is assigned a value but never used                                                                                                                                                 @typescript-eslint/no-unused-vars\r\n  Line 115:11:  'handleItemClickWrapper' is assigned a value but never used                                                                                                                                      @typescript-eslint/no-unused-vars\r\n  Line 142:11:  'findParentId' is assigned a value but never used                                                                                                                                                @typescript-eslint/no-unused-vars\r\n  Line 172:17:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\editor\\sidebar\\SideBar.tsx\r\n  Line 2:10:    'useDrop' is defined but never used                                                                                                                                                              @typescript-eslint/no-unused-vars\r\n  Line 20:10:   'useFileContext' is defined but never used                                                                                                                                                       @typescript-eslint/no-unused-vars\r\n  Line 59:12:   'isCreatingFile' is assigned a value but never used                                                                                                                                              @typescript-eslint/no-unused-vars\r\n  Line 60:12:   'newFileName' is assigned a value but never used                                                                                                                                                 @typescript-eslint/no-unused-vars\r\n  Line 85:8:    React Hook useEffect has a missing dependency: 'loadDirectory'. Either include it or remove the dependency array                                                                                 react-hooks/exhaustive-deps\r\n  Line 188:17:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\editor\\sidebar\\modal\\FileAddModal.tsx\r\n  Line 1:46:   'useEffect' is defined but never used                                                                                                                                                            @typescript-eslint/no-unused-vars\r\n  Line 38:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n  Line 45:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\editor\\sidebar\\modal\\SettingModal.tsx\r\n  Line 1:17:  'useState' is defined but never used           @typescript-eslint/no-unused-vars\r\n  Line 2:10:  'SelectChangeEvent' is defined but never used  @typescript-eslint/no-unused-vars\r\n  Line 7:8:   'FontSelector' is defined but never used       @typescript-eslint/no-unused-vars\r\n  Line 8:8:   'FontSizeSlider' is defined but never used     @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\editor\\sidebar\\modal\\TrashModal.tsx\r\n  Line 1:25:    'useState' is defined but never used                                                                                                                                                             @typescript-eslint/no-unused-vars\r\n  Line 1:35:    'useEffect' is defined but never used                                                                                                                                                            @typescript-eslint/no-unused-vars\r\n  Line 10:10:   'fetchTrashbin' is defined but never used                                                                                                                                                        @typescript-eslint/no-unused-vars\r\n  Line 31:20:   'dispatch' is assigned a value but never used                                                                                                                                                    @typescript-eslint/no-unused-vars\r\n  Line 32:13:   'accessToken' is assigned a value but never used                                                                                                                                                 @typescript-eslint/no-unused-vars\r\n  Line 134:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n  Line 137:25:  Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop  jsx-a11y/img-redundant-alt\r\n\r\nsrc\\components\\homePage\\HomePage3.tsx\r\n  Line 1:39:  'useCallback' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\homePage\\HomePage4.tsx\r\n  Line 35:46:  The ref value 'googleRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'googleRef.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n  Line 36:42:  The ref value 'blogRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'blogRef.current' to a variable inside the effect, and use that variable in the cleanup function      react-hooks/exhaustive-deps\r\n  Line 37:46:  The ref value 'ododocRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ododocRef.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\homePage\\HomePage5.tsx\r\n  Line 50:19:  'setIsRow' is assigned a value but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\menu\\Menu.tsx\r\n  Line 1:10:  'useEffect' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\components\\socialLogin\\Login.tsx\r\n  Line 15:20:  'dispatch' is assigned a value but never used                                                                         @typescript-eslint/no-unused-vars\r\n  Line 50:8:   React Hook useEffect has a missing dependency: 'sendCodeToBackend'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\startPage\\Chrome.tsx\r\n  Line 53:22:  The ref value 'pathRefs.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'pathRefs.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\startPage\\IntelliJ.tsx\r\n  Line 53:22:  The ref value 'pathRefs.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'pathRefs.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\components\\startPage\\VSCode.tsx\r\n  Line 58:22:  The ref value 'pathRefs.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'pathRefs.current' to a variable inside the effect, and use that variable in the cleanup function  react-hooks/exhaustive-deps\r\n\r\nsrc\\contexts\\TrashContext.tsx\r\n  Line 46:8:  React Hook useEffect has a missing dependency: 'loadTrashbin'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\nsrc\\view\\Editor.tsx\r\n  Line 1:20:   'useEffect' is defined but never used             @typescript-eslint/no-unused-vars\r\n  Line 12:25:  'setDarkMode' is assigned a value but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\view\\HomePage.tsx\r\n  Line 12:10:  'isTypingCompletedPage2' is assigned a value but never used  @typescript-eslint/no-unused-vars\r\n\r\nsrc\\view\\Start.tsx\r\n  Line 3:8:  'Logo' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nSearch for the keywords to learn more about each warning.\r\nTo ignore, add // eslint-disable-next-line to the line before.\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "bc0226b2-2c4f-4941-a208-dedcba8296a0": {
      "id": "bc0226b2-2c4f-4941-a208-dedcba8296a0",
      "value": [
        {
          "_id": "71cba146-c828-453a-a65d-ffd12d07d095",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 21,
        "depth": 0
      }
    },
    "c16844d3-f08b-4e59-b0dc-add1672b0427": {
      "id": "c16844d3-f08b-4e59-b0dc-add1672b0427",
      "value": [
        {
          "_id": "4dbfe9fb-175a-4e97-9d0b-a60065b9141b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n소스 코드에 다양한 경고들이 컴파일되어 있으며, 주로 사용되지 않는 변수들이나 누락된 의존성 등이 포함되어 있음을 알려줌.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "e80d8407-234d-4b74-92ce-aac9ab7497f2": {
      "id": "e80d8407-234d-4b74-92ce-aac9ab7497f2",
      "value": [
        {
          "_id": "c09f4ffa-db9a-436d-951d-4f28d7086fb9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "ec5ffa86-d1f2-4870-a15e-26838e7a7094": {
      "id": "ec5ffa86-d1f2-4870-a15e-26838e7a7094",
      "value": [
        {
          "_id": "8bfaa5f7-ffa5-49ec-b226-5df1a131ae84",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "f0c48731-3e39-49b5-bcb3-7e1d44b0514b": {
      "id": "f0c48731-3e39-49b5-bcb3-7e1d44b0514b",
      "value": [
        {
          "_id": "b6a8869e-d6ac-4ce2-bfb3-a2f0cb2c5d79",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 28,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a031c799c2a76e312c8af"
  },
  "directoryId": 325,
  "lastOrder": 11,
  "content": {
    "5aa08cf2-2884-41bb-b10f-bd7b4a80959c": {
      "id": "5aa08cf2-2884-41bb-b10f-bd7b4a80959c",
      "value": [
        {
          "_id": "52299eba-9c7b-4ab1-b6ab-a8b305e252c7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a031c799c2a76e312c8b0"
  },
  "directoryId": 326,
  "lastOrder": 11,
  "content": {
    "eef3c674-0365-4fdf-8836-4830e829b42f": {
      "id": "eef3c674-0365-4fdf-8836-4830e829b42f",
      "value": [
        {
          "_id": "209846d9-91dd-4b4d-8d5a-59e4fc5e6089",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a0a25799c2a76e312c8b1"
  },
  "directoryId": 330,
  "lastOrder": 10,
  "content": {
    "0433f662-be72-429e-93af-cc78e79fea57": {
      "id": "0433f662-be72-429e-93af-cc78e79fea57",
      "value": [
        {
          "_id": "6aa86f53-0d63-4cdd-8b4b-f33f1ab6e566",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "055b4fc3-76e3-43f2-9797-3a71795cca73": {
      "id": "055b4fc3-76e3-43f2-9797-3a71795cca73",
      "value": [
        {
          "_id": "5089a086-8ffa-4770-8dad-60057add8476",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19T22:52:26.791+09:00 ERROR 19652 --- [OdodocProject] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.ssafy.ododoc.file.service.FileService.doFileSave(FileService.java:27) ~[classes/:na]\n\tat com.ssafy.ododoc.file.controller.FileController.saveFile(FileController.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 0
      }
    },
    "25fb8d0e-d5fd-4851-973c-e4a0c26d3d85": {
      "id": "25fb8d0e-d5fd-4851-973c-e4a0c26d3d85",
      "value": [
        {
          "_id": "5e3b3b40-b4f3-4d41-a383-0ebb832a5827",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nobjectMapper.convertValue 메서드의 두 번째 매개변수인 List.class에서 발생하는 에러이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "614e101a-2ed8-46b5-b735-d1a8781512b9": {
      "id": "614e101a-2ed8-46b5-b735-d1a8781512b9",
      "value": [
        {
          "_id": "0d581c2b-a56b-47e0-87de-86677d919ee9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "a5dbadd2-bb21-4ec6-8317-945b21d81203": {
      "id": "a5dbadd2-bb21-4ec6-8317-945b21d81203",
      "value": [
        {
          "_id": "cc21bd4e-24b3-46d9-ba3d-95d637f640f7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "be57eef1-d96c-4dff-8695-996b8501a3cb": {
      "id": "be57eef1-d96c-4dff-8695-996b8501a3cb",
      "value": [
        {
          "_id": "862b2878-f1d7-4648-9c67-10106774eb3a",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "c0b0bf58-c507-490e-bb98-fb7efc0c7b87": {
      "id": "c0b0bf58-c507-490e-bb98-fb7efc0c7b87",
      "value": [
        {
          "_id": "fe0ba14d-81b6-46b3-8d83-b0c743159c47",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n요청 처리 중에 발생한 예외로, `java.util.ArrayList<java.lang.Object>` 타입으로의 역직렬화가 실패하여 발생한 것으로 보입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "c19803ef-5856-4527-89c8-08c3cba21d19": {
      "id": "c19803ef-5856-4527-89c8-08c3cba21d19",
      "value": [
        {
          "_id": "45881c2d-5954-4a77-813b-da492f341fbc",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "c2d86743-1385-47cc-b8ab-8998fce25cdc": {
      "id": "c2d86743-1385-47cc-b8ab-8998fce25cdc",
      "value": [
        {
          "_id": "2ff18592-3c89-4d2d-8b93-25028467eb6f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "c9e10e74-b07c-40e3-bc48-e69616717a6a": {
      "id": "c9e10e74-b07c-40e3-bc48-e69616717a6a",
      "value": [
        {
          "_id": "b9ebc9ed-5293-43c6-b2d0-d1a7565c0f1e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "f9e39d6b-9bdb-4a6c-8643-b9da7faefe36": {
      "id": "f9e39d6b-9bdb-4a6c-8643-b9da7faefe36",
      "value": [
        {
          "_id": "03bce1fd-7f8e-4d4d-8f57-52f5ee095bbb",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "fbb4460e-3ef6-41d4-aa54-25b02a0a5d58": {
      "id": "fbb4460e-3ef6-41d4-aa54-25b02a0a5d58",
      "value": [
        {
          "_id": "6cccda3c-2660-4c9e-a278-78b7ff35d433",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java : 27",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a0a25799c2a76e312c8b2"
  },
  "directoryId": 332,
  "lastOrder": 0,
  "content": {
    "b9612fbf-264b-4304-8bed-5d3476efc31a": {
      "id": "b9612fbf-264b-4304-8bed-5d3476efc31a",
      "value": [
        {
          "_id": "8c478fc5-d715-497f-a32c-83be61849ec9",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a0c61fee7d16260319859"
  },
  "directoryId": 334,
  "lastOrder": 0,
  "content": {
    "558a8f5a-9bd8-406b-bbe1-481c61c01a51": {
      "id": "558a8f5a-9bd8-406b-bbe1-481c61c01a51",
      "value": [
        {
          "_id": "c40eb5ee-2d0c-48a1-bc26-167cd33893c1",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a0c61fee7d1626031985a"
  },
  "directoryId": 335,
  "lastOrder": 97,
  "content": {
    "75e588a3-89ac-45cd-b81d-fe29ae49ea9d": {
      "id": "75e588a3-89ac-45cd-b81d-fe29ae49ea9d",
      "value": [
        {
          "_id": "79af313d-0c7a-4c24-a952-e692c9bcb4d5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a0c61fee7d1626031985b"
  },
  "directoryId": 336,
  "lastOrder": 4,
  "content": {
    "3b5b4e73-9568-4e88-855c-19816de6024d": {
      "id": "3b5b4e73-9568-4e88-855c-19816de6024d",
      "value": [
        {
          "_id": "519e1bf9-6b0e-41ca-844c-5ba2dc4963d3",
          "type": "paragraph",
          "children": [
            {
              "text": "ㄴㅁㅇㅎㅇㅎㅁㄴㅇㅎㅁㄴㅇㅎㅁㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "5f89abe8-f9be-4b1d-b128-7faba9511475": {
      "id": "5f89abe8-f9be-4b1d-b128-7faba9511475",
      "value": [
        {
          "_id": "cbcdf27c-ae7f-4408-bf68-9f4c7d5fbbdd",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 4,
        "depth": 0
      }
    },
    "6d1a2aea-2523-4e30-8b25-9e73f30f7135": {
      "id": "6d1a2aea-2523-4e30-8b25-9e73f30f7135",
      "value": [
        {
          "_id": "30917668-03ec-4686-b85f-18ec47b93345",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅇㅎㅇㅎㅇㅎㅇㅎㅇㅎㅇㅎㅇㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "7a67c7e4-8631-4415-b233-f30a2bf564f8": {
      "id": "7a67c7e4-8631-4415-b233-f30a2bf564f8",
      "value": [
        {
          "_id": "baa7acf8-4cce-4c5e-ae9d-c8c91ca26af3",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅎㅇㅎㅇㅁㅎㅇㄶㅇㅎㅇ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "e0c24bcf-ebf3-466f-a548-f1509a8f3b9f": {
      "id": "e0c24bcf-ebf3-466f-a548-f1509a8f3b9f",
      "value": [
        {
          "_id": "c25054fe-f688-4481-bb21-330a15ab14cf",
          "type": "paragraph",
          "children": [
            {
              "text": "ㅇㅎㅇㅎㅇㅎㅇㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎㅎ",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 3,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a136afee7d1626031985c"
  },
  "directoryId": 338,
  "lastOrder": 85,
  "content": {
    "018be867-b33c-4c05-bb5f-56ae9d5eedf8": {
      "id": "018be867-b33c-4c05-bb5f-56ae9d5eedf8",
      "value": [
        {
          "_id": "c2f3c668-cbda-4c35-825b-88dd9cbd2380",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리를 관리하고 파일을 생성하며, 서버와의 연결을 확인하고 새로고침하여 디렉토리를 갱신하는 프로그램이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "0438bcf5-76cc-4835-aa34-f144a4129b80": {
      "id": "0438bcf5-76cc-4835-aa34-f144a4129b80",
      "value": [
        {
          "_id": "5190eec2-c7e7-4d5e-bd2a-92bd700f4e5c",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.project.Project;\n\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\n\npublic class ProjectProvider {\n\n    private Queue<Project> projects = new ArrayDeque<>();\n\n    private ProjectProvider() {}\n\n    private static class ProjectProviderHolder {\n        private static final ProjectProvider INSTANCE = new ProjectProvider();\n    }\n\n    public static ProjectProvider getInstance() {\n        return ProjectProviderHolder.INSTANCE;\n    }\n\n    public Queue<Project> getProjects() {\n        return projects;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 25,
        "depth": 1
      }
    },
    "04d7e9e3-a57b-4020-a202-25c859af7fc2": {
      "id": "04d7e9e3-a57b-4020-a202-25c859af7fc2",
      "value": [
        {
          "_id": "19112e48-6b3d-44dc-a473-e81725a56ba6",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DirectoryDto {\n\n    private Long id = -1L;\n    private String name = \"\";\n    private String type = \"\";\n    private List<DirectoryDto> children = new ArrayList<>();\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    public List<DirectoryDto> getChildren() {\n        return children;\n    }\n\n    public void setChildren(List<DirectoryDto> children) {\n        this.children = children;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 55,
        "depth": 1
      }
    },
    "050a82cb-f161-45ad-8843-a66b83473263": {
      "id": "050a82cb-f161-45ad-8843-a66b83473263",
      "value": [
        {
          "_id": "6df9d6cc-4750-4847-b77a-657506ad7036",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DisposableService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 66,
        "depth": 1
      }
    },
    "06b7ce2c-d2b9-4c32-8ff0-c753934a0642": {
      "id": "06b7ce2c-d2b9-4c32-8ff0-c753934a0642",
      "value": [
        {
          "_id": "75181be7-585a-4065-a908-1f2d184cd7a7",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일과 폴더 트리 셀을 수정하고 저장하는 기능을 구현하였다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 44,
        "depth": 1
      }
    },
    "106999d6-e11b-486a-b928-2df49639ffef": {
      "id": "106999d6-e11b-486a-b928-2df49639ffef",
      "value": [
        {
          "_id": "2bad48e5-5c89-4361-91e7-3db1a8452ef0",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.entity;\n\nimport com.intellij.psi.PsiFile;\n\npublic class ProjectInfo implements Cloneable{\n\n    private PsiFile psiFile;\n    private String hash;\n    private String sourceCode;\n\n    public ProjectInfo(PsiFile psiFile, String hash, String sourceCode) {\n        this.psiFile = psiFile;\n        this.hash = hash;\n        this.sourceCode = sourceCode;\n    }\n\n    public PsiFile getPsiFile() {\n        return psiFile;\n    }\n\n    public String getHash() {\n        return hash;\n    }\n\n    public String getSourceCode() {\n        return sourceCode;\n    }\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "1273f8a3-b68c-4564-99c4-3ff598ad02d4": {
      "id": "1273f8a3-b68c-4564-99c4-3ff598ad02d4",
      "value": [
        {
          "_id": "9934b875-fa58-4298-b2a7-7e7efe05a3f5",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OpenOdodocPlugin.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "1569a3bf-1bd9-4f06-8025-a903c3b498ba": {
      "id": "1569a3bf-1bd9-4f06-8025-a903c3b498ba",
      "value": [
        {
          "_id": "ab392897-77e7-487a-9bbb-7ce1d659877a",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.CreateRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.DirectoryDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.control.*;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseButton;\nimport javafx.scene.layout.BorderPane;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\nimport reactor.core.publisher.Mono;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\n\npublic class DirectoryFrame extends Application {\n\n    private Long currentDirectoryId;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n    private TreeView<FileInfo> treeView;\n    private ContextMenu folderContextMenu = new ContextMenu();\n    private ContextMenu fileContextMenu = new ContextMenu();\n    private Stage stage;\n\n    @Override\n    public void start(Stage initStage) {\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n        ResultDto resultDto = retrieveDirectory(directoryInfoManager.getRootId()).block();\n        this.stage = initStage;\n        // 제목 설정\n        stage.setTitle(\" \" + directoryInfoManager.getTitle());\n        currentDirectoryId = directoryInfoManager.getRootId();\n\n        // 오른쪽 마우스 이벤트 목록 생성\n        makeContextMenu();\n\n        // 디렉토리 UI 생성\n        TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n        invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n\n        treeView = new TreeView<>(invisibleRoot);\n        treeView.setShowRoot(false);\n        treeView.setEditable(true);\n        treeView.setCellFactory(tv -> new FileAndFolderTreeCell(folderContextMenu, fileContextMenu, stage, this::refreshDirectoryView));\n        treeView.setOnMouseClicked(event -> {\n            // 오른쪽 마우스 클릭 시 빈 공간 일 경우 파일 및 폴더 생성\n            if (event.getButton() == MouseButton.SECONDARY) {\n                if(treeView.getSelectionModel().getSelectedItem() == null){\n                    folderContextMenu.show(treeView, event.getScreenX(), event.getScreenY());\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                } else{\n                    currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                }\n            } else {\n                folderContextMenu.hide();\n            }\n\n            // 왼쪽 마우스 클릭 시\n            if(event.getButton() == MouseButton.PRIMARY){\n                // 빈공간일 경우 폴더 및 파일을 선택 비활성화\n                if(event.getTarget() instanceof TreeCell<?> && ((TreeCell) event.getTarget()).isEmpty()){\n                    treeView.getSelectionModel().clearSelection();\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                }\n                else{\n                    if(treeView.getSelectionModel().getSelectedItems().isEmpty()){\n                        currentDirectoryId = directoryInfoManager.getRootId();\n                    }\n                    else{\n                        currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                    }\n                }\n            }\n        });\n\n        Button refreshButton = new Button();\n        ImageView refreshIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/refresh.png\")));\n        refreshButton.setGraphic(refreshIcon);\n        refreshButton.setTooltip(new Tooltip(\"새로고침\"));\n        refreshButton.setOnAction(e -> refreshDirectoryView());\n\n        Button connectButton = new Button();\n        ImageView connectIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/connect.png\")));\n        connectButton.setGraphic(connectIcon);\n        connectButton.setTooltip(new Tooltip(\"서버 연결\"));\n        connectButton.setOnAction(e -> connectWebSocket());\n\n        Button homeButton = new Button();\n        ImageView homeIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/home.png\")));\n        homeButton.setGraphic(homeIcon);\n        homeButton.setTooltip(new Tooltip(\"Ododoc 홈페이지로 이동\"));\n        homeButton.setOnAction(e -> openWebPage());\n\n//        Button logoutButton = new Button();\n//        ImageView logoutIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logout.png\")));\n//        logoutButton.setGraphic(logoutIcon);\n//        logoutButton.setTooltip(new Tooltip(\"로그아웃\"));\n//        logoutButton.setOnAction(e -> logout());\n\n        ToolBar toolBar = new ToolBar();\n        toolBar.getItems().addAll(homeButton, connectButton, refreshButton);\n        BorderPane root = new BorderPane();\n        root.setBottom(toolBar);\n        root.setCenter(treeView);\n\n\n        Scene scene = new Scene(root, 300, 500);\n        stage.setScene(scene);\n        stage.show();\n    }\n\n    private Mono<ResultDto> retrieveDirectory(long rootId) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        return webClient.get()\n                .uri(\"/\" + rootId)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .doOnSuccess(result -> {\n                    // 성공했을 경우\n                    if(result.getStatus() == 200){\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        result.setData(objectMapper.convertValue(result.getData(), DirectoryDto.class));\n                    }\n                    // 토큰이 만료되었을 경우\n                    else if(result.getStatus() == 401){\n                        result.setData(new DirectoryDto());\n                        refreshAccessToken();\n                        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId());\n                    }\n                    else{\n                        result.setData(new DirectoryDto());\n                        showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\");\n                    }\n                })\n                .doOnError(error -> showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\"));\n    }\n\n    private TreeItem<FileInfo> LoadDirectory(List<DirectoryDto> children, TreeItem<FileInfo> invisibleRoot) {\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> fileItem = new TreeItem<>(fileInfo);\n            fileItem.setExpanded(true);\n            DFS(dto.getChildren(), fileItem);\n            invisibleRoot.getChildren().add(fileItem);\n        }\n\n        return invisibleRoot;\n    }\n\n    private void DFS(List<DirectoryDto> children, TreeItem<FileInfo> fileItem) {\n\n        if(children == null){\n            return;\n        }\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> childFileItem = new TreeItem<>(fileInfo);\n            fileItem.getChildren().add(childFileItem);\n\n            DFS(dto.getChildren(), childFileItem);\n        }\n\n    }\n\n    private void makeContextMenu() {\n        MenuItem addFolder = new MenuItem(\"폴더 생성\");\n        MenuItem addFile = new MenuItem(\"파일 생성\");\n        folderContextMenu.getItems().addAll(addFolder, addFile);\n\n        MenuItem connectFile = new MenuItem(\"파일 연동\");\n        fileContextMenu.getItems().add(connectFile);\n\n        addFolder.setOnAction(e -> createFolderOrFile(\"folder\"));\n        addFile.setOnAction(e -> createFolderOrFile(\"file\"));\n        connectFile.setOnAction(e -> connectFile());\n    }\n\n    private void connectFile() {\n        ConnectedFileManager connectedFileManager = ConnectedFileManager.getInstance();\n        connectedFileManager.setDirectoryId(currentDirectoryId);\n\n        if(connectedFileManager.getDirectoryId() != -1){\n            showAlert(Alert.AlertType.INFORMATION, \"연동 성공\", \"파일과 연동에 성공하였습니다.\");\n        }\n        else{\n            showAlert(Alert.AlertType.WARNING, \"연동 실패\", \"파일과의 연동에 실패하였습니다.\");\n        }\n    }\n\n    private void createFolderOrFile(String type){\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        CreateRequestDto createRequestDto = new CreateRequestDto(currentDirectoryId, \"\", type);\n\n        webClient.post()\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        refreshDirectoryView();\n                    }\n                    else if (result.getStatus() == 401) {\n                        refreshAccessToken();\n                        showAlert(Alert.AlertType.WARNING, \"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                    else {\n                        showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                }, error -> {\n                    showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                    refreshDirectoryView();\n                });\n    }\n\n    private void refreshDirectoryView() {\n        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId()).subscribe(resultDto -> {\n            Platform.runLater(() -> {\n                TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n                invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n                treeView.setRoot(invisibleRoot);\n                treeView.setShowRoot(false);\n                treeView.refresh();\n            });\n        });\n    }\n\n    private void showAlert(Alert.AlertType type, String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    type,\n                    \" Ododoc\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private void connectWebSocket(){\n        if(BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.INFORMATION,\n                        \" Ododoc\",\n                        \"서버 연결 확인\",\n                        \"이미 서버와 연결이 되어 있습니다.\",\n                        \"/image/button/icon.png\"\n                );\n                alert.showAndWait();\n            });\n        }\n\n        else {\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    BuildResultSender.setEnableWhenPushBtn(true);\n                    BuildResultSender.setINSTANCE(null);\n                    BuildResultSender.getINSTANCE();\n                }\n            });\n        }\n\n    }\n\n    private void openWebPage(){\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n//    private void logout(){\n//        TokenManager.getInstance().setRefreshToken(null);\n//        TokenManager.getInstance().setAccessToken(null);\n//    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 19,
        "depth": 1
      }
    },
    "1d481bac-32b8-4b35-a626-fc336d4013ec": {
      "id": "1d481bac-32b8-4b35-a626-fc336d4013ec",
      "value": [
        {
          "_id": "655c00ab-4337-4fd5-a71e-386602dd0534",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ResultDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 69,
        "depth": 1
      }
    },
    "2034fa49-30ee-4aa3-af4e-748759d4e430": {
      "id": "2034fa49-30ee-4aa3-af4e-748759d4e430",
      "value": [
        {
          "_id": "0b1f46cf-4069-48b4-b182-b670a5d3165b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class MainLoginFrame extends Stage {\n\n    private static boolean isFrameVisible = false;\n\n    public MainLoginFrame() {\n        isFrameVisible = true;\n        setTitle(\" Ododoc\");\n        VBox layout = new VBox(10);\n        layout.setAlignment(Pos.CENTER);\n\n        Image windowIcon = new Image(getClass().getResourceAsStream(\"/image/button/icon.png\"));\n        getIcons().add(windowIcon);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        setOnCloseRequest(event -> {\n            if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.CONFIRMATION,\n                        \" Ododoc\",\n                        \"로그인 필요\",\n                        \"Ododoc 서비스를 이용하려면 로그인이 필요합니다.\\n정말 종료하시겠습니까?\",\n                        \"/image/button/icon.png\"\n                );\n\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() != ButtonType.OK) {\n                    event.consume();\n                }\n                else{\n                    isFrameVisible = false;\n                }\n            }\n        });\n\n        Button homeBtn = makeHomeButton();\n        Button kakaoLoginBtn = makeButton(\"kakao\"); // 카카오 로그인 버튼\n        Button naverLoginBtn = makeButton(\"naver\"); // 네이버 로그인 버튼\n        Button googleLoginBtn = makeButton(\"google\"); // 구글 로그인 버튼\n\n        layout.getChildren().addAll(homeBtn, kakaoLoginBtn, naverLoginBtn, googleLoginBtn);\n        layout.setPadding(new Insets(-15, 0, 0, 0));\n        Scene scene = new Scene(layout, 300, 400);\n        setScene(scene);\n        show();\n    }\n\n    private void onLogin(String provider) {\n        new OauthLoginFrame(this, provider);\n    }\n\n    private Button makeButton(String provider){\n        String iconImagePath = \"/image/button/\" + provider +\"_login.png\";\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(iconImagePath)));\n        btnImageView.setFitWidth(183);\n        btnImageView.setFitHeight(45);\n        Button loginBtn = new Button(\"\", btnImageView);\n        loginBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 3, 3, 3, 3;\");\n\n        String upperProvider = provider.toUpperCase();\n        loginBtn.setOnAction(e -> {\n            onLogin(upperProvider);\n        });\n\n        return loginBtn;\n    }\n\n    private Button makeHomeButton(){\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logo.png\")));\n        btnImageView.setFitWidth(184);\n        btnImageView.setFitHeight(60);\n        Button homeBtn = new Button(\"\", btnImageView);\n        homeBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 30, 0, 3, 3; -fx-border-color: transparent;\");\n\n        homeBtn.setOnAction(e -> {\n            openWebPage();\n        });\n\n        return homeBtn;\n    }\n\n    private void openWebPage() {\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n    public static boolean isFrameVisible() {\n        return isFrameVisible;\n    }\n\n\n}",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 64,
        "depth": 1
      }
    },
    "2884dc66-6ecd-4de3-8350-bc944cb9085a": {
      "id": "2884dc66-6ecd-4de3-8350-bc944cb9085a",
      "value": [
        {
          "_id": "1cebe4bb-e6ad-4df1-99f0-9929c231e21c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ErrorFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 36,
        "depth": 1
      }
    },
    "2de273d4-35bc-4621-88fa-b5fe7e9859d6": {
      "id": "2de273d4-35bc-4621-88fa-b5fe7e9859d6",
      "value": [
        {
          "_id": "bc278fda-b164-47b1-b2f8-ea8f338c86e2",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.Disposable;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.components.ServiceManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.stream.Collectors;\n\npublic class DisposableService implements Disposable {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n\n    public DisposableService(@NotNull Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void dispose() {\n        System.out.println(\"종료: \" + project.getName());\n\n        CompletableFuture.runAsync(() -> {\n            getProjectFileList();\n            processProjectFiles();\n        }).exceptionally(ex -> {\n            ex.printStackTrace();\n            return null;\n        });\n    }\n\n    public static DisposableService getInstance(@NotNull Project project) {\n        return ServiceManager.getService(project, DisposableService.class);\n    }\n\n    private void getProjectFileList() {\n        GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n        Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n        PsiManager psiManager = PsiManager.getInstance(project);\n\n        psiFiles = files.stream()\n                .map(psiManager::findFile)\n                .collect(Collectors.toList());\n    }\n\n    private void processProjectFiles() {\n        ApplicationManager.getApplication().invokeLater(() -> {\n            if (project.isDisposed()) {\n                return;\n            }\n\n            ProjectTracker projectTracker = ProjectTracker.getInstance();\n            Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n            Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n\n            String allBeforeProjectStatus = \"\";\n            String allCurrentProjectStatus = \"\";\n\n            for (PsiFile file : psiFiles) {\n                if (beforeProjectStatus.containsKey(file.getName())) {\n                    System.out.println(\"삭제: \" + file.getName());\n                    beforeProjectStatus.remove(file.getName());\n                } else {\n                    allBeforeProjectStatus += getEncrypt(file.getName());\n                }\n\n                if (currentProjectStatus.containsKey(file.getName())) {\n                    currentProjectStatus.remove(file.getName());\n                } else {\n                    allCurrentProjectStatus += getEncrypt(file.getName());\n                }\n            }\n\n            allBeforeProjectStatus = getEncrypt(allBeforeProjectStatus);\n            allCurrentProjectStatus = getEncrypt(allCurrentProjectStatus);\n\n//            projectTracker.setAllBeforeProjectStatus(allBeforeProjectStatus);\n//            projectTracker.setAllCurrentProjectStatus(allCurrentProjectStatus);\n        });\n    }\n\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for (byte b : hashCode) {\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n        }\n\n        return result;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 67,
        "depth": 1
      }
    },
    "2fefdcbb-817f-4dfe-aa22-6deeff8a6817": {
      "id": "2fefdcbb-817f-4dfe-aa22-6deeff8a6817",
      "value": [
        {
          "_id": "004b6c92-784a-4a4c-a2cd-e04aa0c859f5",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileInfo는 파일 정보를 담는 객체이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "30b4879a-4bdd-43d1-a5cb-d5e36403fb82": {
      "id": "30b4879a-4bdd-43d1-a5cb-d5e36403fb82",
      "value": [
        {
          "_id": "5aca7941-a090-422c-8c41-d188270d4d9d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 서비스를 이용하기 위해 카카오, 네이버, 구글 계정으로 로그인하는 메인 로그인 화면을 구현하였다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 65,
        "depth": 1
      }
    },
    "35d92f04-202a-4169-b3e9-63f4ed529e80": {
      "id": "35d92f04-202a-4169-b3e9-63f4ed529e80",
      "value": [
        {
          "_id": "2494a7c9-0180-4430-bfbf-cb00806c988b",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 82,
        "depth": 0
      }
    },
    "379368b8-a0d6-421a-9a77-acc842aed64e": {
      "id": "379368b8-a0d6-421a-9a77-acc842aed64e",
      "value": [
        {
          "_id": "1292cdbe-e04c-464e-a052-23750cb752a4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "440934cf-c46e-4878-9a6b-592e3fa07398": {
      "id": "440934cf-c46e-4878-9a6b-592e3fa07398",
      "value": [
        {
          "_id": "c5666be9-9843-42c1-8ef3-58afa03dc388",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nProjectInfo는 PsiFile, hash 및 소스 코드를 가지고 있는 엔티티입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "446c1eae-af89-4a9a-9805-967e1bc3c325": {
      "id": "446c1eae-af89-4a9a-9805-967e1bc3c325",
      "value": [
        {
          "_id": "0a9eeb30-4b17-4c90-a372-9fd6da8ebe26",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ErrorFileInfo {\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n    @JsonProperty\n    private int line;\n\n    public ErrorFileInfo(String fileName, String sourceCode, int line) {\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n        this.line = line;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 37,
        "depth": 1
      }
    },
    "4c8b32ec-2eed-4a71-a640-80abff547354": {
      "id": "4c8b32ec-2eed-4a71-a640-80abff547354",
      "value": [
        {
          "_id": "56a98091-0198-4e60-8e00-571ca19f40af",
          "type": "bulleted-list",
          "children": [
            {
              "text": "StartUpActivity.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 30,
        "depth": 1
      }
    },
    "4ed87477-2615-4a56-97e6-964bee80774b": {
      "id": "4ed87477-2615-4a56-97e6-964bee80774b",
      "value": [
        {
          "_id": "ae48dbf3-7bf0-4ab3-bd2d-c4fca57f821b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.ModifyRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ContextMenu;\nimport javafx.scene.control.TextField;\nimport javafx.scene.control.TreeCell;\nimport javafx.scene.input.KeyCode;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\n\nimport java.util.Map;\n\npublic class FileAndFolderTreeCell extends TreeCell<FileInfo> {\n\n    private TextField textField;\n    private Runnable refreshCallback;\n    private ContextMenu folderContextMenu;\n    private ContextMenu fileContextMenu;\n    private Stage stage;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n\n    public FileAndFolderTreeCell(ContextMenu folderContextMenu, ContextMenu fileContextMenu, Stage stage,Runnable refreshCallback) {\n        this.fileContextMenu = fileContextMenu;\n        this.folderContextMenu = folderContextMenu;\n        this.stage = stage;\n        this.refreshCallback = refreshCallback;\n    }\n\n    @Override\n    protected void updateItem(FileInfo fileInfo, boolean empty) {\n        super.updateItem(fileInfo, empty);\n        if(empty || fileInfo == null) {\n            setText(null);\n            setGraphic(null);\n            setContextMenu(null);\n        } else{\n            if(isEditing()){\n                if(textField != null){\n                    textField.setText(getString());\n                }\n                setText(null);\n                setGraphic(textField);\n            }else{\n                setText(fileInfo.toString());\n                setGraphic(null);\n\n                if(fileInfo.getType().equals(\"FOLDER\")){\n                    setContextMenu(folderContextMenu);\n                }\n                else if (fileInfo.getType().equals(\"FILE\")){\n                    setContextMenu(fileContextMenu);\n                }\n            }\n        }\n    }\n\n    @Override\n    public void startEdit() {\n        super.startEdit();\n        if(textField == null){\n            createTextField();\n        }\n        setGraphic(textField);\n        setText(null);\n        textField.setText(getItem().getName());\n        textField.selectAll();\n        textField.requestFocus();\n    }\n\n    @Override\n    public void commitEdit(FileInfo fileInfo) {\n        super.commitEdit(fileInfo);\n        modifyFolderOrFile(fileInfo.getName());\n    }\n\n    @Override\n    public void cancelEdit() {\n        super.cancelEdit();\n        setText(getItem().getName());\n        setGraphic(null);\n    }\n\n    private void createTextField() {\n        textField = new TextField(getString());\n        textField.setOnKeyReleased(event -> {\n            if (event.getCode() == KeyCode.ENTER) {\n                commitEdit(new FileInfo(getItem().getId(), textField.getText(), getItem().getType()));\n            } else if (event.getCode() == KeyCode.ESCAPE) {\n                cancelEdit();\n            }\n        });\n    }\n\n    private void modifyFolderOrFile(String name) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        ModifyRequestDto createRequestDto = new ModifyRequestDto(getItem().getId(), name);\n\n        webClient.put()\n                .uri(\"/edit\")\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        if (refreshCallback != null) {\n                            refreshCallback.run();\n                        }\n                    }\n                    else if (result.getStatus() == 401){\n                        refreshAccessToken();\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                    else {\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                }, error ->{\n                    showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                    refreshCallback.run();\n                });\n    }\n    private void showAlert(String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"디렉토리\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private String getString() {\n        return getItem() == null ? \"\" : getItem().toString();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 43,
        "depth": 1
      }
    },
    "4fdc3fea-3cd6-48d3-85de-d07933663e80": {
      "id": "4fdc3fea-3cd6-48d3-85de-d07933663e80",
      "value": [
        {
          "_id": "5186ec24-1f08-4094-9674-83aa34ca2988",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.startup.ProjectActivity;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport kotlin.Unit;\nimport kotlin.coroutines.Continuation;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;\n\npublic class StartUpActivity implements ProjectActivity {\n    private static boolean javafxInitialized = false;\n\n\n    @Nullable\n    @Override\n    public Object execute(@NotNull Project project, @NotNull Continuation<? super Unit> continuation) {\n        TokenManager tokenManager = TokenManager.getInstance();\n        ProjectProvider projectProvider = ProjectProvider.getInstance();\n        projectProvider.getProjects().offer(project);\n//        project.getService(DisposableService.class);\n        initializeJavaFXPlatform();\n        checkAndAddCodeListener(tokenManager, projectProvider);\n\n        return null;\n    }\n\n\n\n    private synchronized void initializeJavaFXPlatform() {\n        // JavaFX 플랫폼 초기화 상태 체크 및 조건부 초기화\n        if(!javafxInitialized){\n            Platform.startup(() -> {\n                javafxInitialized = true;\n                Platform.setImplicitExit(false);\n                new MainLoginFrame();\n            });\n        }\n    }\n\n    private void checkAndAddCodeListener(TokenManager tokenManager, ProjectProvider projectProvider) {\n        if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n//            showLoginAlert();\n        }\n        else{\n            addCodeListener(projectProvider);\n        }\n    }\n\n    private void showLoginAlert() {\n        Platform.runLater(() -> {\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"Ododoc IntelliJ Plugin\",\n                    \"로그인 필요\",\n                    \"자동 정리 기능을 사용하려면 로그인이 필요합니다.\",\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n            }\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 31,
        "depth": 1
      }
    },
    "55b7c777-eb80-4571-8d23-c046196a329a": {
      "id": "55b7c777-eb80-4571-8d23-c046196a329a",
      "value": [
        {
          "_id": "467dbe42-97b4-4611-b1b6-48ba2c789d81",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리 정보를 관리하는 DirectoryInfoManager 클래스의 인스턴스를 싱글톤으로 제공하는 매니저 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 74,
        "depth": 1
      }
    },
    "55b8591f-897c-49a4-9785-8213ec5ec458": {
      "id": "55b8591f-897c-49a4-9785-8213ec5ec458",
      "value": [
        {
          "_id": "2364525d-d580-4407-a445-a59e7dd1de7f",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "58cd8968-6803-4818-8cb1-050af3a7f269": {
      "id": "58cd8968-6803-4818-8cb1-050af3a7f269",
      "value": [
        {
          "_id": "94fe9130-ddd3-49ac-af77-1be802f53f8b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.concurrent.Worker;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.ProgressIndicator;\nimport javafx.scene.image.Image;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.web.WebEngine;\nimport javafx.scene.web.WebView;\nimport javafx.stage.Stage;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\n\nimport java.net.CookieHandler;\nimport java.net.CookieManager;\nimport java.util.Optional;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\nimport static java.net.CookiePolicy.ACCEPT_ALL;\n\npublic class OauthLoginFrame extends Stage {\n\n    private String clientId;\n    private String redirectUri;\n    private String firstLocation;\n    private String lastLocation;\n    private String loginUri;\n    private final int TIME_OUT = 5; // 로그인 응답 대기 시간\n\n    private ScheduledExecutorService scheduler;\n    private MainLoginFrame mainLoginFrame = null;\n    private ProgressIndicator loadingIndicator;\n    private Alert alert;\n\n    public OauthLoginFrame(MainLoginFrame mainLoginFrame, String provider){\n        this.mainLoginFrame = mainLoginFrame;\n\n        // 제목 설정\n        setTitle(\" \" + provider);\n\n        String lowerProvider = provider.toLowerCase();\n        redirectUri = \"https://k10d209.p.ssafy.io/api/oauth2/authorization/\" + lowerProvider;\n\n        // 아이콘 설정\n        String iconImagePath = \"/image/button/\" + lowerProvider  + \"_icon.png\";\n        Image windowIcon = new Image(getClass().getResourceAsStream(iconImagePath));\n        getIcons().add(windowIcon);\n\n        StackPane layout = new StackPane();\n        WebView webView = new WebView();\n        WebEngine webEngine = webView.getEngine();\n        loadingIndicator = new ProgressIndicator();\n        loadingIndicator.setVisible(false);\n\n        layout.getChildren().addAll(webView, loadingIndicator);\n        Scene scene = new Scene(layout, 450, 600);\n        setScene(scene);\n        show();\n\n        // alert 초기화\n        alert = AlertHelper.makeAlert(\n                Alert.AlertType.WARNING,\n                \" \" + provider,\n                \"로그인 실패\",\n                \"다시 로그인 해주세요.\",\n                iconImagePath);\n\n        // oauth 플랫폼에 따라 필드 초기화\n        switch(provider) {\n            case \"KAKAO\" :\n                clientId = \"a23282fc18f2b445d559dfe93fa96e6b\";\n                firstLocation = \"kakaossotokenlogin.do\";\n                lastLocation = redirectUri;\n                loginUri = \"https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"NAVER\" :\n                clientId = \"DRnVNgGzq_x_6Q4apfhJ\";\n                firstLocation = \"oauth_token\";\n                lastLocation = \"nid\";\n                loginUri = \"https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"GOOGLE\" :\n                clientId = \"599323777848-68aq3cu9p98np6eml1m77mfc1ethpkrp.apps.googleusercontent.com\";\n                firstLocation = \"SetSID\";\n                lastLocation = \"Fuserinfo.profile\";\n                loginUri = \"https://accounts.google.com/o/oauth2/v2/auth?client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri\n                        + \"&scope=profile&response_type=code\";\n                break;\n        }\n\n        doOauthLogin(webEngine, provider);\n    }\n\n    private void doOauthLogin(WebEngine webEngine, String provider) {\n\n        CookieManager cookieManager = new CookieManager();\n        cookieManager.setCookiePolicy(ACCEPT_ALL);\n        CookieHandler.setDefault(cookieManager);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n\n        if(scheduler != null && !scheduler.isShutdown()){\n            scheduler.shutdownNow();\n        }\n        scheduler = Executors.newSingleThreadScheduledExecutor();\n        Runnable timeoutTask = () -> {\n            Platform.runLater(() -> {\n                alert.showAndWait();\n                close();\n                cookieManager.getCookieStore().removeAll();\n                webEngine.executeScript(\"localStorage.clear();\");\n            });\n        };\n\n        webEngine.getLoadWorker().stateProperty().addListener((obs, oldState, newState) -> {\n\n            // 화면이 성공적으로 전환이 되었을 때\n            if (newState == Worker.State.SUCCEEDED) {\n\n                // 로그인 응답 시간 스케쥴러 등록, 로딩 스피너 작동\n                if (webEngine.getLocation().contains(firstLocation)){\n                    scheduler.schedule(timeoutTask, TIME_OUT, TimeUnit.SECONDS);\n                    loadingIndicator.setVisible(true);\n                }\n\n                boolean shouldProcess = false;\n                switch (provider){\n                    case \"KAKAO\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri);\n                        break;\n                    case \"NAVER\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && !webEngine.getLocation().contains(lastLocation);\n                        break;\n                    case \"GOOGLE\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && webEngine.getLocation().contains(lastLocation);\n                        break;\n                }\n\n                // 응답을 받을 화면이 나온다면\n                if (shouldProcess) {\n\n                    scheduler.shutdownNow();\n                    loadingIndicator.setVisible(false);\n\n                    // javascript를 실행시켜 content 정보 가져오기\n                    String content = (String) webEngine.executeScript(\"document.body.textContent\");\n                    Long status;\n                    JSONParser jsonParser = new JSONParser();\n\n                    try {\n                        // String to Json\n                        JSONObject json = (JSONObject) jsonParser.parse(content);\n                        status = (Long) json.get(\"status\");\n                        JSONObject data = (JSONObject) json.get(\"data\");\n\n                        if (status != 200) {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        } else {\n                            // access 토큰을 싱글톤 객체에 저장\n                            tokenManager.setAccessToken((String) data.get(\"accessToken\"));\n                            directoryInfoManager.setRootId((long) data.get(\"rootId\"));\n                            directoryInfoManager.setTitle((String) data.get(\"title\"));\n                        }\n\n\n                    } catch (ParseException e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    webEngine.executeScript(\"document.body.style.display = 'none';\");\n\n                    // 쿠키의 refresh 토큰을 싱글톤 객체에 저장\n                    cookieManager.getCookieStore().getCookies().forEach(cookie -> {\n                        if (cookie.getName().equals(\"refreshToken\")) {\n                            tokenManager.setRefreshToken(cookie.getValue());\n                        }\n                    });\n\n                    // 로그인 성공 여부 다시 확인\n                    if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                        Platform.runLater(() -> {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        });\n\n                        return;\n                    }\n\n                    // 지금 현재 등록되어 있는 모든 프로젝트들에게 codeListener 추가하기\n                    addCodeListener(ProjectProvider.getInstance());\n\n                    try {\n                        new DirectoryFrame().start(mainLoginFrame);\n                        connectWebSocket();\n                    } catch (Exception e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    close();\n                }\n            }\n\n        });\n\n        webEngine.load(loginUri);\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n                projectTracker.initHashStatus(tempProject);\n            }\n        }\n    }\n\n    // 처리 서버와 webSocket 연결해주기\n    private void connectWebSocket() {\n        BuildResultSender.setINSTANCE(null);\n        BuildResultSender.getINSTANCE();\n\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n\n        if(!BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    connectWebSocket();\n                }\n                else {\n                    this.close();\n                }\n            });\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "5d4c1277-7cd8-4fe4-8b73-52e76d2375bd": {
      "id": "5d4c1277-7cd8-4fe4-8b73-52e76d2375bd",
      "value": [
        {
          "_id": "d5aa10f7-1215-476b-bf0f-99d69ded155c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nRequestDto 클래스는 외부 소스로부터 받은 데이터를 저장하는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 62,
        "depth": 1
      }
    },
    "5f507256-19a8-4316-8940-81aefdb43925": {
      "id": "5f507256-19a8-4316-8940-81aefdb43925",
      "value": [
        {
          "_id": "75e1b66d-27ac-49e9-b5d7-638bf4815a24",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nTokenManager는 Singleton 패턴을 적용한 인스턴스를 제공하며, 액세스 토큰과 리프레시 토큰을 관리하는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 77,
        "depth": 1
      }
    },
    "6055912b-8147-44ed-8555-adf011ddf5db": {
      "id": "6055912b-8147-44ed-8555-adf011ddf5db",
      "value": [
        {
          "_id": "240120da-10e7-4585-a9af-a90d7d1ef0d6",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.stage.Stage;\nimport org.jvnet.winp.Main;\n\npublic class OpenOdodocPlugin extends AnAction {\n\n    @Override\n    public void actionPerformed(AnActionEvent e) {\n        Platform.runLater(() -> {\n            if(TokenManager.getInstance().getAccessToken() == null || TokenManager.getInstance().getRefreshToken() == null){\n                if(!MainLoginFrame.isFrameVisible()){\n                    new MainLoginFrame();\n                }\n            }\n            else {\n                new DirectoryFrame().start(new Stage());\n            }\n        });\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 34,
        "depth": 1
      }
    },
    "64164a46-9982-481a-a02f-1ac23ff1519c": {
      "id": "64164a46-9982-481a-a02f-1ac23ff1519c",
      "value": [
        {
          "_id": "c7e7272d-ed21-4d01-bb9f-d910aafb8d5c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "65fa9736-4092-4b19-b3ed-3397c81e3ffa": {
      "id": "65fa9736-4092-4b19-b3ed-3397c81e3ffa",
      "value": [
        {
          "_id": "62c83938-6a6b-40e9-a3e4-929e5260ead4",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectTracker.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 45,
        "depth": 1
      }
    },
    "6c27de11-a669-4a5e-8273-5b9e185be6ad": {
      "id": "6c27de11-a669-4a5e-8273-5b9e185be6ad",
      "value": [
        {
          "_id": "f8cdc1ce-0c67-44db-b0d1-7dbbf5f180f9",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n수정 요청 DTO는 id와 이름을 포함하고 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "6dbdba6f-8e32-4839-bdfd-007dcc9da2ee": {
      "id": "6dbdba6f-8e32-4839-bdfd-007dcc9da2ee",
      "value": [
        {
          "_id": "4e661927-8180-42c3-bae3-7fcbfb1d0aba",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "708ad83c-2a9d-4c1b-b084-57c0001b8585": {
      "id": "708ad83c-2a9d-4c1b-b084-57c0001b8585",
      "value": [
        {
          "_id": "6879c4b2-e7ca-4e5c-9836-8dcfc77f5be2",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "741f0554-1cbf-4aa4-93e5-6296ae92a207": {
      "id": "741f0554-1cbf-4aa4-93e5-6296ae92a207",
      "value": [
        {
          "_id": "ed73662a-fbd6-43c8-a3fd-62786c672192",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 플러그인을 실행하면 로그인 여부를 확인하여 디렉토리 화면을 보여준다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 35,
        "depth": 1
      }
    },
    "792138fb-5dea-4100-9432-0a58eb229568": {
      "id": "792138fb-5dea-4100-9432-0a58eb229568",
      "value": [
        {
          "_id": "a362bf69-7e92-429e-939b-f8b90073ccd9",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CreateRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 48,
        "depth": 1
      }
    },
    "82cc161d-b4bd-47b9-acff-a852ebbb573c": {
      "id": "82cc161d-b4bd-47b9-acff-a852ebbb573c",
      "value": [
        {
          "_id": "96482dd6-804e-4925-a69f-e2d310fda430",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 이름, 소스 코드, 라인 정보를 포함하는 오류 파일 정보 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 38,
        "depth": 1
      }
    },
    "842003da-7bc5-4102-a746-dd2904797ba6": {
      "id": "842003da-7bc5-4102-a746-dd2904797ba6",
      "value": [
        {
          "_id": "08b0be34-50c9-453c-b90a-2674c32e2879",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 81,
        "depth": 0
      }
    },
    "87e087df-cfc6-4ab1-b6a3-87413232304e": {
      "id": "87e087df-cfc6-4ab1-b6a3-87413232304e",
      "value": [
        {
          "_id": "4b2100db-448e-42dc-ba3b-9fbe906f63a8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "AlertHelper.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 78,
        "depth": 1
      }
    },
    "88b55c6c-99f3-4e94-b626-49ac80a3f1f5": {
      "id": "88b55c6c-99f3-4e94-b626-49ac80a3f1f5",
      "value": [
        {
          "_id": "804c025d-3399-4508-aaa0-38b09ac47e53",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트를 제공하는 인스턴스를 싱글톤으로 관리하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "8a1aa720-33e0-4333-9a94-39edccb9206e": {
      "id": "8a1aa720-33e0-4333-9a94-39edccb9206e",
      "value": [
        {
          "_id": "e1dc4f3a-c516-4890-89df-821160eafaaf",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19 23:42:07,194 [    585]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.intellij.ae.database.core.baseEvents.fus.AddStatisticsEventLogListenerTemporary, plugin=com.jetbrains.ae.database)\r\n2024-05-19 23:42:07,194 [    585]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.jetbrains.rdserver.statistics.BackendStatisticsManager, plugin=com.jetbrains.codeWithMe)\r\n2024-05-19 23:42:07,401 [    792]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.search.FilenameIndex initializer requests com.intellij.ide.plugins.PluginUtil instance\r\n2024-05-19 23:42:08,168 [   1559]   WARN - #c.i.s.ComponentManagerImpl - org.zmlx.hg4idea.provider.HgChangeProvider initializer requests com.intellij.openapi.vcs.FileStatusFactory instance\r\n2024-05-19 23:42:09,939 [   3330]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.codeInsight.daemon.LineMarkerProviders initializer requests com.intellij.codeInsight.daemon.LineMarkerProviders instance\r\n2024-05-19 23:42:10,943 [   4334]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.LanguageSubstitutors initializer requests com.intellij.psi.LanguageSubstitutors instance\r\n2024-05-19 23:42:12,647 [   6038]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable initializer requests com.intellij.util.LocaleSensitiveApplicationCacheService instance\r\n2024-05-19 23:42:13,601 [   6992]   WARN - #c.i.u.j.JBCefApp - JCEF is manually disabled in headless env via 'ide.browser.jcef.headless.enabled=false'\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 83,
        "depth": 0
      }
    },
    "8de875c8-54d6-46b6-9ffa-c33481bd6631": {
      "id": "8de875c8-54d6-46b6-9ffa-c33481bd6631",
      "value": [
        {
          "_id": "a8b44151-e054-458c-84ac-793bfaf11e61",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender.alert;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.stage.Stage;\n\npublic class WebSocketReConnectAlert {\n\n    public static Alert makeAlert() {\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setTitle(\" Ododoc\");\n        alert.setHeaderText(\"서버 연결 실패\");\n        alert.setContentText(\"Ododoc 서비스를 이용하려면 서버와의 연결이 필요합니다.\\n다시 시도하시겠습니까?\");\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(\"/image/button/icon.png\")));\n        ImageView warningIcon = new ImageView(new Image(WebSocketReConnectAlert.class.getResourceAsStream(\"/image/button/warning.png\")));\n        alert.setGraphic(warningIcon);\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "9085efe4-8fc3-442b-b88a-cb2a9198beee": {
      "id": "9085efe4-8fc3-442b-b88a-cb2a9198beee",
      "value": [
        {
          "_id": "8eda181a-959c-4568-815d-03e58cc9d70b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.entity;\n\npublic class FileInfo {\n\n    private Long id;\n    private String name;\n    private String type;\n\n    public FileInfo(Long id, String name, String type) {\n        this.id = id;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    @Override\n    public String toString() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 52,
        "depth": 1
      }
    },
    "9627fcd2-83dd-46fe-be2a-9fc34bffef87": {
      "id": "9627fcd2-83dd-46fe-be2a-9fc34bffef87",
      "value": [
        {
          "_id": "838338e4-970f-4e1b-8a6d-44af75464980",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 이름과 소스 코드를 저장하는 ModifiedFileInfo 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "976f8cab-5bf7-4240-b846-05ea007e41f9": {
      "id": "976f8cab-5bf7-4240-b846-05ea007e41f9",
      "value": [
        {
          "_id": "539b3eb7-ba43-4b47-9d8b-a27417c2f305",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 85,
        "depth": 0
      }
    },
    "994757a4-3e2d-4905-9c4c-fde7939e4ad8": {
      "id": "994757a4-3e2d-4905-9c4c-fde7939e4ad8",
      "value": [
        {
          "_id": "e8e76399-6fbd-41cd-b606-5b18c3b7e797",
          "type": "bulleted-list",
          "children": [
            {
              "text": "TokenManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 75,
        "depth": 1
      }
    },
    "99b52d24-9975-40a4-9b3a-1acb7eab3362": {
      "id": "99b52d24-9975-40a4-9b3a-1acb7eab3362",
      "value": [
        {
          "_id": "8708fad9-7fff-4412-9805-bb05404abd51",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileAndFolderTreeCell.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 42,
        "depth": 1
      }
    },
    "9d2bb273-ebe1-4bc9-9e43-3af4b3287e45": {
      "id": "9d2bb273-ebe1-4bc9-9e43-3af4b3287e45",
      "value": [
        {
          "_id": "d784f218-ef7e-4df5-ad9f-56194ee16ac6",
          "type": "bulleted-list",
          "children": [
            {
              "text": "MainLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 63,
        "depth": 1
      }
    },
    "9e7b56d2-b3de-4804-a3a8-5d8473a4a330": {
      "id": "9e7b56d2-b3de-4804-a3a8-5d8473a4a330",
      "value": [
        {
          "_id": "b8fd0aa5-27ca-456f-9bce-10b6d42813d3",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nBuildResultSender 클래스는 싱글톤 패턴을 사용하여 웹소켓을 통해 메시지를 전송하고 서버와의 연결 상태를 관리하는 기능을 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 59,
        "depth": 1
      }
    },
    "9e7eecfb-8cf1-4282-8b71-37f7aee6cb7e": {
      "id": "9e7eecfb-8cf1-4282-8b71-37f7aee6cb7e",
      "value": [
        {
          "_id": "07655d2a-2169-49ba-b38f-95ac0f73128d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "WebSocketReConnectAlert.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "9ee76e31-ef3e-4a50-9fb5-0ebc293ac5d6": {
      "id": "9ee76e31-ef3e-4a50-9fb5-0ebc293ac5d6",
      "value": [
        {
          "_id": "d1cc7321-fbbd-457f-9800-2a8e6f42e7c0",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.application.ReadAction;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class ProjectTracker {\n\n    private List<PsiFile> psiFiles;\n    private Map<String, ProjectInfo> beforeProjectStatus = new HashMap<>();\n    private Map<String, ProjectInfo> currentProjectStatus = new HashMap<>();\n    private String allBeforeProjectStatus;\n    private String allCurrentProjectStatus;\n    private ProjectTracker(){}\n\n    private static class ProjectTrackerHolder {\n        private static final ProjectTracker INSTANCE = new ProjectTracker();\n    }\n\n    public static ProjectTracker getInstance() {\n        return ProjectTrackerHolder.INSTANCE;\n    }\n\n    // 프로젝트 생성시 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void initHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() ->{\n            String fileHash = \"\";\n            getProjectFileList(project);\n            beforeProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                beforeProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allBeforeProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    // 지금 현재 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void currentHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() -> {\n            String fileHash = \"\";\n            getProjectFileList(project);\n            currentProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                currentProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allCurrentProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    private void getProjectFileList(Project project){\n\n        ApplicationManager.getApplication().runReadAction(() -> {\n            GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n            Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n            PsiManager psiManager = PsiManager.getInstance(project);\n\n            psiFiles = files.stream()\n                    .map(file -> psiManager.findFile(file))\n                    .toList();\n        });\n    }\n\n    // 해쉬로 암호화\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try{\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for(byte b : hashCode){\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        }catch (NoSuchAlgorithmException e){\n            throw  new RuntimeException(e);\n        }\n\n        return result;\n    }\n\n    public Map<String, ProjectInfo> getBeforeProjectStatus() {\n        return beforeProjectStatus;\n    }\n\n    public Map<String, ProjectInfo> getCurrentProjectStatus() {\n        return currentProjectStatus;\n    }\n\n    public String getAllBeforeProjectStatus() {\n        return allBeforeProjectStatus;\n    }\n\n    public String getAllCurrentProjectStatus() {\n        return allCurrentProjectStatus;\n    }\n\n    public void setBeforeProjectStatus(Map<String, ProjectInfo> beforeProjectStatus) {\n        this.beforeProjectStatus = beforeProjectStatus;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 46,
        "depth": 1
      }
    },
    "a17bd42a-8828-4397-810a-0ce6b27f582b": {
      "id": "a17bd42a-8828-4397-810a-0ce6b27f582b",
      "value": [
        {
          "_id": "56a4bf4d-62ca-43ac-96ed-93f4bbbaf6eb",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOauth 로그인을 처리하고, 성공 시 AccessToken과 RefreshToken을 저장하고 프로젝트들에 CodeListener를 추가하는 프레임이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 29,
        "depth": 1
      }
    },
    "a20725f8-a95d-4a37-aad9-40b80f564ebe": {
      "id": "a20725f8-a95d-4a37-aad9-40b80f564ebe",
      "value": [
        {
          "_id": "fb645a13-7ce4-427e-b7e9-b7e6691b0e25",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.manager;\n\npublic class TokenManager {\n\n    private String accessToken;\n    private String refreshToken;\n\n    private TokenManager() {}\n\n    private static class TokenManagerHolder {\n        private static final TokenManager INSTANCE = new TokenManager();\n    }\n\n    public static TokenManager getInstance() {\n        return TokenManagerHolder.INSTANCE;\n    }\n\n    public synchronized String getAccessToken() {\n        return accessToken;\n    }\n\n    public synchronized String getRefreshToken() {\n        return refreshToken;\n    }\n\n    public synchronized void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public synchronized void setRefreshToken(String refreshToken) {\n        this.refreshToken = refreshToken;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 76,
        "depth": 1
      }
    },
    "a2862049-2742-437d-aed0-b3af504a86fa": {
      "id": "a2862049-2742-437d-aed0-b3af504a86fa",
      "value": [
        {
          "_id": "8193a2ee-2bac-494c-b5d4-25e4fc327751",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ConnectedFileManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 39,
        "depth": 1
      }
    },
    "a3c26b4c-af24-4571-860e-8d55507a9164": {
      "id": "a3c26b4c-af24-4571-860e-8d55507a9164",
      "value": [
        {
          "_id": "52b46005-10cf-4bdf-8df2-619915ee661b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.alert;\n\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.stage.Stage;\n\npublic class AlertHelper {\n\n    public static Alert makeAlert(Alert.AlertType alertType, String title, String header, String content, String imagePath) {\n        Alert alert = new Alert(alertType);\n        alert.setTitle(title);\n        alert.setHeaderText(header);\n        alert.setContentText(content);\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(imagePath)));\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 79,
        "depth": 1
      }
    },
    "a5089f57-8c3c-4967-9eee-9f389b27f01a": {
      "id": "a5089f57-8c3c-4967-9eee-9f389b27f01a",
      "value": [
        {
          "_id": "bd2ad0aa-6d0a-4213-9f96-e2086761b25c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifiedFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "a70ed058-f558-451d-927e-8596be5a9c1b": {
      "id": "a70ed058-f558-451d-927e-8596be5a9c1b",
      "value": [
        {
          "_id": "0c23281e-28af-4466-93fa-d16cd79ea696",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n부모 디렉토리 ID, 이름, 타입을 포함한 생성 요청 DTO입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 50,
        "depth": 1
      }
    },
    "ab872427-8ecf-4bd3-bfd0-574efe8cbc4c": {
      "id": "ab872427-8ecf-4bd3-bfd0-574efe8cbc4c",
      "value": [
        {
          "_id": "15df643f-30dc-4a13-bad4-c00c6ff994ac",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "ada432c9-8e0e-4d58-bf5b-623769e5b282": {
      "id": "ada432c9-8e0e-4d58-bf5b-623769e5b282",
      "value": [
        {
          "_id": "f8f9c0d6-6e91-49a9-9bf6-a0051e674f34",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리 정보를 나타내는 클래스이며, id, name, type 필드를 가지고 있고, 자식 디렉토리 리스트도 포함하고 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 56,
        "depth": 1
      }
    },
    "ae6d9af7-3f8a-4b18-92f8-7876b2d44b5a": {
      "id": "ae6d9af7-3f8a-4b18-92f8-7876b2d44b5a",
      "value": [
        {
          "_id": "af952107-0682-4eaf-aa99-b543dbf57bb9",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class CreateRequestDto {\n\n    private Long parentId;\n    private String name;\n    private String type;\n\n    public CreateRequestDto(Long parentId, String name, String type) {\n        this.parentId = parentId;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getParentId() {\n        return parentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getType() {\n        return type;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 49,
        "depth": 1
      }
    },
    "afce3ec2-c264-4cbd-a31b-5760dfe8129d": {
      "id": "afce3ec2-c264-4cbd-a31b-5760dfe8129d",
      "value": [
        {
          "_id": "ca2822d3-7f54-438c-b5fc-a395e45cfb07",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class DirectoryInfoManager {\n\n    private long rootId;\n    private String title;\n\n    private DirectoryInfoManager() {}\n\n    private static class DirectoryInfoManagerHolder {\n        private static final DirectoryInfoManager INSTANCE = new DirectoryInfoManager();\n    }\n\n    public static DirectoryInfoManager getInstance() {\n        return DirectoryInfoManagerHolder.INSTANCE;\n    }\n\n    public synchronized long getRootId() {\n        return rootId;\n    }\n    public synchronized String getTitle() {\n        return title;\n    }\n\n    public synchronized void setRootId(long rootId) {\n        this.rootId = rootId;\n    }\n\n    public synchronized void setTitle(String title) {\n        this.title = title;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 73,
        "depth": 1
      }
    },
    "b40239ad-d3f9-427d-8984-3ca3b250f276": {
      "id": "b40239ad-d3f9-427d-8984-3ca3b250f276",
      "value": [
        {
          "_id": "9cd17083-e346-48c4-87ce-95d3ae019834",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 파일의 상태를 추적하여 해시 값을 저장하는 프로젝트 트래커 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 47,
        "depth": 1
      }
    },
    "c52382e4-db7c-4b08-bb66-fb5f89ea8f9c": {
      "id": "c52382e4-db7c-4b08-bb66-fb5f89ea8f9c",
      "value": [
        {
          "_id": "6fb16bdc-4243-4066-b2cb-58084e261844",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 51,
        "depth": 1
      }
    },
    "c92f37b9-4e31-4058-8d5a-772ebef6a0cc": {
      "id": "c92f37b9-4e31-4058-8d5a-772ebef6a0cc",
      "value": [
        {
          "_id": "4a779fa1-aeb8-42ee-9529-ecd1acff90b4",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.intellij.execution.ExecutionListener;\nimport com.intellij.execution.process.ProcessEvent;\nimport com.intellij.execution.process.ProcessHandler;\nimport com.intellij.execution.process.ProcessListener;\nimport com.intellij.execution.process.ProcessOutputTypes;\nimport com.intellij.execution.runners.ExecutionEnvironment;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.diagnostic.Logger;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.util.Key;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.tracker.dto.BuildResultInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ErrorFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ModifiedFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.RequestDto;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class CodeListener implements ExecutionListener {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n    private List<ErrorFileInfo> errorFiles = new ArrayList<>();\n    private Map<String, ProjectInfo> currentProjectInfo = new HashMap<>();\n    private boolean capturingError;\n    private boolean errorFlag;\n\n    private static final Logger LOG = Logger.getInstance(CodeListener.class);\n    private static final Pattern ANSI_ESCAPE_PATTERN = Pattern.compile(\"\\u001B\\\\[[;\\\\d]*m\");\n\n    public CodeListener(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void processStarted(@NotNull String executorId, @NotNull ExecutionEnvironment env, @NotNull ProcessHandler handler) {\n        CompletableFuture.runAsync(() -> getCurrentProject())\n                .thenRun(this::initializeProjectTracker)\n                .thenRun(() -> {\n                    // 파일 연동이 되어있다면\n                    if (ConnectedFileManager.getInstance().getDirectoryId() != 0L) {\n                        startSignal();\n                    } else {\n                        Platform.runLater(() -> {\n                            Alert alert = AlertHelper.makeAlert(\n                                    Alert.AlertType.WARNING,\n                                    \" Ododoc\",\n                                    \"파일 연동 오류\",\n                                    \"파일이 연동되지 않았습니다.\\n해당 결과는 새로 생성된 파일에 기록됩니다.\",\n                                    \"/image/button/icon.png\"\n                            );\n                            alert.showAndWait();\n                        });\n                    }\n\n                    handler.addProcessListener(new OdodocProcessListener());\n                });\n    }\n\n    private void getCurrentProject() {\n        psiFiles = new ArrayList<>();\n        currentProjectInfo.clear();\n        ApplicationManager.getApplication().executeOnPooledThread(() -> {\n            ApplicationManager.getApplication().runReadAction(() -> {\n                GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n                Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n                PsiManager psiManager = PsiManager.getInstance(project);\n                psiFiles = files.stream()\n                        .map(psiManager::findFile)\n                        .collect(Collectors.toList());\n\n                psiFiles.forEach(file ->\n                        currentProjectInfo.put(file.getName(), new ProjectInfo(file, \"\", file.getText())));\n            });\n        });\n    }\n\n    private void initializeProjectTracker() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.currentHashStatus(project);\n    }\n\n    private void startSignal() {\n        RequestDto requestDto = new RequestDto();\n        requestDto.setSourceApplication(\"INTELLIJ\");\n        requestDto.setDataType(\"SIGNAL\");\n        requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n        requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n        requestDto.setTimestamp(LocalDateTime.now());\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            String output = objectMapper.writeValueAsString(requestDto);\n            BuildResultSender.sendMessage(output);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private List<ModifiedFileInfo> getModifiedFiles() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n\n        Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n        Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n        String allBeforeProjectStatus = projectTracker.getAllBeforeProjectStatus();\n        String allCurrentProjectStatus = projectTracker.getAllCurrentProjectStatus();\n\n        String before, current= \"\";\n        boolean isChange = false; // 변경된 파일이 있는지 확인\n        List<ModifiedFileInfo> modifiedFileInfoList = new ArrayList<>();\n\n        // 파일을 추가하거나 삭제하지 않은 경우\n        if(allBeforeProjectStatus.equals(allCurrentProjectStatus)){\n            for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n                before = entry.getValue().getHash();\n                current = currentProjectStatus.get(entry.getKey()).getHash();\n                // 바뀐 파일이라면 해당 파일\n                if(!before.equals(current)){\n                    isChange = true;\n                    PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                    addModifiedFile(modifiedFileInfoList, modifiedFile);\n                }\n            }\n        }\n\n        // 파일을 추가하거나 삭제한 경우\n        else{\n            int beforeSize = beforeProjectStatus.size();\n            int currentSize = currentProjectStatus.size();\n\n            // 추가한 경우\n            if(beforeSize <= currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : currentProjectStatus.entrySet()){\n\n                    // 추가된 파일이 아닐 경우\n                    if(beforeProjectStatus.containsKey(entry.getKey())){\n                        before = beforeProjectStatus.get(entry.getKey()).getHash();\n                        current = entry.getValue().getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = entry.getValue().getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 추가된 파일일 경우\n                    else{\n                        isChange = true;\n                        PsiFile modifiedFile = entry.getValue().getPsiFile();\n                        addModifiedFile(modifiedFileInfoList, modifiedFile);\n                    }\n\n                }\n            }\n            // 삭제한 경우\n            else if(beforeSize > currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n\n                    // 삭제된 파일이 아닐 경우\n                    if(currentProjectStatus.containsKey(entry.getKey())){\n                        before = entry.getValue().getHash();\n                        current = currentProjectStatus.get(entry.getKey()).getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 삭제된 파일일 경우\n                    else{\n                        isChange = true;\n                    }\n\n                }\n            }\n        }\n\n        // 변경된 파일이 있을 경우 현재 상태를 전 상태로 돌리기 (깊은 복사 )\n        if (isChange){\n            deepCopy(currentProjectStatus);\n        }\n\n        return modifiedFileInfoList;\n\n    }\n\n    private void addModifiedFile(List<ModifiedFileInfo> modifiedFileInfoList, PsiFile modifiedFile) {\n        String fileName = modifiedFile.getName();\n        String sourceCode = modifiedFile.getText();\n        modifiedFileInfoList.add(new ModifiedFileInfo(fileName, sourceCode));\n    }\n\n    private void deepCopy(Map<String, ProjectInfo> currentProjectStatus) {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.setBeforeProjectStatus(\n                currentProjectStatus.entrySet().stream()\n                        .collect(Collectors.toMap(Map.Entry::getKey, e -> {\n                            try {\n                                return (ProjectInfo) e.getValue().clone();\n                            } catch (CloneNotSupportedException ex) {\n                                throw new RuntimeException(ex);\n                            }\n                        }))\n        );\n    }\n\n    private class OdodocProcessListener implements ProcessListener {\n        StringBuilder allOutputLog = new StringBuilder();\n        StringBuilder errorLog = new StringBuilder();\n        StringBuilder stdOutLog = new StringBuilder();\n\n        @Override\n        public void processTerminated(@NotNull ProcessEvent event) {\n            RequestDto requestDto = new RequestDto();\n            BuildResultInfo buildResultInfo = new BuildResultInfo();\n\n            requestDto.setSourceApplication(\"INTELLIJ\");\n            requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n            requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n            requestDto.setTimestamp(LocalDateTime.now());\n\n            if (errorFlag) {\n                buildResultInfo.setDetails(errorLog.toString());\n                if (errorFiles.size() > 1) {\n                    buildResultInfo.setErrorFile(errorFiles.get(0));\n                }\n                buildResultInfo.setModifiedFiles(getModifiedFiles());\n\n                requestDto.setDataType(\"ERROR\");\n                requestDto.setContent(buildResultInfo);\n            } else {\n                buildResultInfo.setDetails(stdOutLog.toString());\n\n                List<ModifiedFileInfo> temp = getModifiedFiles();\n                buildResultInfo.setModifiedFiles(temp);\n\n                requestDto.setDataType(\"OUTPUT\");\n                requestDto.setContent(buildResultInfo);\n            }\n\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                String output = objectMapper.writeValueAsString(requestDto);\n                System.out.println(output);\n                BuildResultSender.sendMessage(output);\n            } catch (JsonProcessingException e) {\n                throw new RuntimeException(e);\n            }\n\n            allOutputLog.setLength(0);\n            errorLog.setLength(0);\n            stdOutLog.setLength(0);\n            errorFiles = new ArrayList<>();\n            errorFlag = false;\n            capturingError = false;\n        }\n\n        @Override\n        public void onTextAvailable(@NotNull ProcessEvent event, @NotNull Key outputType) {\n            String text = removeAnsiEscapeCodes(event.getText());\n\n            LOG.info(\"Output type: \" + outputType + \" Text: \" + text);\n            if (outputType.equals(ProcessOutputTypes.STDERR)) {\n                errorFlag = true;\n                errorLog.append(text);\n            }\n\n            else if (outputType.equals(ProcessOutputTypes.STDOUT)) {\n                if (text.contains(\"ERROR\")) {\n                    errorFlag = true;\n                    errorLog.append(text);\n                    capturingError = true;\n                }\n                else if (capturingError) {\n                    if (text.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}\\\\+\\\\d{2}:\\\\d{2} .*\")) {\n                        capturingError = false;\n                    }\n                    else {\n                        errorLog.append(text);\n                        Pattern pattern = Pattern.compile(\"\\\\(([^)]+):(\\\\d+)\\\\)\");\n                        Matcher matcher = pattern.matcher(text);\n                        if (matcher.find()) {\n                            if (currentProjectInfo.containsKey(matcher.group(1))) {\n                                ProjectInfo projectInfo = currentProjectInfo.get(matcher.group(1));\n                                String fileName = projectInfo.getPsiFile().getName();\n                                String sourceCode = projectInfo.getSourceCode();\n                                int line = Integer.parseInt(matcher.group(2));\n                                errorFiles.add(new ErrorFileInfo(fileName, sourceCode, line));\n                            }\n                        }\n                    }\n                }\n                else {\n                    stdOutLog.append(text);\n                }\n            }\n            allOutputLog.append(text);\n        }\n    }\n\n    public static String removeAnsiEscapeCodes(String input) {\n        return ANSI_ESCAPE_PATTERN.matcher(input).replaceAll(\"\");\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "c93f2a9f-ab7a-4d5b-b606-f88ea6d465cb": {
      "id": "c93f2a9f-ab7a-4d5b-b606-f88ea6d465cb",
      "value": [
        {
          "_id": "e2907c9e-fda0-4faa-988a-7872ba97e83d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n코드 실행 중 발생한 오류 내용과 수정된 파일 정보를 추적하여 서버에 전송하는 기능을 구현한 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "c9fd09d3-b296-4f87-a975-ca72418ec658": {
      "id": "c9fd09d3-b296-4f87-a975-ca72418ec658",
      "value": [
        {
          "_id": "0f3b5699-8b70-49cd-82da-f24b0102f431",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 프로젝트는 IntelliJ 플러그인을 실행할 때 로그인이 필요한지 확인하고, 필요한 경우 자동으로 코드 리스너를 추가해줍니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "ca997794-fac5-4d40-85a8-acd9d5054c07": {
      "id": "ca997794-fac5-4d40-85a8-acd9d5054c07",
      "value": [
        {
          "_id": "24c69bc6-2b13-4487-bccb-02d885c0e6d1",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryInfoManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 72,
        "depth": 1
      }
    },
    "cdc4003a-f4d7-4521-929d-134df4d67aac": {
      "id": "cdc4003a-f4d7-4521-929d-134df4d67aac",
      "value": [
        {
          "_id": "2892555a-2620-4148-9b1c-a42b833dae53",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OauthLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "d0d704df-5da9-4bf1-b95b-83bae95596e8": {
      "id": "d0d704df-5da9-4bf1-b95b-83bae95596e8",
      "value": [
        {
          "_id": "5561a308-8c47-476b-bee6-95b021df1285",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class ConnectedFileManager {\n\n    private Long directoryId = 0L;\n\n    private ConnectedFileManager() {}\n\n    private static class ConnectedFileManagerHolder {\n        private static final ConnectedFileManager INSTANCE = new ConnectedFileManager();\n    }\n\n    public static ConnectedFileManager getInstance() {\n        return ConnectedFileManager.ConnectedFileManagerHolder.INSTANCE;\n    }\n\n    public Long getDirectoryId() {\n        return directoryId;\n    }\n\n    public void setDirectoryId(Long directoryId) {\n        this.directoryId = directoryId;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 40,
        "depth": 1
      }
    },
    "d54fabaf-2ba4-4284-a394-c705aad1b59f": {
      "id": "d54fabaf-2ba4-4284-a394-c705aad1b59f",
      "value": [
        {
          "_id": "86587446-c200-4f99-8c7e-26247635e18d",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.handshake.ServerHandshake;\n\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class BuildResultSender {\n\n    // volatile 키워드를 사용하여 메모리 가시성 문제 해결, 멀티스레드 환경에서도 변수가 안전하게 사용할 수 있도록 함.\n    private static volatile WebSocketClient INSTANCE;\n\n    // 객체의 락을 위해 사용.\n    private static final Object lock = new Object();\n    private static final String WEBSOCKET_URI = \"wss://k10d209.p.ssafy.io/process/ws\";\n    private static boolean enableWhenPushBtn = false;\n    private static int count = 0;\n    private BuildResultSender() {}\n\n    public static WebSocketClient getINSTANCE() {\n\n        if(INSTANCE == null) {\n            // 두 번째로 null 체크를 한 후 다중 스레드 환경에서 동시에 여러 인스턴스가 생성되는 것을 방지\n            synchronized (lock) {\n                if(INSTANCE == null){\n                    try {\n\n                        INSTANCE = new WebSocketClient(new URI(WEBSOCKET_URI)) {\n                            @Override\n                            public void onOpen(ServerHandshake serverHandshake) {\n                                if(count > 0){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.INFORMATION,\n                                                \" Ododoc\",\n                                                \"서버 연결 성공\",\n                                                \"서버와의 연결에 성공했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                }\n                                count ++;\n                            }\n\n                            @Override\n                            public void onMessage(String s) {}\n\n                            @Override\n                            public void onClose(int i, String s, boolean b) {\n                                if(count > 0){\n                                    BuildResultSender.setINSTANCE(null);\n                                    Platform.runLater(() -> {\n                                        Alert alert = WebSocketReConnectAlert.makeAlert();\n                                        Optional<ButtonType> result = alert.showAndWait();\n                                        if(result.isPresent() && result.get() == ButtonType.OK) {\n                                            getINSTANCE();\n                                        }\n                                    });\n                                }\n                            }\n\n                            @Override\n                            public void onError(Exception e) {\n                                System.out.println(e.getMessage());\n                                if(enableWhenPushBtn){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.ERROR,\n                                                \" Ododoc\",\n                                                \"서버 연결 실패\",\n                                                \"서버와의 연결에 실패했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                    enableWhenPushBtn = false;\n                                }\n                            }\n                        };\n\n                        INSTANCE.connect();\n                    }catch (URISyntaxException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n\n        return INSTANCE;\n    }\n\n    public static void setINSTANCE(WebSocketClient INSTANCE) {\n        BuildResultSender.INSTANCE = INSTANCE;\n    }\n\n    public static void setEnableWhenPushBtn(boolean enableWhenPushBtn) {\n        BuildResultSender.enableWhenPushBtn = enableWhenPushBtn;\n    }\n\n    public static void sendMessage(String message) {\n        if(INSTANCE != null && INSTANCE.isOpen()){\n            INSTANCE.send(message);\n        }\n    }\n\n    public static boolean isConnected() {\n        return INSTANCE != null && INSTANCE.isOpen() ? true : false;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 58,
        "depth": 1
      }
    },
    "d9971ff6-6eab-4f07-85ef-4c59dadd7b83": {
      "id": "d9971ff6-6eab-4f07-85ef-4c59dadd7b83",
      "value": [
        {
          "_id": "6a1eae69-c86d-4326-9093-d75026fa9ee7",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CodeListener.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "dc20cc43-c4b3-4f8c-ad0f-bb5e1c63b30a": {
      "id": "dc20cc43-c4b3-4f8c-ad0f-bb5e1c63b30a",
      "value": [
        {
          "_id": "0020675b-42a1-4804-960a-88aa912258f0",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\n\npublic class BuildResultInfo {\n\n    private boolean isSuccess;\n    private long connectedFileId;\n    private String contents;\n    private String timeStamp;\n    private List<ModifiedFileInfo> modifiedFiles;\n\n    public String getTimeStamp() {\n        return timeStamp;\n    }\n\n    public void setTimeStamp(String timeStamp) {\n        this.timeStamp = timeStamp;\n    }\n\n    public String getContents() {\n        return contents;\n    }\n\n    public void setContents(String contents) {\n        this.contents = contents;\n    }\n\n    public boolean isSuccess() {\n        return isSuccess;\n    }\n\n    public void setSuccess(boolean success) {\n        isSuccess = success;\n    }\n\n    public long getConnectedFileId() {\n        return connectedFileId;\n    }\n\n    public void setConnectedFileId(long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n    public List<ModifiedFileInfo> getModifiedFiles() {\n        return modifiedFiles;\n    }\n\n    public void setModifiedFiles(List<ModifiedFileInfo> modifiedFiles) {\n        this.modifiedFiles = modifiedFiles;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "dea07265-406f-449d-84b6-e6088bfc8969": {
      "id": "dea07265-406f-449d-84b6-e6088bfc8969",
      "value": [
        {
          "_id": "905ff93e-9398-4fa6-ae87-153d3d60055d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectProvider.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 24,
        "depth": 1
      }
    },
    "e1a1486a-c503-4892-8177-2b08b6937e3a": {
      "id": "e1a1486a-c503-4892-8177-2b08b6937e3a",
      "value": [
        {
          "_id": "b38e3e8f-0569-49d0-8e3d-792738ce776a",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ModifiedFileInfo {\n\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n\n    public ModifiedFileInfo(String fileName, String sourceCode){\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "e20c8932-781f-4724-9806-e059f4caa33d": {
      "id": "e20c8932-781f-4724-9806-e059f4caa33d",
      "value": [
        {
          "_id": "14059553-1d11-41cd-8cde-1981659f25bd",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 18,
        "depth": 1
      }
    },
    "e2b685ca-e145-40c2-98f8-a211a2e9fc21": {
      "id": "e2b685ca-e145-40c2-98f8-a211a2e9fc21",
      "value": [
        {
          "_id": "0950d145-7926-4e42-9d55-cd9f7a1faa44",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nConnectedFileManager 클래스는 싱글톤 패턴을 적용한 클래스로, 연결된 디렉토리의 ID를 관리하는 역할을 한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 41,
        "depth": 1
      }
    },
    "e35ea492-745c-4cc3-93bd-350576067019": {
      "id": "e35ea492-745c-4cc3-93bd-350576067019",
      "value": [
        {
          "_id": "4368b785-c455-4d9b-a9ad-6d1d69e10a2b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n빌드 결과 정보와 수정된 파일 목록을 포함한 정보를 담고 있는 객체입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "e536a816-a669-438a-bd48-f8d037210ce9": {
      "id": "e536a816-a669-438a-bd48-f8d037210ce9",
      "value": [
        {
          "_id": "c764b6ef-d1d0-4c4b-89e8-5da561eb288c",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class ModifyRequestDto {\n\n    private Long id;\n    private String name;\n\n    public ModifyRequestDto(Long id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "e650f66d-9555-45e8-bedf-a07f3a4b89c4": {
      "id": "e650f66d-9555-45e8-bedf-a07f3a4b89c4",
      "value": [
        {
          "_id": "d041dc41-c7a1-4fdf-a6e4-413fb76b1c27",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n몇 가지 플러그인에서 `preload=true` 옵션을 잘못 사용하여 에러가 발생했다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 84,
        "depth": 0
      }
    },
    "eb50b58f-0f46-48ba-be40-351dc2a39fb9": {
      "id": "eb50b58f-0f46-48ba-be40-351dc2a39fb9",
      "value": [
        {
          "_id": "5b4d33fd-0964-4570-8980-8d6ded118ebf",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultSender.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 57,
        "depth": 1
      }
    },
    "ee389bbd-27e7-4997-97b5-8b55f435c626": {
      "id": "ee389bbd-27e7-4997-97b5-8b55f435c626",
      "value": [
        {
          "_id": "3b415396-3426-49c5-9f86-9bd1c1d69d34",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nAlert를 만들어주는 Helper 클래스이며, Alert의 제목, 헤더, 내용 및 이미지를 설정할 수 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 80,
        "depth": 1
      }
    },
    "f1b4e171-57f7-4b0e-bad0-56735b885c05": {
      "id": "f1b4e171-57f7-4b0e-bad0-56735b885c05",
      "value": [
        {
          "_id": "8f8d2a96-f8ee-4b22-bdbf-bdd7a44d5e23",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class RequestDto {\n    @JsonProperty\n    private String sourceApplication;\n    @JsonProperty\n    private String accessToken;\n    @JsonProperty\n    private String dataType;\n    @JsonProperty\n    private Long connectedFileId;\n    @JsonProperty\n    private String timestamp;\n    @JsonProperty\n    private Object content;\n\n    private static final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\");\n\n    public void setSourceApplication(String sourceApplication) {\n        this.sourceApplication = sourceApplication;\n    }\n\n    public void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public void setDataType(String dataType) {\n        this.dataType = dataType;\n    }\n\n    public void setConnectedFileId(Long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n\n    public void setContent(Object content) {\n        this.content = content;\n    }\n\n    public void setTimestamp(LocalDateTime timestamp) {\n        this.timestamp = timestamp.format(formatter);\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 61,
        "depth": 1
      }
    },
    "f46f8461-e09e-4ba5-8f45-480425f79e08": {
      "id": "f46f8461-e09e-4ba5-8f45-480425f79e08",
      "value": [
        {
          "_id": "d7968a15-bbbf-4370-ae59-fbfebefa043f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 파일 상태를 추적하고 SHA-256을 사용하여 암호화한 후 비교하는 기능을 하는 IntelliJ 플러그인입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 68,
        "depth": 1
      }
    },
    "f627720b-cb65-43af-b4db-ad5a24bdc428": {
      "id": "f627720b-cb65-43af-b4db-ad5a24bdc428",
      "value": [
        {
          "_id": "fc95b4e3-253b-4bc1-9186-e2c26dfe0a0d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifyRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "f635baba-6535-42fb-b362-73285a4c1763": {
      "id": "f635baba-6535-42fb-b362-73285a4c1763",
      "value": [
        {
          "_id": "d7f85955-d524-4d38-b7bb-836457fef3c6",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 54,
        "depth": 1
      }
    },
    "f7cde937-14fb-4809-86ba-06405a72d0a6": {
      "id": "f7cde937-14fb-4809-86ba-06405a72d0a6",
      "value": [
        {
          "_id": "1b10db6a-efef-41de-9f0f-f8eab253d30d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "RequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 60,
        "depth": 1
      }
    },
    "f921c2b1-2770-4baf-80a9-abb4b467eb0e": {
      "id": "f921c2b1-2770-4baf-80a9-abb4b467eb0e",
      "value": [
        {
          "_id": "52212538-9a7b-4b96-ac75-7f84911e8377",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n서버 연결 실패 시 다시 시도할지 물어보는 알림창을 만드는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 17,
        "depth": 1
      }
    },
    "f957b4f0-b39f-47cc-a458-954e5597cf8e": {
      "id": "f957b4f0-b39f-47cc-a458-954e5597cf8e",
      "value": [
        {
          "_id": "a14d5b66-8c06-4b8e-b2c3-2e7ecd80ec74",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\npublic class ResultDto {\n\n    private int status;\n    private Object data;\n\n    public int getStatus() {\n        return status;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setStatus(int status) {\n        this.status = status;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 70,
        "depth": 1
      }
    },
    "fab33437-ae6f-4308-9a91-e1b22e5231f8": {
      "id": "fab33437-ae6f-4308-9a91-e1b22e5231f8",
      "value": [
        {
          "_id": "979338dc-0284-467e-9ea6-e02941eb6dc2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n결과 데이터를 포함한 응답 상태를 나타내는 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 71,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a136afee7d1626031985d"
  },
  "directoryId": 339,
  "lastOrder": 86,
  "content": {
    "015130f1-66f0-44d4-aae6-2695ae4e8e82": {
      "id": "015130f1-66f0-44d4-aae6-2695ae4e8e82",
      "value": [
        {
          "_id": "2708544a-6c1e-4d9a-98d9-743abc4bd5c7",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 52,
        "depth": 1
      }
    },
    "01c3a968-193b-47dc-b9ef-7c91b99911a6": {
      "id": "01c3a968-193b-47dc-b9ef-7c91b99911a6",
      "value": [
        {
          "_id": "5897cb73-42e4-4303-aa25-e4b6a2df50eb",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "02fbe35c-23e1-4911-ae53-9338e6c91eb5": {
      "id": "02fbe35c-23e1-4911-ae53-9338e6c91eb5",
      "value": [
        {
          "_id": "4207b299-fd19-4c36-b136-0685c6547a21",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nRequestDto는 sourceApplication, accessToken, dataType, connectedFileId, timestamp, content 필드를 갖는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 63,
        "depth": 1
      }
    },
    "0b11643b-e695-44cb-ad74-bb15a7c87a9e": {
      "id": "0b11643b-e695-44cb-ad74-bb15a7c87a9e",
      "value": [
        {
          "_id": "8c14b1a2-b848-4f3a-a7b6-018c84adc246",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ConnectedFileManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 40,
        "depth": 1
      }
    },
    "0c03b7ac-a2cf-4dce-aca9-39b34fc147e8": {
      "id": "0c03b7ac-a2cf-4dce-aca9-39b34fc147e8",
      "value": [
        {
          "_id": "01168509-bece-40e4-89e7-4035f4f95ca8",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.startup.ProjectActivity;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport kotlin.Unit;\nimport kotlin.coroutines.Continuation;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;\n\npublic class StartUpActivity implements ProjectActivity {\n    private static boolean javafxInitialized = false;\n\n\n    @Nullable\n    @Override\n    public Object execute(@NotNull Project project, @NotNull Continuation<? super Unit> continuation) {\n        TokenManager tokenManager = TokenManager.getInstance();\n        ProjectProvider projectProvider = ProjectProvider.getInstance();\n        projectProvider.getProjects().offer(project);\n//        project.getService(DisposableService.class);\n        initializeJavaFXPlatform();\n        checkAndAddCodeListener(tokenManager, projectProvider);\n\n        return null;\n    }\n\n\n\n    private synchronized void initializeJavaFXPlatform() {\n        // JavaFX 플랫폼 초기화 상태 체크 및 조건부 초기화\n        if(!javafxInitialized){\n            Platform.startup(() -> {\n                javafxInitialized = true;\n                Platform.setImplicitExit(false);\n                new MainLoginFrame();\n            });\n        }\n    }\n\n    private void checkAndAddCodeListener(TokenManager tokenManager, ProjectProvider projectProvider) {\n        if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n//            showLoginAlert();\n        }\n        else{\n            addCodeListener(projectProvider);\n        }\n    }\n\n    private void showLoginAlert() {\n        Platform.runLater(() -> {\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"Ododoc IntelliJ Plugin\",\n                    \"로그인 필요\",\n                    \"자동 정리 기능을 사용하려면 로그인이 필요합니다.\",\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n            }\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "11f94df2-0549-46a5-a213-cce826b9f8ac": {
      "id": "11f94df2-0549-46a5-a213-cce826b9f8ac",
      "value": [
        {
          "_id": "ce6a5ab5-55c4-4f28-b3a3-6065c0be44fd",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 3,
        "depth": 0
      }
    },
    "137f80ee-6270-45a4-9aa1-746fd4956b63": {
      "id": "137f80ee-6270-45a4-9aa1-746fd4956b63",
      "value": [
        {
          "_id": "b7e8ad78-a269-4141-9c70-054cf8971c7e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "15e3dad7-d77e-4bf2-86dd-5634f89c3fd1": {
      "id": "15e3dad7-d77e-4bf2-86dd-5634f89c3fd1",
      "value": [
        {
          "_id": "da5ea36f-38a9-4343-9212-5fd2b6de596c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 파일 변경을 추적하고 암호화하여 저장하는 서비스 클래스 입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 69,
        "depth": 1
      }
    },
    "15ef59aa-4d41-4c22-bab3-498f4ad02fe8": {
      "id": "15ef59aa-4d41-4c22-bab3-498f4ad02fe8",
      "value": [
        {
          "_id": "0afc4888-3a1a-42e1-8c59-f71c89ff3c57",
          "type": "bulleted-list",
          "children": [
            {
              "text": "MainLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 64,
        "depth": 1
      }
    },
    "17b6b6aa-ddd4-4698-b380-e1afc43012be": {
      "id": "17b6b6aa-ddd4-4698-b380-e1afc43012be",
      "value": [
        {
          "_id": "47d534d0-c8a1-4d25-82f5-f06fadda6dd7",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectTracker.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 46,
        "depth": 1
      }
    },
    "17f98763-c8c8-480d-ae54-be8924ff3f82": {
      "id": "17f98763-c8c8-480d-ae54-be8924ff3f82",
      "value": [
        {
          "_id": "cc15c56a-4a14-4f5c-9f40-64c104db5653",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 정보를 표현하는 클래스 FileInfo입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 54,
        "depth": 1
      }
    },
    "19991a46-07ce-4ffb-80f5-51c54c8ab8a7": {
      "id": "19991a46-07ce-4ffb-80f5-51c54c8ab8a7",
      "value": [
        {
          "_id": "00096af4-5f96-42a0-a4bd-962cad29da96",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifiedFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "1ec93594-8c01-49d1-b368-2a3677b5b97c": {
      "id": "1ec93594-8c01-49d1-b368-2a3677b5b97c",
      "value": [
        {
          "_id": "88e2360d-4786-462f-bcd4-1efaa1809e66",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 83,
        "depth": 0
      }
    },
    "1f381e16-a235-477f-b716-402bd163cd4c": {
      "id": "1f381e16-a235-477f-b716-402bd163cd4c",
      "value": [
        {
          "_id": "278bd9d4-7833-433a-860b-e8265fb99a7f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 정보를 저장하는 클래스이며, PsiFile 객체와 해시값, 소스 코드를 저장한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "263fc728-daf1-4928-9e27-7b23b65f68f6": {
      "id": "263fc728-daf1-4928-9e27-7b23b65f68f6",
      "value": [
        {
          "_id": "f107b19d-4da1-45dc-84d9-808a1059f692",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nConnectedFileManager 클래스는 싱글톤 디자인 패턴을 사용하여 디렉토리 아이디를 관리하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 42,
        "depth": 1
      }
    },
    "26be916c-20e1-4379-a9a5-b52ab56e8441": {
      "id": "26be916c-20e1-4379-a9a5-b52ab56e8441",
      "value": [
        {
          "_id": "161696f6-71e5-4857-a604-09e69ed02ba4",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nAlert를 생성하여 이미지를 포함하는 도움말창을 만드는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 81,
        "depth": 1
      }
    },
    "281e8fef-8dc1-4edd-ba52-34a77b8e9782": {
      "id": "281e8fef-8dc1-4edd-ba52-34a77b8e9782",
      "value": [
        {
          "_id": "61b0468d-2cf6-479d-9d8d-b1d7ad295a37",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class MainLoginFrame extends Stage {\n\n    private static boolean isFrameVisible = false;\n\n    public MainLoginFrame() {\n        isFrameVisible = true;\n        setTitle(\" Ododoc\");\n        VBox layout = new VBox(10);\n        layout.setAlignment(Pos.CENTER);\n\n        Image windowIcon = new Image(getClass().getResourceAsStream(\"/image/button/icon.png\"));\n        getIcons().add(windowIcon);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        setOnCloseRequest(event -> {\n            if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.CONFIRMATION,\n                        \" Ododoc\",\n                        \"로그인 필요\",\n                        \"Ododoc 서비스를 이용하려면 로그인이 필요합니다.\\n정말 종료하시겠습니까?\",\n                        \"/image/button/icon.png\"\n                );\n\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() != ButtonType.OK) {\n                    event.consume();\n                }\n                else{\n                    isFrameVisible = false;\n                }\n            }\n        });\n\n        Button homeBtn = makeHomeButton();\n        Button kakaoLoginBtn = makeButton(\"kakao\"); // 카카오 로그인 버튼\n        Button naverLoginBtn = makeButton(\"naver\"); // 네이버 로그인 버튼\n        Button googleLoginBtn = makeButton(\"google\"); // 구글 로그인 버튼\n\n        layout.getChildren().addAll(homeBtn, kakaoLoginBtn, naverLoginBtn, googleLoginBtn);\n        layout.setPadding(new Insets(-15, 0, 0, 0));\n        Scene scene = new Scene(layout, 300, 400);\n        setScene(scene);\n        show();\n    }\n\n    private void onLogin(String provider) {\n        new OauthLoginFrame(this, provider);\n    }\n\n    private Button makeButton(String provider){\n        String iconImagePath = \"/image/button/\" + provider +\"_login.png\";\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(iconImagePath)));\n        btnImageView.setFitWidth(183);\n        btnImageView.setFitHeight(45);\n        Button loginBtn = new Button(\"\", btnImageView);\n        loginBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 3, 3, 3, 3;\");\n\n        String upperProvider = provider.toUpperCase();\n        loginBtn.setOnAction(e -> {\n            onLogin(upperProvider);\n        });\n\n        return loginBtn;\n    }\n\n    private Button makeHomeButton(){\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logo.png\")));\n        btnImageView.setFitWidth(184);\n        btnImageView.setFitHeight(60);\n        Button homeBtn = new Button(\"\", btnImageView);\n        homeBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 30, 0, 3, 3; -fx-border-color: transparent;\");\n\n        homeBtn.setOnAction(e -> {\n            openWebPage();\n        });\n\n        return homeBtn;\n    }\n\n    private void openWebPage() {\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n    public static boolean isFrameVisible() {\n        return isFrameVisible;\n    }\n\n\n}",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 65,
        "depth": 1
      }
    },
    "29a4da31-c91b-42cc-a69d-dc53cb388ce7": {
      "id": "29a4da31-c91b-42cc-a69d-dc53cb388ce7",
      "value": [
        {
          "_id": "2e320e54-f59a-4e88-b082-53167eb76e9d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "WebSocketReConnectAlert.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "2db75977-62c3-4f6d-a3e2-e0c0dafdd4c3": {
      "id": "2db75977-62c3-4f6d-a3e2-e0c0dafdd4c3",
      "value": [
        {
          "_id": "cd877e15-42cc-4e36-a6ff-6e9b359dab65",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.entity;\n\npublic class FileInfo {\n\n    private Long id;\n    private String name;\n    private String type;\n\n    public FileInfo(Long id, String name, String type) {\n        this.id = id;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    @Override\n    public String toString() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "2e2c0bc9-f771-411e-b3be-06c7c68a3322": {
      "id": "2e2c0bc9-f771-411e-b3be-06c7c68a3322",
      "value": [
        {
          "_id": "e4d7958c-4868-46eb-b994-48b4f10921ee",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.concurrent.Worker;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.ProgressIndicator;\nimport javafx.scene.image.Image;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.web.WebEngine;\nimport javafx.scene.web.WebView;\nimport javafx.stage.Stage;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\n\nimport java.net.CookieHandler;\nimport java.net.CookieManager;\nimport java.util.Optional;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\nimport static java.net.CookiePolicy.ACCEPT_ALL;\n\npublic class OauthLoginFrame extends Stage {\n\n    private String clientId;\n    private String redirectUri;\n    private String firstLocation;\n    private String lastLocation;\n    private String loginUri;\n    private final int TIME_OUT = 5; // 로그인 응답 대기 시간\n\n    private ScheduledExecutorService scheduler;\n    private MainLoginFrame mainLoginFrame = null;\n    private ProgressIndicator loadingIndicator;\n    private Alert alert;\n\n    public OauthLoginFrame(MainLoginFrame mainLoginFrame, String provider){\n        this.mainLoginFrame = mainLoginFrame;\n\n        // 제목 설정\n        setTitle(\" \" + provider);\n\n        String lowerProvider = provider.toLowerCase();\n        redirectUri = \"https://k10d209.p.ssafy.io/api/oauth2/authorization/\" + lowerProvider;\n\n        // 아이콘 설정\n        String iconImagePath = \"/image/button/\" + lowerProvider  + \"_icon.png\";\n        Image windowIcon = new Image(getClass().getResourceAsStream(iconImagePath));\n        getIcons().add(windowIcon);\n\n        StackPane layout = new StackPane();\n        WebView webView = new WebView();\n        WebEngine webEngine = webView.getEngine();\n        loadingIndicator = new ProgressIndicator();\n        loadingIndicator.setVisible(false);\n\n        layout.getChildren().addAll(webView, loadingIndicator);\n        Scene scene = new Scene(layout, 450, 600);\n        setScene(scene);\n        show();\n\n        // alert 초기화\n        alert = AlertHelper.makeAlert(\n                Alert.AlertType.WARNING,\n                \" \" + provider,\n                \"로그인 실패\",\n                \"다시 로그인 해주세요.\",\n                iconImagePath);\n\n        // oauth 플랫폼에 따라 필드 초기화\n        switch(provider) {\n            case \"KAKAO\" :\n                clientId = \"a23282fc18f2b445d559dfe93fa96e6b\";\n                firstLocation = \"kakaossotokenlogin.do\";\n                lastLocation = redirectUri;\n                loginUri = \"https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"NAVER\" :\n                clientId = \"DRnVNgGzq_x_6Q4apfhJ\";\n                firstLocation = \"oauth_token\";\n                lastLocation = \"nid\";\n                loginUri = \"https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"GOOGLE\" :\n                clientId = \"599323777848-68aq3cu9p98np6eml1m77mfc1ethpkrp.apps.googleusercontent.com\";\n                firstLocation = \"SetSID\";\n                lastLocation = \"Fuserinfo.profile\";\n                loginUri = \"https://accounts.google.com/o/oauth2/v2/auth?client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri\n                        + \"&scope=profile&response_type=code\";\n                break;\n        }\n\n        doOauthLogin(webEngine, provider);\n    }\n\n    private void doOauthLogin(WebEngine webEngine, String provider) {\n\n        CookieManager cookieManager = new CookieManager();\n        cookieManager.setCookiePolicy(ACCEPT_ALL);\n        CookieHandler.setDefault(cookieManager);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n\n        if(scheduler != null && !scheduler.isShutdown()){\n            scheduler.shutdownNow();\n        }\n        scheduler = Executors.newSingleThreadScheduledExecutor();\n        Runnable timeoutTask = () -> {\n            Platform.runLater(() -> {\n                alert.showAndWait();\n                close();\n                cookieManager.getCookieStore().removeAll();\n                webEngine.executeScript(\"localStorage.clear();\");\n            });\n        };\n\n        webEngine.getLoadWorker().stateProperty().addListener((obs, oldState, newState) -> {\n\n            // 화면이 성공적으로 전환이 되었을 때\n            if (newState == Worker.State.SUCCEEDED) {\n\n                // 로그인 응답 시간 스케쥴러 등록, 로딩 스피너 작동\n                if (webEngine.getLocation().contains(firstLocation)){\n                    scheduler.schedule(timeoutTask, TIME_OUT, TimeUnit.SECONDS);\n                    loadingIndicator.setVisible(true);\n                }\n\n                boolean shouldProcess = false;\n                switch (provider){\n                    case \"KAKAO\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri);\n                        break;\n                    case \"NAVER\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && !webEngine.getLocation().contains(lastLocation);\n                        break;\n                    case \"GOOGLE\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && webEngine.getLocation().contains(lastLocation);\n                        break;\n                }\n\n                // 응답을 받을 화면이 나온다면\n                if (shouldProcess) {\n\n                    scheduler.shutdownNow();\n                    loadingIndicator.setVisible(false);\n\n                    // javascript를 실행시켜 content 정보 가져오기\n                    String content = (String) webEngine.executeScript(\"document.body.textContent\");\n                    Long status;\n                    JSONParser jsonParser = new JSONParser();\n\n                    try {\n                        // String to Json\n                        JSONObject json = (JSONObject) jsonParser.parse(content);\n                        status = (Long) json.get(\"status\");\n                        JSONObject data = (JSONObject) json.get(\"data\");\n\n                        if (status != 200) {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        } else {\n                            // access 토큰을 싱글톤 객체에 저장\n                            tokenManager.setAccessToken((String) data.get(\"accessToken\"));\n                            directoryInfoManager.setRootId((long) data.get(\"rootId\"));\n                            directoryInfoManager.setTitle((String) data.get(\"title\"));\n                        }\n\n\n                    } catch (ParseException e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    webEngine.executeScript(\"document.body.style.display = 'none';\");\n\n                    // 쿠키의 refresh 토큰을 싱글톤 객체에 저장\n                    cookieManager.getCookieStore().getCookies().forEach(cookie -> {\n                        if (cookie.getName().equals(\"refreshToken\")) {\n                            tokenManager.setRefreshToken(cookie.getValue());\n                        }\n                    });\n\n                    // 로그인 성공 여부 다시 확인\n                    if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                        Platform.runLater(() -> {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        });\n\n                        return;\n                    }\n\n                    // 지금 현재 등록되어 있는 모든 프로젝트들에게 codeListener 추가하기\n                    addCodeListener(ProjectProvider.getInstance());\n\n                    try {\n                        new DirectoryFrame().start(mainLoginFrame);\n                        connectWebSocket();\n                    } catch (Exception e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    close();\n                }\n            }\n\n        });\n\n        webEngine.load(loginUri);\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n                projectTracker.initHashStatus(tempProject);\n            }\n        }\n    }\n\n    // 처리 서버와 webSocket 연결해주기\n    private void connectWebSocket() {\n        BuildResultSender.setINSTANCE(null);\n        BuildResultSender.getINSTANCE();\n\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n\n        if(!BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    connectWebSocket();\n                }\n                else {\n                    this.close();\n                }\n            });\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 29,
        "depth": 1
      }
    },
    "32649562-e209-4919-b32f-e650cff697d6": {
      "id": "32649562-e209-4919-b32f-e650cff697d6",
      "value": [
        {
          "_id": "69459902-b7c3-49db-88f0-f43c0da78e49",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CodeListener.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "3286fb00-a57e-4235-b8d1-c67a9c755cba": {
      "id": "3286fb00-a57e-4235-b8d1-c67a9c755cba",
      "value": [
        {
          "_id": "c53bc128-d71c-4de0-8fce-e0b4ea89dc06",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectProvider.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 25,
        "depth": 1
      }
    },
    "3cba1ffa-8fcf-4d70-9115-8252ffd1e0b9": {
      "id": "3cba1ffa-8fcf-4d70-9115-8252ffd1e0b9",
      "value": [
        {
          "_id": "10204aa0-9e70-4ea7-b9c2-cae0ce84bec0",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.alert;\n\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.stage.Stage;\n\npublic class AlertHelper {\n\n    public static Alert makeAlert(Alert.AlertType alertType, String title, String header, String content, String imagePath) {\n        Alert alert = new Alert(alertType);\n        alert.setTitle(title);\n        alert.setHeaderText(header);\n        alert.setContentText(content);\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(imagePath)));\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 80,
        "depth": 1
      }
    },
    "3f2b3760-9f96-4314-869d-dff453debb53": {
      "id": "3f2b3760-9f96-4314-869d-dff453debb53",
      "value": [
        {
          "_id": "29d9623f-7695-45b1-80cf-479e76063691",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\npublic class ResultDto {\n\n    private int status;\n    private Object data;\n\n    public int getStatus() {\n        return status;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setStatus(int status) {\n        this.status = status;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 71,
        "depth": 1
      }
    },
    "4596c6eb-9090-4720-9d6d-da7201b7770c": {
      "id": "4596c6eb-9090-4720-9d6d-da7201b7770c",
      "value": [
        {
          "_id": "f9e26c65-c09e-4fb8-8ada-abc069c22e7f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "47e72b9c-be3e-4cca-af64-c2c7ebfabe51": {
      "id": "47e72b9c-be3e-4cca-af64-c2c7ebfabe51",
      "value": [
        {
          "_id": "1329ade1-d984-4540-bf36-7fadf1cd18ed",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "4bae9a9b-2873-4081-ad3f-a4364463a3b0": {
      "id": "4bae9a9b-2873-4081-ad3f-a4364463a3b0",
      "value": [
        {
          "_id": "6c1b0d76-2471-4c33-add9-e9f68a05b321",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.entity;\n\nimport com.intellij.psi.PsiFile;\n\npublic class ProjectInfo implements Cloneable{\n\n    private PsiFile psiFile;\n    private String hash;\n    private String sourceCode;\n\n    public ProjectInfo(PsiFile psiFile, String hash, String sourceCode) {\n        this.psiFile = psiFile;\n        this.hash = hash;\n        this.sourceCode = sourceCode;\n    }\n\n    public PsiFile getPsiFile() {\n        return psiFile;\n    }\n\n    public String getHash() {\n        return hash;\n    }\n\n    public String getSourceCode() {\n        return sourceCode;\n    }\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "4bf710ea-5230-435a-bb72-d77403217209": {
      "id": "4bf710ea-5230-435a-bb72-d77403217209",
      "value": [
        {
          "_id": "785bba7e-ae5a-481e-944c-207bc7391293",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ErrorFileInfo {\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n    @JsonProperty\n    private int line;\n\n    public ErrorFileInfo(String fileName, String sourceCode, int line) {\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n        this.line = line;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 38,
        "depth": 1
      }
    },
    "4f398040-0713-4bc8-bf92-fe9fba1dc3e3": {
      "id": "4f398040-0713-4bc8-bf92-fe9fba1dc3e3",
      "value": [
        {
          "_id": "465da8bb-50b2-45fa-b0ed-2d4e8ef9a163",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 82,
        "depth": 0
      }
    },
    "5019f2a8-f971-4d28-bf0e-150b9244bfb4": {
      "id": "5019f2a8-f971-4d28-bf0e-150b9244bfb4",
      "value": [
        {
          "_id": "c89ca1ab-19b5-425c-89a4-104d599fbd78",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nErrorFileInfo는 파일 이름, 소스 코드 및 라인 번호를 저장하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 39,
        "depth": 1
      }
    },
    "55a0306b-6e1c-46e2-9d23-3f71d9b8ad93": {
      "id": "55a0306b-6e1c-46e2-9d23-3f71d9b8ad93",
      "value": [
        {
          "_id": "9441c204-7eb0-4ae0-8ef5-5d1c23590743",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nIntelliJ에서 실행 중인 프로젝트의 빌드 및 오류 정보를 추적하여 서버로 전송하는 코드 리스너입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "5b5a756c-87ca-46a6-bf01-2023dfdb83f5": {
      "id": "5b5a756c-87ca-46a6-bf01-2023dfdb83f5",
      "value": [
        {
          "_id": "5278a6b5-5e36-4133-b6f7-508b7f5f85c1",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ErrorFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 37,
        "depth": 1
      }
    },
    "5bde7b43-ced1-463e-937f-9ad3155576fa": {
      "id": "5bde7b43-ced1-463e-937f-9ad3155576fa",
      "value": [
        {
          "_id": "f932b190-b697-4c20-8acb-a2fe45a6c430",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nTokenManager 클래스는 싱글톤으로 구현되어 있으며, accessToken과 refreshToken을 관리한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 78,
        "depth": 1
      }
    },
    "5fd675b1-6ea4-4ec9-ba01-aa9ae29a9b17": {
      "id": "5fd675b1-6ea4-4ec9-ba01-aa9ae29a9b17",
      "value": [
        {
          "_id": "f49b142d-97c6-4d5a-ae8e-b1b6c8e7cadf",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 플러그인을 실행하여 디렉토리 프레임을 엽니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 36,
        "depth": 1
      }
    },
    "6167ae9d-a3d2-4af5-a455-31d0fd77fd30": {
      "id": "6167ae9d-a3d2-4af5-a455-31d0fd77fd30",
      "value": [
        {
          "_id": "97304287-b1dc-41ea-9285-ed39b809845b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.application.ReadAction;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class ProjectTracker {\n\n    private List<PsiFile> psiFiles;\n    private Map<String, ProjectInfo> beforeProjectStatus = new HashMap<>();\n    private Map<String, ProjectInfo> currentProjectStatus = new HashMap<>();\n    private String allBeforeProjectStatus;\n    private String allCurrentProjectStatus;\n    private ProjectTracker(){}\n\n    private static class ProjectTrackerHolder {\n        private static final ProjectTracker INSTANCE = new ProjectTracker();\n    }\n\n    public static ProjectTracker getInstance() {\n        return ProjectTrackerHolder.INSTANCE;\n    }\n\n    // 프로젝트 생성시 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void initHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() ->{\n            String fileHash = \"\";\n            getProjectFileList(project);\n            beforeProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                beforeProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allBeforeProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    // 지금 현재 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void currentHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() -> {\n            String fileHash = \"\";\n            getProjectFileList(project);\n            currentProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                currentProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allCurrentProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    private void getProjectFileList(Project project){\n\n        ApplicationManager.getApplication().runReadAction(() -> {\n            GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n            Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n            PsiManager psiManager = PsiManager.getInstance(project);\n\n            psiFiles = files.stream()\n                    .map(file -> psiManager.findFile(file))\n                    .toList();\n        });\n    }\n\n    // 해쉬로 암호화\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try{\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for(byte b : hashCode){\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        }catch (NoSuchAlgorithmException e){\n            throw  new RuntimeException(e);\n        }\n\n        return result;\n    }\n\n    public Map<String, ProjectInfo> getBeforeProjectStatus() {\n        return beforeProjectStatus;\n    }\n\n    public Map<String, ProjectInfo> getCurrentProjectStatus() {\n        return currentProjectStatus;\n    }\n\n    public String getAllBeforeProjectStatus() {\n        return allBeforeProjectStatus;\n    }\n\n    public String getAllCurrentProjectStatus() {\n        return allCurrentProjectStatus;\n    }\n\n    public void setBeforeProjectStatus(Map<String, ProjectInfo> beforeProjectStatus) {\n        this.beforeProjectStatus = beforeProjectStatus;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 47,
        "depth": 1
      }
    },
    "65b65648-f4cd-46cb-a6b9-a43797380b53": {
      "id": "65b65648-f4cd-46cb-a6b9-a43797380b53",
      "value": [
        {
          "_id": "e592f234-6733-4561-8a98-92e456fb5ef6",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ResultDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 70,
        "depth": 1
      }
    },
    "6c6933d3-7602-49d3-9bbc-83fb3bbf15bb": {
      "id": "6c6933d3-7602-49d3-9bbc-83fb3bbf15bb",
      "value": [
        {
          "_id": "50913c3d-8f2c-4dbf-9bcf-b941dadb2b14",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.handshake.ServerHandshake;\n\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class BuildResultSender {\n\n    // volatile 키워드를 사용하여 메모리 가시성 문제 해결, 멀티스레드 환경에서도 변수가 안전하게 사용할 수 있도록 함.\n    private static volatile WebSocketClient INSTANCE;\n\n    // 객체의 락을 위해 사용.\n    private static final Object lock = new Object();\n    private static final String WEBSOCKET_URI = \"wss://k10d209.p.ssafy.io/process/ws\";\n    private static boolean enableWhenPushBtn = false;\n    private static int count = 0;\n    private BuildResultSender() {}\n\n    public static WebSocketClient getINSTANCE() {\n\n        if(INSTANCE == null) {\n            // 두 번째로 null 체크를 한 후 다중 스레드 환경에서 동시에 여러 인스턴스가 생성되는 것을 방지\n            synchronized (lock) {\n                if(INSTANCE == null){\n                    try {\n\n                        INSTANCE = new WebSocketClient(new URI(WEBSOCKET_URI)) {\n                            @Override\n                            public void onOpen(ServerHandshake serverHandshake) {\n                                if(count > 0){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.INFORMATION,\n                                                \" Ododoc\",\n                                                \"서버 연결 성공\",\n                                                \"서버와의 연결에 성공했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                }\n                                count ++;\n                            }\n\n                            @Override\n                            public void onMessage(String s) {}\n\n                            @Override\n                            public void onClose(int i, String s, boolean b) {\n                                if(count > 0){\n                                    BuildResultSender.setINSTANCE(null);\n                                    Platform.runLater(() -> {\n                                        Alert alert = WebSocketReConnectAlert.makeAlert();\n                                        Optional<ButtonType> result = alert.showAndWait();\n                                        if(result.isPresent() && result.get() == ButtonType.OK) {\n                                            getINSTANCE();\n                                        }\n                                    });\n                                }\n                            }\n\n                            @Override\n                            public void onError(Exception e) {\n                                System.out.println(e.getMessage());\n                                if(enableWhenPushBtn){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.ERROR,\n                                                \" Ododoc\",\n                                                \"서버 연결 실패\",\n                                                \"서버와의 연결에 실패했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                    enableWhenPushBtn = false;\n                                }\n                            }\n                        };\n\n                        INSTANCE.connect();\n                    }catch (URISyntaxException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n\n        return INSTANCE;\n    }\n\n    public static void setINSTANCE(WebSocketClient INSTANCE) {\n        BuildResultSender.INSTANCE = INSTANCE;\n    }\n\n    public static void setEnableWhenPushBtn(boolean enableWhenPushBtn) {\n        BuildResultSender.enableWhenPushBtn = enableWhenPushBtn;\n    }\n\n    public static void sendMessage(String message) {\n        if(INSTANCE != null && INSTANCE.isOpen()){\n            INSTANCE.send(message);\n        }\n    }\n\n    public static boolean isConnected() {\n        return INSTANCE != null && INSTANCE.isOpen() ? true : false;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 59,
        "depth": 1
      }
    },
    "6fd224eb-3b23-4e7d-be31-b4f4b29afab7": {
      "id": "6fd224eb-3b23-4e7d-be31-b4f4b29afab7",
      "value": [
        {
          "_id": "8a408066-6cd2-4e45-8da6-3515ea0846c0",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리 생성 요청 DTO에는 부모 ID, 이름, 유형이 포함됩니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 51,
        "depth": 1
      }
    },
    "7010810b-073b-41f5-966d-f4c6209bfab9": {
      "id": "7010810b-073b-41f5-966d-f4c6209bfab9",
      "value": [
        {
          "_id": "bc064ce1-72fe-435a-be5f-808648a31c8e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.stage.Stage;\nimport org.jvnet.winp.Main;\n\npublic class OpenOdodocPlugin extends AnAction {\n\n    @Override\n    public void actionPerformed(AnActionEvent e) {\n        Platform.runLater(() -> {\n            if(TokenManager.getInstance().getAccessToken() == null || TokenManager.getInstance().getRefreshToken() == null){\n                if(!MainLoginFrame.isFrameVisible()){\n                    new MainLoginFrame();\n                }\n            }\n            else {\n                new DirectoryFrame().start(new Stage());\n            }\n        });\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 35,
        "depth": 1
      }
    },
    "72131b3f-ce8e-46a2-8aed-2d8af43da991": {
      "id": "72131b3f-ce8e-46a2-8aed-2d8af43da991",
      "value": [
        {
          "_id": "f492bf4b-ea76-4fb7-bf5b-367aa04cb44b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "StartUpActivity.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 31,
        "depth": 1
      }
    },
    "73ef5a5c-c6df-4c65-9152-78db4fba39f7": {
      "id": "73ef5a5c-c6df-4c65-9152-78db4fba39f7",
      "value": [
        {
          "_id": "62310f52-06f5-4f86-99b3-8835c6bc4071",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class ConnectedFileManager {\n\n    private Long directoryId = 0L;\n\n    private ConnectedFileManager() {}\n\n    private static class ConnectedFileManagerHolder {\n        private static final ConnectedFileManager INSTANCE = new ConnectedFileManager();\n    }\n\n    public static ConnectedFileManager getInstance() {\n        return ConnectedFileManager.ConnectedFileManagerHolder.INSTANCE;\n    }\n\n    public Long getDirectoryId() {\n        return directoryId;\n    }\n\n    public void setDirectoryId(Long directoryId) {\n        this.directoryId = directoryId;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 41,
        "depth": 1
      }
    },
    "75d13cd0-3f73-4d0e-b59d-181e17cff63e": {
      "id": "75d13cd0-3f73-4d0e-b59d-181e17cff63e",
      "value": [
        {
          "_id": "7f2bbf90-b742-43ea-8331-507641d3fd9c",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.CreateRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.DirectoryDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.control.*;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseButton;\nimport javafx.scene.layout.BorderPane;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\nimport reactor.core.publisher.Mono;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\n\npublic class DirectoryFrame extends Application {\n\n    private Long currentDirectoryId;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n    private TreeView<FileInfo> treeView;\n    private ContextMenu folderContextMenu = new ContextMenu();\n    private ContextMenu fileContextMenu = new ContextMenu();\n    private Stage stage;\n\n    @Override\n    public void start(Stage initStage) {\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n        ResultDto resultDto = retrieveDirectory(directoryInfoManager.getRootId()).block();\n        this.stage = initStage;\n        // 제목 설정\n        stage.setTitle(\" \" + directoryInfoManager.getTitle());\n        currentDirectoryId = directoryInfoManager.getRootId();\n\n        // 오른쪽 마우스 이벤트 목록 생성\n        makeContextMenu();\n\n        // 디렉토리 UI 생성\n        TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n        invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n\n        treeView = new TreeView<>(invisibleRoot);\n        treeView.setShowRoot(false);\n        treeView.setEditable(true);\n        treeView.setCellFactory(tv -> new FileAndFolderTreeCell(folderContextMenu, fileContextMenu, stage, this::refreshDirectoryView));\n        treeView.setOnMouseClicked(event -> {\n            // 오른쪽 마우스 클릭 시 빈 공간 일 경우 파일 및 폴더 생성\n            if (event.getButton() == MouseButton.SECONDARY) {\n                if(treeView.getSelectionModel().getSelectedItem() == null){\n                    folderContextMenu.show(treeView, event.getScreenX(), event.getScreenY());\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                } else{\n                    currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                }\n            } else {\n                folderContextMenu.hide();\n            }\n\n            // 왼쪽 마우스 클릭 시\n            if(event.getButton() == MouseButton.PRIMARY){\n                // 빈공간일 경우 폴더 및 파일을 선택 비활성화\n                if(event.getTarget() instanceof TreeCell<?> && ((TreeCell) event.getTarget()).isEmpty()){\n                    treeView.getSelectionModel().clearSelection();\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                }\n                else{\n                    if(treeView.getSelectionModel().getSelectedItems().isEmpty()){\n                        currentDirectoryId = directoryInfoManager.getRootId();\n                    }\n                    else{\n                        currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                    }\n                }\n            }\n        });\n\n        Button refreshButton = new Button();\n        ImageView refreshIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/refresh.png\")));\n        refreshButton.setGraphic(refreshIcon);\n        refreshButton.setTooltip(new Tooltip(\"새로고침\"));\n        refreshButton.setOnAction(e -> refreshDirectoryView());\n\n        Button connectButton = new Button();\n        ImageView connectIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/connect.png\")));\n        connectButton.setGraphic(connectIcon);\n        connectButton.setTooltip(new Tooltip(\"서버 연결\"));\n        connectButton.setOnAction(e -> connectWebSocket());\n\n        Button homeButton = new Button();\n        ImageView homeIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/home.png\")));\n        homeButton.setGraphic(homeIcon);\n        homeButton.setTooltip(new Tooltip(\"Ododoc 홈페이지로 이동\"));\n        homeButton.setOnAction(e -> openWebPage());\n\n//        Button logoutButton = new Button();\n//        ImageView logoutIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logout.png\")));\n//        logoutButton.setGraphic(logoutIcon);\n//        logoutButton.setTooltip(new Tooltip(\"로그아웃\"));\n//        logoutButton.setOnAction(e -> logout());\n\n        ToolBar toolBar = new ToolBar();\n        toolBar.getItems().addAll(homeButton, connectButton, refreshButton);\n        BorderPane root = new BorderPane();\n        root.setBottom(toolBar);\n        root.setCenter(treeView);\n\n\n        Scene scene = new Scene(root, 300, 500);\n        stage.setScene(scene);\n        stage.show();\n    }\n\n    private Mono<ResultDto> retrieveDirectory(long rootId) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        return webClient.get()\n                .uri(\"/\" + rootId)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .doOnSuccess(result -> {\n                    // 성공했을 경우\n                    if(result.getStatus() == 200){\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        result.setData(objectMapper.convertValue(result.getData(), DirectoryDto.class));\n                    }\n                    // 토큰이 만료되었을 경우\n                    else if(result.getStatus() == 401){\n                        result.setData(new DirectoryDto());\n                        refreshAccessToken();\n                        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId());\n                    }\n                    else{\n                        result.setData(new DirectoryDto());\n                        showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\");\n                    }\n                })\n                .doOnError(error -> showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\"));\n    }\n\n    private TreeItem<FileInfo> LoadDirectory(List<DirectoryDto> children, TreeItem<FileInfo> invisibleRoot) {\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> fileItem = new TreeItem<>(fileInfo);\n            fileItem.setExpanded(true);\n            DFS(dto.getChildren(), fileItem);\n            invisibleRoot.getChildren().add(fileItem);\n        }\n\n        return invisibleRoot;\n    }\n\n    private void DFS(List<DirectoryDto> children, TreeItem<FileInfo> fileItem) {\n\n        if(children == null){\n            return;\n        }\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> childFileItem = new TreeItem<>(fileInfo);\n            fileItem.getChildren().add(childFileItem);\n\n            DFS(dto.getChildren(), childFileItem);\n        }\n\n    }\n\n    private void makeContextMenu() {\n        MenuItem addFolder = new MenuItem(\"폴더 생성\");\n        MenuItem addFile = new MenuItem(\"파일 생성\");\n        folderContextMenu.getItems().addAll(addFolder, addFile);\n\n        MenuItem connectFile = new MenuItem(\"파일 연동\");\n        fileContextMenu.getItems().add(connectFile);\n\n        addFolder.setOnAction(e -> createFolderOrFile(\"folder\"));\n        addFile.setOnAction(e -> createFolderOrFile(\"file\"));\n        connectFile.setOnAction(e -> connectFile());\n    }\n\n    private void connectFile() {\n        ConnectedFileManager connectedFileManager = ConnectedFileManager.getInstance();\n        connectedFileManager.setDirectoryId(currentDirectoryId);\n\n        if(connectedFileManager.getDirectoryId() != -1){\n            showAlert(Alert.AlertType.INFORMATION, \"연동 성공\", \"파일과 연동에 성공하였습니다.\");\n        }\n        else{\n            showAlert(Alert.AlertType.WARNING, \"연동 실패\", \"파일과의 연동에 실패하였습니다.\");\n        }\n    }\n\n    private void createFolderOrFile(String type){\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        CreateRequestDto createRequestDto = new CreateRequestDto(currentDirectoryId, \"\", type);\n\n        webClient.post()\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        refreshDirectoryView();\n                    }\n                    else if (result.getStatus() == 401) {\n                        refreshAccessToken();\n                        showAlert(Alert.AlertType.WARNING, \"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                    else {\n                        showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                }, error -> {\n                    showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                    refreshDirectoryView();\n                });\n    }\n\n    private void refreshDirectoryView() {\n        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId()).subscribe(resultDto -> {\n            Platform.runLater(() -> {\n                TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n                invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n                treeView.setRoot(invisibleRoot);\n                treeView.setShowRoot(false);\n                treeView.refresh();\n            });\n        });\n    }\n\n    private void showAlert(Alert.AlertType type, String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    type,\n                    \" Ododoc\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private void connectWebSocket(){\n        if(BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.INFORMATION,\n                        \" Ododoc\",\n                        \"서버 연결 확인\",\n                        \"이미 서버와 연결이 되어 있습니다.\",\n                        \"/image/button/icon.png\"\n                );\n                alert.showAndWait();\n            });\n        }\n\n        else {\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    BuildResultSender.setEnableWhenPushBtn(true);\n                    BuildResultSender.setINSTANCE(null);\n                    BuildResultSender.getINSTANCE();\n                }\n            });\n        }\n\n    }\n\n    private void openWebPage(){\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n//    private void logout(){\n//        TokenManager.getInstance().setRefreshToken(null);\n//        TokenManager.getInstance().setAccessToken(null);\n//    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "781e4f05-69cf-49b2-ba9e-c43cd67f48d5": {
      "id": "781e4f05-69cf-49b2-ba9e-c43cd67f48d5",
      "value": [
        {
          "_id": "f08d0f2b-8985-40d6-8380-41354c6130eb",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc IntelliJ 플러그인에서는 프로젝트를 시작할 때 자동으로 JavaFX 플랫폼을 초기화하고 로그인 상태를 확인하여 코드 리스너를 추가합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "794c795d-a80e-4b96-ba0d-cfdcefa47cee": {
      "id": "794c795d-a80e-4b96-ba0d-cfdcefa47cee",
      "value": [
        {
          "_id": "8ff4b3b3-5133-44cd-a477-c1f097667b39",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 19,
        "depth": 1
      }
    },
    "7f396738-194e-4518-8fcf-99997c7784dd": {
      "id": "7f396738-194e-4518-8fcf-99997c7784dd",
      "value": [
        {
          "_id": "3f11bc3f-c87a-4d1e-9e6b-ac6a29296cf4",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nDirectoryInfoManager는 루트 디렉토리의 ID와 제목을 관리하는 싱글톤 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 75,
        "depth": 1
      }
    },
    "8074aa51-6886-43cd-9b81-4eef6993277d": {
      "id": "8074aa51-6886-43cd-9b81-4eef6993277d",
      "value": [
        {
          "_id": "c0d77bb4-5784-418b-a34e-4997844bc6ca",
          "type": "bulleted-list",
          "children": [
            {
              "text": "RequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 61,
        "depth": 1
      }
    },
    "81f1360e-f708-47f4-8eb0-05d2b9602682": {
      "id": "81f1360e-f708-47f4-8eb0-05d2b9602682",
      "value": [
        {
          "_id": "6a03741d-aab5-4575-affc-8a216e19efbc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nResultDto는 status와 data를 가지고 있는 객체이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 72,
        "depth": 1
      }
    },
    "84e944d7-ba68-4b69-93c7-7639a32e08a5": {
      "id": "84e944d7-ba68-4b69-93c7-7639a32e08a5",
      "value": [
        {
          "_id": "0c5f26fc-8542-4011-8862-b45a60980bc0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "TokenManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 76,
        "depth": 1
      }
    },
    "85d6cc89-30e8-4fb0-835d-78c8e57199bf": {
      "id": "85d6cc89-30e8-4fb0-835d-78c8e57199bf",
      "value": [
        {
          "_id": "2d61fc69-e28a-4b55-a851-05118eec8e0a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileAndFolderTreeCell.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 43,
        "depth": 1
      }
    },
    "870b52ac-b146-4db7-9382-8ed17ece8a27": {
      "id": "870b52ac-b146-4db7-9382-8ed17ece8a27",
      "value": [
        {
          "_id": "5f12b35e-bc57-4e0a-b534-6a0ba303b17b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultSender.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 58,
        "depth": 1
      }
    },
    "8b9daa7a-0c96-4186-bfc6-9ddf5dc61315": {
      "id": "8b9daa7a-0c96-4186-bfc6-9ddf5dc61315",
      "value": [
        {
          "_id": "9202f079-0787-41d2-80f8-53e6bf2c0c54",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 프로젝트 제공자는 프로젝트를 큐로 관리하며 싱글톤 패턴을 사용한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "8d565d05-b1e0-47b6-b6db-6a52c426257d": {
      "id": "8d565d05-b1e0-47b6-b6db-6a52c426257d",
      "value": [
        {
          "_id": "638a3f1b-92aa-4457-9884-2573b4f44c8d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nWebSocket 서버 연결 실패 시 재시도 여부를 묻는 알림을 만드는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 18,
        "depth": 1
      }
    },
    "99792c57-be4c-404e-b452-50e56780c6b1": {
      "id": "99792c57-be4c-404e-b452-50e56780c6b1",
      "value": [
        {
          "_id": "3f01df85-ba82-4a3c-ad1a-e57bc066d593",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리 정보를 담고 있는 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 57,
        "depth": 1
      }
    },
    "9d99fa9b-b39e-43c8-8dba-0afe6bd0a4ca": {
      "id": "9d99fa9b-b39e-43c8-8dba-0afe6bd0a4ca",
      "value": [
        {
          "_id": "d37ba92e-372c-4c1b-8a91-50e8568ab532",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 55,
        "depth": 1
      }
    },
    "a52eb94c-d154-4945-b7cb-d63d6931c15d": {
      "id": "a52eb94c-d154-4945-b7cb-d63d6931c15d",
      "value": [
        {
          "_id": "48462941-6b4a-4405-84a2-a62785af66fd",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OauthLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "a5b9b889-8a1f-4cf6-8499-4df30cf5d37f": {
      "id": "a5b9b889-8a1f-4cf6-8499-4df30cf5d37f",
      "value": [
        {
          "_id": "def024a6-aebc-4be4-b879-370e5ab5dc13",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ModifiedFileInfo {\n\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n\n    public ModifiedFileInfo(String fileName, String sourceCode){\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "a9ccc82c-3ad5-4c41-88da-7a200938a7db": {
      "id": "a9ccc82c-3ad5-4c41-88da-7a200938a7db",
      "value": [
        {
          "_id": "26cf30ab-67fd-405e-83a5-c5d4925841ef",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "aad9b7c4-4f87-45c0-b256-66c4a50c3c1e": {
      "id": "aad9b7c4-4f87-45c0-b256-66c4a50c3c1e",
      "value": [
        {
          "_id": "85cdd1f8-3e32-42ca-89f0-996783dd3eac",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOAuth 로그인을 처리하는 창을 생성하고, 사용자가 제공자에 로그인하고 인증을 받을 수 있도록 도와준다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 30,
        "depth": 1
      }
    },
    "ab991fe5-e215-42ec-ae97-594d0374fb49": {
      "id": "ab991fe5-e215-42ec-ae97-594d0374fb49",
      "value": [
        {
          "_id": "1f863541-65fc-4c2b-85b3-bbaadfba64fc",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class RequestDto {\n    @JsonProperty\n    private String sourceApplication;\n    @JsonProperty\n    private String accessToken;\n    @JsonProperty\n    private String dataType;\n    @JsonProperty\n    private Long connectedFileId;\n    @JsonProperty\n    private String timestamp;\n    @JsonProperty\n    private Object content;\n\n    private static final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\");\n\n    public void setSourceApplication(String sourceApplication) {\n        this.sourceApplication = sourceApplication;\n    }\n\n    public void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public void setDataType(String dataType) {\n        this.dataType = dataType;\n    }\n\n    public void setConnectedFileId(Long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n\n    public void setContent(Object content) {\n        this.content = content;\n    }\n\n    public void setTimestamp(LocalDateTime timestamp) {\n        this.timestamp = timestamp.format(formatter);\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 62,
        "depth": 1
      }
    },
    "b2175044-41e6-4959-b4ac-a8ccd98a312a": {
      "id": "b2175044-41e6-4959-b4ac-a8ccd98a312a",
      "value": [
        {
          "_id": "673d6978-2cf4-4293-a8e9-8eb41ad018a4",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nModifiedFileInfo 클래스는 파일 이름과 소스 코드를 포함하는 객체를 나타낸다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "ba06efdd-9b8f-430c-8735-dabcfc29a6b3": {
      "id": "ba06efdd-9b8f-430c-8735-dabcfc29a6b3",
      "value": [
        {
          "_id": "691e841d-6489-47ef-9f76-70803727df51",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n로그인을 위한 메인 화면을 구성하고 카카오, 네이버, 구글 로그인 버튼을 제공하는 프로그램이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 66,
        "depth": 1
      }
    },
    "bbeea328-58fe-41d4-b23a-24c96e0a72f0": {
      "id": "bbeea328-58fe-41d4-b23a-24c96e0a72f0",
      "value": [
        {
          "_id": "9dde6e63-841c-4f10-b790-ab3391984e63",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19 23:49:33,617 [    625]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.intellij.ae.database.core.baseEvents.fus.AddStatisticsEventLogListenerTemporary, plugin=com.jetbrains.ae.database)\r\n2024-05-19 23:49:33,617 [    625]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.jetbrains.rdserver.statistics.BackendStatisticsManager, plugin=com.jetbrains.codeWithMe)\r\n2024-05-19 23:49:33,818 [    826]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.search.FilenameIndex initializer requests com.intellij.ide.plugins.PluginUtil instance\r\n2024-05-19 23:49:34,542 [   1550]   WARN - #c.i.s.ComponentManagerImpl - org.zmlx.hg4idea.provider.HgChangeProvider initializer requests com.intellij.openapi.vcs.FileStatusFactory instance\r\n2024-05-19 23:49:36,273 [   3281]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.codeInsight.daemon.LineMarkerProviders initializer requests com.intellij.codeInsight.daemon.LineMarkerProviders instance\r\n2024-05-19 23:49:37,273 [   4281]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.LanguageSubstitutors initializer requests com.intellij.psi.LanguageSubstitutors instance\r\n2024-05-19 23:49:39,108 [   6116]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable initializer requests com.intellij.util.LocaleSensitiveApplicationCacheService instance\r\n2024-05-19 23:49:40,161 [   7169]   WARN - #c.i.u.j.JBCefApp - JCEF is manually disabled in headless env via 'ide.browser.jcef.headless.enabled=false'\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 84,
        "depth": 0
      }
    },
    "bf033c59-b4f8-4c34-ab8f-dfb5adbd49fd": {
      "id": "bf033c59-b4f8-4c34-ab8f-dfb5adbd49fd",
      "value": [
        {
          "_id": "a94af76e-6272-4b0d-ba9f-805d3ed56b18",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일과 폴더 트리 셀이 수정될 때 새로운 이름으로 수정할 수 있고, 수정된 내용을 서버에 반영하는 기능을 구현한 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 45,
        "depth": 1
      }
    },
    "c248f013-5d11-4f10-996d-89b2032792f6": {
      "id": "c248f013-5d11-4f10-996d-89b2032792f6",
      "value": [
        {
          "_id": "92d2c358-959b-4e3e-b5fb-5a55eef3111f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nBuild 결과 정보를 담고 있는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 24,
        "depth": 1
      }
    },
    "c3b67a67-a78b-4b4c-b1f6-eb90496b52ef": {
      "id": "c3b67a67-a78b-4b4c-b1f6-eb90496b52ef",
      "value": [
        {
          "_id": "d2763d63-64dc-422c-80cb-0f75d52697dc",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.project.Project;\n\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\n\npublic class ProjectProvider {\n\n    private Queue<Project> projects = new ArrayDeque<>();\n\n    private ProjectProvider() {}\n\n    private static class ProjectProviderHolder {\n        private static final ProjectProvider INSTANCE = new ProjectProvider();\n    }\n\n    public static ProjectProvider getInstance() {\n        return ProjectProviderHolder.INSTANCE;\n    }\n\n    public Queue<Project> getProjects() {\n        return projects;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "c3e3cf18-8fbe-41ef-a0d3-1b521873f5bd": {
      "id": "c3e3cf18-8fbe-41ef-a0d3-1b521873f5bd",
      "value": [
        {
          "_id": "81a4a5e0-b6e7-42d6-b351-be23e3be5a97",
          "type": "bulleted-list",
          "children": [
            {
              "text": "AlertHelper.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 79,
        "depth": 1
      }
    },
    "c4c49aaf-fe0d-4698-8f33-6c78cdc5e7f5": {
      "id": "c4c49aaf-fe0d-4698-8f33-6c78cdc5e7f5",
      "value": [
        {
          "_id": "fd2911d3-98c5-4a31-8f2a-ce44846bfa7e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OpenOdodocPlugin.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 34,
        "depth": 1
      }
    },
    "c4d092ac-b4ba-411c-acd2-83e2b0788fba": {
      "id": "c4d092ac-b4ba-411c-acd2-83e2b0788fba",
      "value": [
        {
          "_id": "02a4ded4-2c0d-4220-b8b7-835bb0f7b8fd",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\n\npublic class BuildResultInfo {\n\n    private boolean isSuccess;\n    private long connectedFileId;\n    private String contents;\n    private String timeStamp;\n    private List<ModifiedFileInfo> modifiedFiles;\n\n    public String getTimeStamp() {\n        return timeStamp;\n    }\n\n    public void setTimeStamp(String timeStamp) {\n        this.timeStamp = timeStamp;\n    }\n\n    public String getContents() {\n        return contents;\n    }\n\n    public void setContents(String contents) {\n        this.contents = contents;\n    }\n\n    public boolean isSuccess() {\n        return isSuccess;\n    }\n\n    public void setSuccess(boolean success) {\n        isSuccess = success;\n    }\n\n    public long getConnectedFileId() {\n        return connectedFileId;\n    }\n\n    public void setConnectedFileId(long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n    public List<ModifiedFileInfo> getModifiedFiles() {\n        return modifiedFiles;\n    }\n\n    public void setModifiedFiles(List<ModifiedFileInfo> modifiedFiles) {\n        this.modifiedFiles = modifiedFiles;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "ca4c25c6-8889-47ad-8e9b-1403a9ee9389": {
      "id": "ca4c25c6-8889-47ad-8e9b-1403a9ee9389",
      "value": [
        {
          "_id": "7fc48055-32cb-4da8-8351-69a940a20a84",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n필수 서비스에만 preload=true를 사용해야 합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 85,
        "depth": 0
      }
    },
    "cf6d3792-822d-4c04-be2c-b223a967ad9c": {
      "id": "cf6d3792-822d-4c04-be2c-b223a967ad9c",
      "value": [
        {
          "_id": "a31eb341-65bb-401c-8d9e-1c2a381dde02",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nWebSocket을 통해 서버와 통신하는 BuildResultSender 클래스를 생성하고, 서버 연결 상태를 확인하며 메시지를 전송하는 기능을 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 60,
        "depth": 1
      }
    },
    "d49bcd52-2e30-4480-8f5e-63a2d940fbfb": {
      "id": "d49bcd52-2e30-4480-8f5e-63a2d940fbfb",
      "value": [
        {
          "_id": "96b99493-0601-4a6b-bf65-c19d3c85a580",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifyRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "d650f8ad-f296-4e54-b85e-2dd61c744141": {
      "id": "d650f8ad-f296-4e54-b85e-2dd61c744141",
      "value": [
        {
          "_id": "f5179bd8-9ebc-42ac-874d-a61bc30b8760",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DisposableService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 67,
        "depth": 1
      }
    },
    "d89fc5d0-c9c6-440d-b7bc-ff81fbef7e0a": {
      "id": "d89fc5d0-c9c6-440d-b7bc-ff81fbef7e0a",
      "value": [
        {
          "_id": "3567bd52-4388-43eb-baa3-e1dbf24b8bd3",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 86,
        "depth": 0
      }
    },
    "ddcc95df-d143-4628-b8da-176a35d3053d": {
      "id": "ddcc95df-d143-4628-b8da-176a35d3053d",
      "value": [
        {
          "_id": "bc58c111-3b6a-4924-96e1-b22c23e551a9",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.manager;\n\npublic class TokenManager {\n\n    private String accessToken;\n    private String refreshToken;\n\n    private TokenManager() {}\n\n    private static class TokenManagerHolder {\n        private static final TokenManager INSTANCE = new TokenManager();\n    }\n\n    public static TokenManager getInstance() {\n        return TokenManagerHolder.INSTANCE;\n    }\n\n    public synchronized String getAccessToken() {\n        return accessToken;\n    }\n\n    public synchronized String getRefreshToken() {\n        return refreshToken;\n    }\n\n    public synchronized void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public synchronized void setRefreshToken(String refreshToken) {\n        this.refreshToken = refreshToken;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 77,
        "depth": 1
      }
    },
    "e14ebf4e-7045-47d2-b3e2-c759b34283bd": {
      "id": "e14ebf4e-7045-47d2-b3e2-c759b34283bd",
      "value": [
        {
          "_id": "083bcafc-d7e1-4c94-a428-093a66bb512f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryInfoManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 73,
        "depth": 1
      }
    },
    "e1b592a5-0a61-47e4-a059-60abfd913f68": {
      "id": "e1b592a5-0a61-47e4-a059-60abfd913f68",
      "value": [
        {
          "_id": "fa37b8ba-fff6-4ef8-a91e-15927cf84bb7",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DirectoryDto {\n\n    private Long id = -1L;\n    private String name = \"\";\n    private String type = \"\";\n    private List<DirectoryDto> children = new ArrayList<>();\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    public List<DirectoryDto> getChildren() {\n        return children;\n    }\n\n    public void setChildren(List<DirectoryDto> children) {\n        this.children = children;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 56,
        "depth": 1
      }
    },
    "e90b608a-7e6f-40c4-959a-740d5668478c": {
      "id": "e90b608a-7e6f-40c4-959a-740d5668478c",
      "value": [
        {
          "_id": "a8bd8010-f459-4747-a324-17daae98eeb4",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class DirectoryInfoManager {\n\n    private long rootId;\n    private String title;\n\n    private DirectoryInfoManager() {}\n\n    private static class DirectoryInfoManagerHolder {\n        private static final DirectoryInfoManager INSTANCE = new DirectoryInfoManager();\n    }\n\n    public static DirectoryInfoManager getInstance() {\n        return DirectoryInfoManagerHolder.INSTANCE;\n    }\n\n    public synchronized long getRootId() {\n        return rootId;\n    }\n    public synchronized String getTitle() {\n        return title;\n    }\n\n    public synchronized void setRootId(long rootId) {\n        this.rootId = rootId;\n    }\n\n    public synchronized void setTitle(String title) {\n        this.title = title;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 74,
        "depth": 1
      }
    },
    "e95a6d15-851f-4e04-8a94-ca229784123f": {
      "id": "e95a6d15-851f-4e04-8a94-ca229784123f",
      "value": [
        {
          "_id": "c3653bfa-1ecd-4cbb-94c4-c4415a8d1e15",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n수정 요청 DTO는 id와 이름을 가지고 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "edef4083-f0ad-4d97-a0f3-c7bac21d5b74": {
      "id": "edef4083-f0ad-4d97-a0f3-c7bac21d5b74",
      "value": [
        {
          "_id": "8a267f89-a36b-4cc0-925b-301a582b7d6d",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender.alert;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.stage.Stage;\n\npublic class WebSocketReConnectAlert {\n\n    public static Alert makeAlert() {\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setTitle(\" Ododoc\");\n        alert.setHeaderText(\"서버 연결 실패\");\n        alert.setContentText(\"Ododoc 서비스를 이용하려면 서버와의 연결이 필요합니다.\\n다시 시도하시겠습니까?\");\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(\"/image/button/icon.png\")));\n        ImageView warningIcon = new ImageView(new Image(WebSocketReConnectAlert.class.getResourceAsStream(\"/image/button/warning.png\")));\n        alert.setGraphic(warningIcon);\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 17,
        "depth": 1
      }
    },
    "ee76e5bc-ebca-46d4-a830-c0bd2f40ce86": {
      "id": "ee76e5bc-ebca-46d4-a830-c0bd2f40ce86",
      "value": [
        {
          "_id": "1e9a40b1-2efe-4a56-850e-d1edff07a352",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리와 파일을 생성하고 관리할 수 있는 Ododoc 프로그램의 GUI 구현.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "f0985d97-64c3-4677-ac9f-7fb436d5d607": {
      "id": "f0985d97-64c3-4677-ac9f-7fb436d5d607",
      "value": [
        {
          "_id": "08fd9c49-5c27-4fd0-8fe1-333e2e3291a3",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.ModifyRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ContextMenu;\nimport javafx.scene.control.TextField;\nimport javafx.scene.control.TreeCell;\nimport javafx.scene.input.KeyCode;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\n\nimport java.util.Map;\n\npublic class FileAndFolderTreeCell extends TreeCell<FileInfo> {\n\n    private TextField textField;\n    private Runnable refreshCallback;\n    private ContextMenu folderContextMenu;\n    private ContextMenu fileContextMenu;\n    private Stage stage;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n\n    public FileAndFolderTreeCell(ContextMenu folderContextMenu, ContextMenu fileContextMenu, Stage stage,Runnable refreshCallback) {\n        this.fileContextMenu = fileContextMenu;\n        this.folderContextMenu = folderContextMenu;\n        this.stage = stage;\n        this.refreshCallback = refreshCallback;\n    }\n\n    @Override\n    protected void updateItem(FileInfo fileInfo, boolean empty) {\n        super.updateItem(fileInfo, empty);\n        if(empty || fileInfo == null) {\n            setText(null);\n            setGraphic(null);\n            setContextMenu(null);\n        } else{\n            if(isEditing()){\n                if(textField != null){\n                    textField.setText(getString());\n                }\n                setText(null);\n                setGraphic(textField);\n            }else{\n                setText(fileInfo.toString());\n                setGraphic(null);\n\n                if(fileInfo.getType().equals(\"FOLDER\")){\n                    setContextMenu(folderContextMenu);\n                }\n                else if (fileInfo.getType().equals(\"FILE\")){\n                    setContextMenu(fileContextMenu);\n                }\n            }\n        }\n    }\n\n    @Override\n    public void startEdit() {\n        super.startEdit();\n        if(textField == null){\n            createTextField();\n        }\n        setGraphic(textField);\n        setText(null);\n        textField.setText(getItem().getName());\n        textField.selectAll();\n        textField.requestFocus();\n    }\n\n    @Override\n    public void commitEdit(FileInfo fileInfo) {\n        super.commitEdit(fileInfo);\n        modifyFolderOrFile(fileInfo.getName());\n    }\n\n    @Override\n    public void cancelEdit() {\n        super.cancelEdit();\n        setText(getItem().getName());\n        setGraphic(null);\n    }\n\n    private void createTextField() {\n        textField = new TextField(getString());\n        textField.setOnKeyReleased(event -> {\n            if (event.getCode() == KeyCode.ENTER) {\n                commitEdit(new FileInfo(getItem().getId(), textField.getText(), getItem().getType()));\n            } else if (event.getCode() == KeyCode.ESCAPE) {\n                cancelEdit();\n            }\n        });\n    }\n\n    private void modifyFolderOrFile(String name) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        ModifyRequestDto createRequestDto = new ModifyRequestDto(getItem().getId(), name);\n\n        webClient.put()\n                .uri(\"/edit\")\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        if (refreshCallback != null) {\n                            refreshCallback.run();\n                        }\n                    }\n                    else if (result.getStatus() == 401){\n                        refreshAccessToken();\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                    else {\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                }, error ->{\n                    showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                    refreshCallback.run();\n                });\n    }\n    private void showAlert(String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"디렉토리\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private String getString() {\n        return getItem() == null ? \"\" : getItem().toString();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 44,
        "depth": 1
      }
    },
    "f37c402f-89fd-49b7-8f60-22ea183498f2": {
      "id": "f37c402f-89fd-49b7-8f60-22ea183498f2",
      "value": [
        {
          "_id": "984735ab-af6c-4ec6-a84e-1bd8e91a8c0c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CreateRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 49,
        "depth": 1
      }
    },
    "f454287b-5ffa-487c-82b4-e8cfc404d6a5": {
      "id": "f454287b-5ffa-487c-82b4-e8cfc404d6a5",
      "value": [
        {
          "_id": "877bf376-412f-41e4-8b6d-4c77b3b71dde",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 파일 상태를 추적하고 해시 값을 저장하는 프로젝트 트래커 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 48,
        "depth": 1
      }
    },
    "f6432e13-75ce-4352-a35c-7c2e95812f49": {
      "id": "f6432e13-75ce-4352-a35c-7c2e95812f49",
      "value": [
        {
          "_id": "317dc49d-fdf6-46c8-9b05-de2ca6ac1aff",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.Disposable;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.components.ServiceManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.stream.Collectors;\n\npublic class DisposableService implements Disposable {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n\n    public DisposableService(@NotNull Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void dispose() {\n        System.out.println(\"종료: \" + project.getName());\n\n        CompletableFuture.runAsync(() -> {\n            getProjectFileList();\n            processProjectFiles();\n        }).exceptionally(ex -> {\n            ex.printStackTrace();\n            return null;\n        });\n    }\n\n    public static DisposableService getInstance(@NotNull Project project) {\n        return ServiceManager.getService(project, DisposableService.class);\n    }\n\n    private void getProjectFileList() {\n        GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n        Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n        PsiManager psiManager = PsiManager.getInstance(project);\n\n        psiFiles = files.stream()\n                .map(psiManager::findFile)\n                .collect(Collectors.toList());\n    }\n\n    private void processProjectFiles() {\n        ApplicationManager.getApplication().invokeLater(() -> {\n            if (project.isDisposed()) {\n                return;\n            }\n\n            ProjectTracker projectTracker = ProjectTracker.getInstance();\n            Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n            Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n\n            String allBeforeProjectStatus = \"\";\n            String allCurrentProjectStatus = \"\";\n\n            for (PsiFile file : psiFiles) {\n                if (beforeProjectStatus.containsKey(file.getName())) {\n                    System.out.println(\"삭제: \" + file.getName());\n                    beforeProjectStatus.remove(file.getName());\n                } else {\n                    allBeforeProjectStatus += getEncrypt(file.getName());\n                }\n\n                if (currentProjectStatus.containsKey(file.getName())) {\n                    currentProjectStatus.remove(file.getName());\n                } else {\n                    allCurrentProjectStatus += getEncrypt(file.getName());\n                }\n            }\n\n            allBeforeProjectStatus = getEncrypt(allBeforeProjectStatus);\n            allCurrentProjectStatus = getEncrypt(allCurrentProjectStatus);\n\n//            projectTracker.setAllBeforeProjectStatus(allBeforeProjectStatus);\n//            projectTracker.setAllCurrentProjectStatus(allCurrentProjectStatus);\n        });\n    }\n\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for (byte b : hashCode) {\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n        }\n\n        return result;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 68,
        "depth": 1
      }
    },
    "f810797c-b339-4791-b835-66d81ef7fd20": {
      "id": "f810797c-b339-4791-b835-66d81ef7fd20",
      "value": [
        {
          "_id": "c26fa7a3-b311-4e3f-8ad0-f5f581f5e30d",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class ModifyRequestDto {\n\n    private Long id;\n    private String name;\n\n    public ModifyRequestDto(Long id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "f9236922-874a-4546-9cc3-3cd2277aa2f6": {
      "id": "f9236922-874a-4546-9cc3-3cd2277aa2f6",
      "value": [
        {
          "_id": "5cdc76c0-9577-468d-bb96-a9f89485b707",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class CreateRequestDto {\n\n    private Long parentId;\n    private String name;\n    private String type;\n\n    public CreateRequestDto(Long parentId, String name, String type) {\n        this.parentId = parentId;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getParentId() {\n        return parentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getType() {\n        return type;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 50,
        "depth": 1
      }
    },
    "fbfc6d0d-9f4e-4817-ac89-8183bdbf4202": {
      "id": "fbfc6d0d-9f4e-4817-ac89-8183bdbf4202",
      "value": [
        {
          "_id": "fdc8218f-91f8-4996-bc9e-9fba944b9a74",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.intellij.execution.ExecutionListener;\nimport com.intellij.execution.process.ProcessEvent;\nimport com.intellij.execution.process.ProcessHandler;\nimport com.intellij.execution.process.ProcessListener;\nimport com.intellij.execution.process.ProcessOutputTypes;\nimport com.intellij.execution.runners.ExecutionEnvironment;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.diagnostic.Logger;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.util.Key;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.tracker.dto.BuildResultInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ErrorFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ModifiedFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.RequestDto;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class CodeListener implements ExecutionListener {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n    private List<ErrorFileInfo> errorFiles = new ArrayList<>();\n    private Map<String, ProjectInfo> currentProjectInfo = new HashMap<>();\n    private boolean capturingError;\n    private boolean errorFlag;\n\n    private static final Logger LOG = Logger.getInstance(CodeListener.class);\n    private static final Pattern ANSI_ESCAPE_PATTERN = Pattern.compile(\"\\u001B\\\\[[;\\\\d]*m\");\n\n    public CodeListener(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void processStarted(@NotNull String executorId, @NotNull ExecutionEnvironment env, @NotNull ProcessHandler handler) {\n        CompletableFuture.runAsync(() -> getCurrentProject())\n                .thenRun(this::initializeProjectTracker)\n                .thenRun(() -> {\n                    // 파일 연동이 되어있다면\n                    if (ConnectedFileManager.getInstance().getDirectoryId() != 0L) {\n                        startSignal();\n                    } else {\n                        Platform.runLater(() -> {\n                            Alert alert = AlertHelper.makeAlert(\n                                    Alert.AlertType.WARNING,\n                                    \" Ododoc\",\n                                    \"파일 연동 오류\",\n                                    \"파일이 연동되지 않았습니다.\\n해당 결과는 새로 생성된 파일에 기록됩니다.\",\n                                    \"/image/button/icon.png\"\n                            );\n                            alert.showAndWait();\n                        });\n                    }\n\n                    handler.addProcessListener(new OdodocProcessListener());\n                });\n    }\n\n    private void getCurrentProject() {\n        psiFiles = new ArrayList<>();\n        currentProjectInfo.clear();\n        ApplicationManager.getApplication().executeOnPooledThread(() -> {\n            ApplicationManager.getApplication().runReadAction(() -> {\n                GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n                Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n                PsiManager psiManager = PsiManager.getInstance(project);\n                psiFiles = files.stream()\n                        .map(psiManager::findFile)\n                        .collect(Collectors.toList());\n\n                psiFiles.forEach(file ->\n                        currentProjectInfo.put(file.getName(), new ProjectInfo(file, \"\", file.getText())));\n            });\n        });\n    }\n\n    private void initializeProjectTracker() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.currentHashStatus(project);\n    }\n\n    private void startSignal() {\n        RequestDto requestDto = new RequestDto();\n        requestDto.setSourceApplication(\"INTELLIJ\");\n        requestDto.setDataType(\"SIGNAL\");\n        requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n        requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n        requestDto.setTimestamp(LocalDateTime.now());\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            String output = objectMapper.writeValueAsString(requestDto);\n            BuildResultSender.sendMessage(output);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private List<ModifiedFileInfo> getModifiedFiles() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n\n        Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n        Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n        String allBeforeProjectStatus = projectTracker.getAllBeforeProjectStatus();\n        String allCurrentProjectStatus = projectTracker.getAllCurrentProjectStatus();\n\n        String before, current= \"\";\n        boolean isChange = false; // 변경된 파일이 있는지 확인\n        List<ModifiedFileInfo> modifiedFileInfoList = new ArrayList<>();\n\n        // 파일을 추가하거나 삭제하지 않은 경우\n        if(allBeforeProjectStatus.equals(allCurrentProjectStatus)){\n            for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n                before = entry.getValue().getHash();\n                current = currentProjectStatus.get(entry.getKey()).getHash();\n                // 바뀐 파일이라면 해당 파일\n                if(!before.equals(current)){\n                    isChange = true;\n                    PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                    addModifiedFile(modifiedFileInfoList, modifiedFile);\n                }\n            }\n        }\n\n        // 파일을 추가하거나 삭제한 경우\n        else{\n            int beforeSize = beforeProjectStatus.size();\n            int currentSize = currentProjectStatus.size();\n\n            // 추가한 경우\n            if(beforeSize <= currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : currentProjectStatus.entrySet()){\n\n                    // 추가된 파일이 아닐 경우\n                    if(beforeProjectStatus.containsKey(entry.getKey())){\n                        before = beforeProjectStatus.get(entry.getKey()).getHash();\n                        current = entry.getValue().getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = entry.getValue().getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 추가된 파일일 경우\n                    else{\n                        isChange = true;\n                        PsiFile modifiedFile = entry.getValue().getPsiFile();\n                        addModifiedFile(modifiedFileInfoList, modifiedFile);\n                    }\n\n                }\n            }\n            // 삭제한 경우\n            else if(beforeSize > currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n\n                    // 삭제된 파일이 아닐 경우\n                    if(currentProjectStatus.containsKey(entry.getKey())){\n                        before = entry.getValue().getHash();\n                        current = currentProjectStatus.get(entry.getKey()).getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 삭제된 파일일 경우\n                    else{\n                        isChange = true;\n                    }\n\n                }\n            }\n        }\n\n        // 변경된 파일이 있을 경우 현재 상태를 전 상태로 돌리기 (깊은 복사 )\n        if (isChange){\n            deepCopy(currentProjectStatus);\n        }\n\n        return modifiedFileInfoList;\n\n    }\n\n    private void addModifiedFile(List<ModifiedFileInfo> modifiedFileInfoList, PsiFile modifiedFile) {\n        String fileName = modifiedFile.getName();\n        String sourceCode = modifiedFile.getText();\n        modifiedFileInfoList.add(new ModifiedFileInfo(fileName, sourceCode));\n    }\n\n    private void deepCopy(Map<String, ProjectInfo> currentProjectStatus) {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.setBeforeProjectStatus(\n                currentProjectStatus.entrySet().stream()\n                        .collect(Collectors.toMap(Map.Entry::getKey, e -> {\n                            try {\n                                return (ProjectInfo) e.getValue().clone();\n                            } catch (CloneNotSupportedException ex) {\n                                throw new RuntimeException(ex);\n                            }\n                        }))\n        );\n    }\n\n    private class OdodocProcessListener implements ProcessListener {\n        StringBuilder allOutputLog = new StringBuilder();\n        StringBuilder errorLog = new StringBuilder();\n        StringBuilder stdOutLog = new StringBuilder();\n\n        @Override\n        public void processTerminated(@NotNull ProcessEvent event) {\n            RequestDto requestDto = new RequestDto();\n            BuildResultInfo buildResultInfo = new BuildResultInfo();\n\n            requestDto.setSourceApplication(\"INTELLIJ\");\n            requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n            requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n            requestDto.setTimestamp(LocalDateTime.now());\n\n            if (errorFlag) {\n                buildResultInfo.setDetails(errorLog.toString());\n                if (errorFiles.size() > 1) {\n                    buildResultInfo.setErrorFile(errorFiles.get(0));\n                }\n                buildResultInfo.setModifiedFiles(getModifiedFiles());\n\n                requestDto.setDataType(\"ERROR\");\n                requestDto.setContent(buildResultInfo);\n            } else {\n                buildResultInfo.setDetails(stdOutLog.toString());\n\n                List<ModifiedFileInfo> temp = getModifiedFiles();\n                buildResultInfo.setModifiedFiles(temp);\n\n                requestDto.setDataType(\"OUTPUT\");\n                requestDto.setContent(buildResultInfo);\n            }\n\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                String output = objectMapper.writeValueAsString(requestDto);\n                System.out.println(output);\n                BuildResultSender.sendMessage(output);\n            } catch (JsonProcessingException e) {\n                throw new RuntimeException(e);\n            }\n\n            allOutputLog.setLength(0);\n            errorLog.setLength(0);\n            stdOutLog.setLength(0);\n            errorFiles = new ArrayList<>();\n            errorFlag = false;\n            capturingError = false;\n        }\n\n        @Override\n        public void onTextAvailable(@NotNull ProcessEvent event, @NotNull Key outputType) {\n            String text = removeAnsiEscapeCodes(event.getText());\n\n            LOG.info(\"Output type: \" + outputType + \" Text: \" + text);\n            if (outputType.equals(ProcessOutputTypes.STDERR)) {\n                errorFlag = true;\n                errorLog.append(text);\n            }\n\n            else if (outputType.equals(ProcessOutputTypes.STDOUT)) {\n                if (text.contains(\"ERROR\")) {\n                    LOG.info(\"에러감지 !!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n                    errorFlag = true;\n                    errorLog.append(text);\n                    capturingError = true;\n                }\n                else if (capturingError) {\n                    if (text.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}\\\\+\\\\d{2}:\\\\d{2} .*\")) {\n                        capturingError = false;\n                    }\n                    else {\n                        errorLog.append(text);\n                        Pattern pattern = Pattern.compile(\"\\\\(([^)]+):(\\\\d+)\\\\)\");\n                        Matcher matcher = pattern.matcher(text);\n                        if (matcher.find()) {\n                            if (currentProjectInfo.containsKey(matcher.group(1))) {\n                                ProjectInfo projectInfo = currentProjectInfo.get(matcher.group(1));\n                                String fileName = projectInfo.getPsiFile().getName();\n                                String sourceCode = projectInfo.getSourceCode();\n                                int line = Integer.parseInt(matcher.group(2));\n                                errorFiles.add(new ErrorFileInfo(fileName, sourceCode, line));\n                            }\n                        }\n                    }\n                }\n                else {\n                    stdOutLog.append(text);\n                }\n            }\n            allOutputLog.append(text);\n        }\n    }\n\n    public static String removeAnsiEscapeCodes(String input) {\n        return ANSI_ESCAPE_PATTERN.matcher(input).replaceAll(\"\");\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 11,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a136afee7d1626031985e"
  },
  "directoryId": 341,
  "lastOrder": 86,
  "content": {
    "007e1c74-26c6-433b-ac34-b83a20774a08": {
      "id": "007e1c74-26c6-433b-ac34-b83a20774a08",
      "value": [
        {
          "_id": "6baf287e-2152-4081-be10-47c1a30b693f",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 18,
        "depth": 0
      }
    },
    "0157f114-081a-484d-aca8-c43cabcf6144": {
      "id": "0157f114-081a-484d-aca8-c43cabcf6144",
      "value": [
        {
          "_id": "486dcdcf-54ca-4997-bde7-3bd5f2accc6f",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 32,
        "depth": 0
      }
    },
    "01bff851-c477-481d-9c1a-5cc49c11e807": {
      "id": "01bff851-c477-481d-9c1a-5cc49c11e807",
      "value": [
        {
          "_id": "d514b316-87cc-4c9a-86ea-2312f72fca0e",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 81,
        "depth": 0
      }
    },
    "0d98e317-5c86-43ff-9fe7-0afb079724c0": {
      "id": "0d98e317-5c86-43ff-9fe7-0afb079724c0",
      "value": [
        {
          "_id": "6ee70675-e17b-4dbd-97d4-a526d4f966b8",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 26,
        "depth": 0
      }
    },
    "12c68eb0-d8ef-4d46-bcaf-6c5e8a11affb": {
      "id": "12c68eb0-d8ef-4d46-bcaf-6c5e8a11affb",
      "value": [
        {
          "_id": "e9b0892f-1380-4b54-954a-31835d3f928e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 60,
        "depth": 0
      }
    },
    "168a99f1-feeb-4796-8f46-8bd60a214a2f": {
      "id": "168a99f1-feeb-4796-8f46-8bd60a214a2f",
      "value": [
        {
          "_id": "2ab996c5-d4e5-4dfc-90b5-197bf66c817b",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 43,
        "depth": 0
      }
    },
    "188deeec-bfd7-4018-b0a2-9f3e67a32fcd": {
      "id": "188deeec-bfd7-4018-b0a2-9f3e67a32fcd",
      "value": [
        {
          "_id": "4f0fb387-6594-46ac-8901-0dba460def0f",
          "type": "code",
          "children": [
            {
              "text": "Issues checking in progress...\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 54,
        "depth": 0
      }
    },
    "1a2d1e0b-e794-4636-b6df-3ddb0f4a8217": {
      "id": "1a2d1e0b-e794-4636-b6df-3ddb0f4a8217",
      "value": [
        {
          "_id": "30dcd8c0-169c-4196-a015-9dc19df8211a",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 61,
        "depth": 0
      }
    },
    "259e6b3a-e7a3-459c-a391-cc2385ff5242": {
      "id": "259e6b3a-e7a3-459c-a391-cc2385ff5242",
      "value": [
        {
          "_id": "25419477-9e7c-4b82-bcf5-edd66146bc0b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 52,
        "depth": 0
      }
    },
    "2b9e35f1-c5f6-4b1c-bc10-090db675aae7": {
      "id": "2b9e35f1-c5f6-4b1c-bc10-090db675aae7",
      "value": [
        {
          "_id": "4cdb4776-20c0-4aab-9112-e887c23c58d4",
          "type": "code",
          "children": [
            {
              "text": "Issues checking in progress...\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 20,
        "depth": 0
      }
    },
    "2bd559e0-3205-401a-ae8d-9bd82df8a769": {
      "id": "2bd559e0-3205-401a-ae8d-9bd82df8a769",
      "value": [
        {
          "_id": "6c456ed6-ef41-43e6-aa9e-2d291a0f24ce",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 70,
        "depth": 0
      }
    },
    "2c194c25-374b-485d-ba70-e5dfd37aab45": {
      "id": "2c194c25-374b-485d-ba70-e5dfd37aab45",
      "value": [
        {
          "_id": "61c91cae-38b2-4041-95e4-f311e0eb17e0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 28,
        "depth": 0
      }
    },
    "2cc81af0-5334-4d51-bbf7-3657a2302a77": {
      "id": "2cc81af0-5334-4d51-bbf7-3657a2302a77",
      "value": [
        {
          "_id": "b2db313f-3dfb-4e56-81fa-7f0b34534a67",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n'user.ts 파일에서 Cookies 변수가 사용되지 않고 정의만 되어 있는 경고가 eslint에 의해 발생하였다.'",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 79,
        "depth": 0
      }
    },
    "363dd4fc-5d7f-413b-a74b-a7aa9767a951": {
      "id": "363dd4fc-5d7f-413b-a74b-a7aa9767a951",
      "value": [
        {
          "_id": "4f91d466-9cd6-4639-be18-efbd272c9ae2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n진행 중인 문제들이 확인되고 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 56,
        "depth": 0
      }
    },
    "3c4a8a6e-e20f-4c4b-bdc6-58f42e7ebb66": {
      "id": "3c4a8a6e-e20f-4c4b-bdc6-58f42e7ebb66",
      "value": [
        {
          "_id": "41d05942-df02-4d48-9eb4-9412855d2931",
          "type": "code",
          "children": [
            {
              "text": "import api from '../instances/api';\r\nimport Cookies from 'js-cookie';\r\nimport { useCallback } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\n\r\n// 인가 코드 백엔드로 전송\r\nexport const useSendCodeToBackend = () => {\r\n    const { dispatch } = useAuth();\r\n\r\n    const sendCodeToBackend = useCallback(async(code: string, url: string, provider: string) => {\r\n        try {\r\n            const response = await api.post(`/oauth2/authorization/${provider}`, {\r\n                code: code,\r\n                url: url\r\n            });\r\n            const { accessToken, refreshToken, rootId, title, type } = response.data.data;\r\n            // 상태 업데이트\r\n            dispatch({ type: 'SET_AUTH_DETAILS', payload: { accessToken, refreshToken, rootId, title, type } });\r\n            localStorage.setItem('authDetails', JSON.stringify({ accessToken, refreshToken, rootId, title, type }))\r\n            // Cookies.set('refreshToken', refreshToken, { secure: true, sameSite: 'strict' });\r\n        } catch (error) {\r\n            console.error('Error sending authorization code:', error);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return sendCodeToBackend;\r\n};\r\n\r\n// 로그아웃\r\nexport const useLogout = () => {\r\n    const { dispatch } = useAuth();\r\n\r\n    const logout = useCallback(async () => {\r\n        try {\r\n            await api.get('/oauth2/logout');\r\n            dispatch({ type: 'LOGOUT' });\r\n            localStorage.removeItem('authDetails');\r\n            localStorage.removeItem('directoryData')\r\n        } catch (error) {\r\n            console.error('Error during logout:', error);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return logout;\r\n};",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 85,
        "depth": 1
      }
    },
    "3d67d86e-ef92-44f4-95b4-3b2000bde1ed": {
      "id": "3d67d86e-ef92-44f4-95b4-3b2000bde1ed",
      "value": [
        {
          "_id": "3c212aa0-4b34-4edc-b8e7-415881286cd8",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 75,
        "depth": 0
      }
    },
    "3edb0be8-de17-45b4-a796-582fead616f2": {
      "id": "3edb0be8-de17-45b4-a796-582fead616f2",
      "value": [
        {
          "_id": "ab55b404-4003-4e37-bbcf-4c746707fc1c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "47000a5a-b810-42a6-890e-81fea48421a0": {
      "id": "47000a5a-b810-42a6-890e-81fea48421a0",
      "value": [
        {
          "_id": "9d7f7f5c-506a-4d5e-97df-da74908a8909",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n경고와 함께 컴파일되었습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 69,
        "depth": 0
      }
    },
    "50cbfa85-ed71-43e0-afdf-ef276276c143": {
      "id": "50cbfa85-ed71-43e0-afdf-ef276276c143",
      "value": [
        {
          "_id": "d7f7a63e-12a1-407b-ba54-64b199bc32dc",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 45,
        "depth": 0
      }
    },
    "5e8ced90-d663-4409-966b-894914404260": {
      "id": "5e8ced90-d663-4409-966b-894914404260",
      "value": [
        {
          "_id": "df676cdd-a2f6-4f96-9839-22a29334f2c9",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n개발 서버 시작 중입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 38,
        "depth": 0
      }
    },
    "5f8e76b0-9912-4587-a618-a9bab800b5b8": {
      "id": "5f8e76b0-9912-4587-a618-a9bab800b5b8",
      "value": [
        {
          "_id": "d02e6464-3472-4b62-a3f2-71900dafa038",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nuser.ts 파일의 Cookies 변수가 사용되지 않고 정의만 되어 있는 경고가 eslint에서 발생했습니다.webpack은 1개의 경고와 함께 컴파일되었습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 51,
        "depth": 0
      }
    },
    "61aef7c2-ee01-4df3-a828-42d5e31d9e51": {
      "id": "61aef7c2-ee01-4df3-a828-42d5e31d9e51",
      "value": [
        {
          "_id": "86f673aa-58f6-400d-82ea-121fa4311f6c",
          "type": "code",
          "children": [
            {
              "text": "Files successfully emitted, waiting for typecheck results...\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "64b06df8-cdf4-4024-aa7d-3b80a4caacd8": {
      "id": "64b06df8-cdf4-4024-aa7d-3b80a4caacd8",
      "value": [
        {
          "_id": "d25b00b6-aec2-4f52-9cc2-f899f37e44de",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 55,
        "depth": 0
      }
    },
    "696302c7-4943-43a2-bc07-08997a36083e": {
      "id": "696302c7-4943-43a2-bc07-08997a36083e",
      "value": [
        {
          "_id": "18fba106-eace-4d9d-83f3-761cdc8157d4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 16,
        "depth": 0
      }
    },
    "6dbc0284-b54b-4e08-9d6d-d0e213654338": {
      "id": "6dbc0284-b54b-4e08-9d6d-d0e213654338",
      "value": [
        {
          "_id": "776e6c97-bef8-4845-805b-7fc26c3713c1",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 53,
        "depth": 0
      }
    },
    "7022dd76-c1c3-4c4c-8954-05f3d60f38c9": {
      "id": "7022dd76-c1c3-4c4c-8954-05f3d60f38c9",
      "value": [
        {
          "_id": "ff73fb9b-6a41-4bdb-a92e-24f2f83fdfaa",
          "type": "code",
          "children": [
            {
              "text": "ERROR in src/api/service/user.ts:11:76\r\r\nTS7006: Parameter 'provider' implicitly has an 'any' type.\r\r\n  \u001b[0m \u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m { dispatch } \u001b[33m=\u001b[39m useAuth()\u001b[33m;\u001b[39m\r\r\n   \u001b[90m 10 |\u001b[39m\r\r\n  \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mconst\u001b[39m sendCodeToBackend \u001b[33m=\u001b[39m useCallback(\u001b[36masync\u001b[39m(code\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m url\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m provider) \u001b[33m=>\u001b[39m {\r\r\n   \u001b[90m    |\u001b[39m                                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\r\r\n   \u001b[90m 12 |\u001b[39m         \u001b[36mtry\u001b[39m {\r\r\n   \u001b[90m 13 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m api\u001b[33m.\u001b[39mpost(\u001b[32m`/oauth2/authorization/${provider}`\u001b[39m\u001b[33m,\u001b[39m {\r\r\n   \u001b[90m 14 |\u001b[39m                 code\u001b[33m:\u001b[39m code\u001b[33m,\u001b[39m\u001b[0m\r\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 59,
        "depth": 0
      }
    },
    "7669fafb-a875-4bc7-9217-950ff35e3876": {
      "id": "7669fafb-a875-4bc7-9217-950ff35e3876",
      "value": [
        {
          "_id": "8c49c267-f6f4-4eff-9574-8c1134085da5",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 82,
        "depth": 0
      }
    },
    "769b564b-254e-4a87-81f7-4da82f4c29ba": {
      "id": "769b564b-254e-4a87-81f7-4da82f4c29ba",
      "value": [
        {
          "_id": "b76552af-8b6a-4354-819d-18ac145fc1c6",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 29,
        "depth": 0
      }
    },
    "77436db6-d8ee-40e8-b456-d10fdee071bf": {
      "id": "77436db6-d8ee-40e8-b456-d10fdee071bf",
      "value": [
        {
          "_id": "ceb8e82b-c32f-4a5e-8c37-dcfa9aaad99c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 47,
        "depth": 0
      }
    },
    "79bd42d6-de5b-429f-9bd0-f98223c2507f": {
      "id": "79bd42d6-de5b-429f-9bd0-f98223c2507f",
      "value": [
        {
          "_id": "2892b263-a68a-4996-81a3-7056c4262250",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 전 c:\\Users\\SSAFY\\Desktop\\jae2\\ododoc\\frontend\\fe_repo\\src\\api\\service\\user.ts",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 82,
        "depth": 1
      }
    },
    "7defd0ac-1c15-49dd-8355-2d87a48233fc": {
      "id": "7defd0ac-1c15-49dd-8355-2d87a48233fc",
      "value": [
        {
          "_id": "54135fb7-011b-4f31-9574-e0fedd50f2f0",
          "type": "code",
          "children": [
            {
              "text": "\u001b[0;33mOne of your dependencies, babel-preset-react-app, is importing the\r\n\"@babel/plugin-proposal-private-property-in-object\" package without\r\ndeclaring it in its dependencies. This is currently working because\r\n\"@babel/plugin-proposal-private-property-in-object\" is already in your\r\nnode_modules folder for unrelated reasons, but it \u001b[1mmay break at any time\u001b[0;33m.\r\n\r\nbabel-preset-react-app is part of the create-react-app project, \u001b[1mwhich\r\nis not maintianed anymore\u001b[0;33m. It is thus unlikely that this bug will\r\never be fixed. Add \"@babel/plugin-proposal-private-property-in-object\" to\r\nyour devDependencies to work around this error. This will make this message\r\ngo away.\u001b[0m\r\n  \r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 41,
        "depth": 0
      }
    },
    "818ecd61-5f14-4c94-a093-0a7cd8104a1c": {
      "id": "818ecd61-5f14-4c94-a093-0a7cd8104a1c",
      "value": [
        {
          "_id": "5d857e02-ff1a-40bc-868f-ef32e19c0328",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "81e5fb03-81cd-422a-a2ad-a1195e9f8741": {
      "id": "81e5fb03-81cd-422a-a2ad-a1195e9f8741",
      "value": [
        {
          "_id": "8922683b-5584-4317-b9ff-539670656e7f",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 19,
        "depth": 0
      }
    },
    "85c7b37f-7a5c-415e-9bfc-e2efdc5f3523": {
      "id": "85c7b37f-7a5c-415e-9bfc-e2efdc5f3523",
      "value": [
        {
          "_id": "b26ac3d6-18aa-4ec8-b919-40deb20ab1dc",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 58,
        "depth": 0
      }
    },
    "8c8adfa9-02ae-4501-b1a2-68ac3bcfc4a6": {
      "id": "8c8adfa9-02ae-4501-b1a2-68ac3bcfc4a6",
      "value": [
        {
          "_id": "bfb7fb47-dc83-41d7-b2f4-f4cfa8e62101",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "920bc032-9c94-44a4-aca0-149e7b893e32": {
      "id": "920bc032-9c94-44a4-aca0-149e7b893e32",
      "value": [
        {
          "_id": "fe666193-fc2a-41ed-8ac8-6a3577d1de9d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 21,
        "depth": 0
      }
    },
    "92731bbe-325a-41dd-8617-a61122f639c8": {
      "id": "92731bbe-325a-41dd-8617-a61122f639c8",
      "value": [
        {
          "_id": "a135dcdc-61f8-4eff-b93e-3387be4504f7",
          "type": "code",
          "children": [
            {
              "text": "Compiling...\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 62,
        "depth": 0
      }
    },
    "9c225ef5-9819-4037-8d18-de87e6c30aad": {
      "id": "9c225ef5-9819-4037-8d18-de87e6c30aad",
      "value": [
        {
          "_id": "4a048c54-abbf-4e18-b94c-db36663f8af1",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 40,
        "depth": 0
      }
    },
    "a0fffd8d-ebcc-4336-a719-36fced24d950": {
      "id": "a0fffd8d-ebcc-4336-a719-36fced24d950",
      "value": [
        {
          "_id": "d9e55eb0-0450-49ee-9eb4-1b9ffba5ad8c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 50,
        "depth": 0
      }
    },
    "a529dc82-cce7-4e9a-a441-5a9165207e8b": {
      "id": "a529dc82-cce7-4e9a-a441-5a9165207e8b",
      "value": [
        {
          "_id": "960a2f2a-c806-4792-a5cc-98f5fbc8cd88",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nfe_repo 앱을 시작한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 27,
        "depth": 0
      }
    },
    "a913cca8-8188-4185-a71d-4b00203048dc": {
      "id": "a913cca8-8188-4185-a71d-4b00203048dc",
      "value": [
        {
          "_id": "a7a9495f-3e82-414a-8bd3-47da5d16a855",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 68,
        "depth": 0
      }
    },
    "ac7f334e-36cb-49da-8d7e-601a2f33fe08": {
      "id": "ac7f334e-36cb-49da-8d7e-601a2f33fe08",
      "value": [
        {
          "_id": "844d9a58-5228-4dcd-a85f-b8d028699548",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n'user.ts 파일의 두 번째 줄에서 'Cookies'가 정의되었지만 사용되지 않는 경고가 발생했습니다.'",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 74,
        "depth": 0
      }
    },
    "acb09164-d951-4744-96e2-a932cefef3d4": {
      "id": "acb09164-d951-4744-96e2-a932cefef3d4",
      "value": [
        {
          "_id": "bf13b844-be78-4ada-bfb9-af577007fbda",
          "type": "code",
          "children": [
            {
              "text": "Compiled with warnings.\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 67,
        "depth": 0
      }
    },
    "ae7a3f6d-e27e-46c9-95a1-a07a33ef0a5d": {
      "id": "ae7a3f6d-e27e-46c9-95a1-a07a33ef0a5d",
      "value": [
        {
          "_id": "9b156094-ff4e-4237-89eb-f998fc2e724d",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 78,
        "depth": 0
      }
    },
    "b11d1f43-1310-4efc-ad06-b6df634ae49b": {
      "id": "b11d1f43-1310-4efc-ad06-b6df634ae49b",
      "value": [
        {
          "_id": "2566d7ff-537c-4d2f-a13d-b4f29ccafe3b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n정리 중입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 64,
        "depth": 0
      }
    },
    "b1c81501-faf9-4d71-8b57-51859b15d496": {
      "id": "b1c81501-faf9-4d71-8b57-51859b15d496",
      "value": [
        {
          "_id": "2c3cc7d3-256d-40e5-923f-cae1477f91b5",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 35,
        "depth": 0
      }
    },
    "b61e2e3a-7127-4e7c-867f-cd6e0344e53a": {
      "id": "b61e2e3a-7127-4e7c-867f-cd6e0344e53a",
      "value": [
        {
          "_id": "04558ed5-fa17-459c-bae9-5ad6377a9823",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 23,
        "depth": 0
      }
    },
    "b945820c-75eb-4ba1-b0e2-be127cb128aa": {
      "id": "b945820c-75eb-4ba1-b0e2-be127cb128aa",
      "value": [
        {
          "_id": "0c908c62-f0d6-4bb8-9b26-bbac5eaa649f",
          "type": "code",
          "children": [
            {
              "text": "\u001b[1m\u001b[33mWARNING\u001b[39m\u001b[22m in \u001b[1m[eslint] \r\nsrc\\api\\service\\user.ts\r\n  Line 2:8:  'Cookies' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\n\u001b[39m\u001b[22m\r\n\r\nwebpack compiled with \u001b[1m\u001b[33m1 warning\u001b[39m\u001b[22m\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 49,
        "depth": 0
      }
    },
    "bca50506-137f-48ce-88d8-c18dbbaad333": {
      "id": "bca50506-137f-48ce-88d8-c18dbbaad333",
      "value": [
        {
          "_id": "2fc111f7-178a-444b-b74e-57d87fe2c2e3",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 76,
        "depth": 0
      }
    },
    "bd2b3de4-238e-4a67-b4bc-3ef9804affb9": {
      "id": "bd2b3de4-238e-4a67-b4bc-3ef9804affb9",
      "value": [
        {
          "_id": "dd919f84-a623-4a0f-9e4e-7d98db334da8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "변경 후 c:\\Users\\SSAFY\\Desktop\\jae2\\ododoc\\frontend\\fe_repo\\src\\api\\service\\user.ts",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 84,
        "depth": 1
      }
    },
    "bdc60c74-cfac-45df-92b4-82b9097e4578": {
      "id": "bdc60c74-cfac-45df-92b4-82b9097e4578",
      "value": [
        {
          "_id": "1197ebf5-5a6e-4010-88c6-e329c53bb94d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFiles emitted, awaiting typecheck results.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 17,
        "depth": 0
      }
    },
    "be210669-2ef6-4a06-af96-6d7c68e19047": {
      "id": "be210669-2ef6-4a06-af96-6d7c68e19047",
      "value": [
        {
          "_id": "94695fe8-7cb0-47cc-8c39-c051f97baec4",
          "type": "code",
          "children": [
            {
              "text": "To create a production build, use npm run build.\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 0
      }
    },
    "c486ff6e-b12d-4d44-b840-1132fcb2ada6": {
      "id": "c486ff6e-b12d-4d44-b840-1132fcb2ada6",
      "value": [
        {
          "_id": "43730b18-d5a2-4a64-9318-e7d804ef4d14",
          "type": "code",
          "children": [
            {
              "text": "Compiled with warnings.\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 44,
        "depth": 0
      }
    },
    "c5d71e87-8329-42f0-9767-a2b258d1b893": {
      "id": "c5d71e87-8329-42f0-9767-a2b258d1b893",
      "value": [
        {
          "_id": "a41001cf-7fbc-47fc-87f3-220ed0c718d8",
          "type": "code",
          "children": [
            {
              "text": "\u001b[1m\u001b[33mWARNING\u001b[39m\u001b[22m in \u001b[1m[eslint] \r\nsrc\\api\\service\\user.ts\r\n  Line 2:8:  'Cookies' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\n\u001b[39m\u001b[22m\r\n\r\nwebpack compiled with \u001b[1m\u001b[33m1 warning\u001b[39m\u001b[22m\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 77,
        "depth": 0
      }
    },
    "c67e4f44-f88e-4b77-b047-e274f976203d": {
      "id": "c67e4f44-f88e-4b77-b047-e274f976203d",
      "value": [
        {
          "_id": "cb5beda0-aa65-46b7-b05f-b14c3f8c4647",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 39,
        "depth": 0
      }
    },
    "cc6ba007-34b3-4e52-9cbb-c746f34a2cb9": {
      "id": "cc6ba007-34b3-4e52-9cbb-c746f34a2cb9",
      "value": [
        {
          "_id": "df94c0b3-7f8b-4e5e-97d2-2909e2ff3a95",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 57,
        "depth": 0
      }
    },
    "cdd355be-1a4e-4fe6-b274-326f07757cc5": {
      "id": "cdd355be-1a4e-4fe6-b274-326f07757cc5",
      "value": [
        {
          "_id": "c2a3772f-9e12-409c-904b-1b17a1e67f82",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nuser.ts 파일에는 인가 코드를 백엔드로 전송하고 로그아웃하는 두 가지 함수가 정의되어 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 81,
        "depth": 0
      }
    },
    "cfcebcb5-cc7a-4ef5-8412-e15a0ccc27f9": {
      "id": "cfcebcb5-cc7a-4ef5-8412-e15a0ccc27f9",
      "value": [
        {
          "_id": "04470642-8e01-4515-bcf4-fcec3ff4129b",
          "type": "code",
          "children": [
            {
              "text": "(node:19112) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 30,
        "depth": 0
      }
    },
    "d3515e00-fb6b-4f3c-91c9-77c94c7ce90b": {
      "id": "d3515e00-fb6b-4f3c-91c9-77c94c7ce90b",
      "value": [
        {
          "_id": "e10c6ad4-bcf9-4e9c-a474-8a24d3046125",
          "type": "code",
          "children": [
            {
              "text": "Starting the development server...\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 36,
        "depth": 0
      }
    },
    "d5ab2f38-5378-426a-99bb-b0671944998a": {
      "id": "d5ab2f38-5378-426a-99bb-b0671944998a",
      "value": [
        {
          "_id": "c8786362-db51-43fc-a2ff-409afd484521",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nTo create a production build, use npm run build for your project.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "daf3631c-f2af-4a05-8684-b683f8d04689": {
      "id": "daf3631c-f2af-4a05-8684-b683f8d04689",
      "value": [
        {
          "_id": "11da1908-0f37-4341-acfc-f18f7e75defe",
          "type": "code",
          "children": [
            {
              "text": "import api from '../instances/api';\nimport Cookies from 'js-cookie';\nimport { useCallback } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\n\n\n// 인가 코드 백엔드로 전송\nexport const useSendCodeToBackend = () => {\n    const { dispatch } = useAuth();\n\n    const sendCodeToBackend = useCallback(async(code: string, url: string, provider) => {\n        try {\n            const response = await api.post(`/oauth2/authorization/${provider}`, {\n                code: code,\n                url: url\n            });\n            const { accessToken, refreshToken, rootId, title, type } = response.data.data;\n            // 상태 업데이트\n            dispatch({ type: 'SET_AUTH_DETAILS', payload: { accessToken, refreshToken, rootId, title, type } });\n            localStorage.setItem('authDetails', JSON.stringify({ accessToken, refreshToken, rootId, title, type }))\n            // Cookies.set('refreshToken', refreshToken, { secure: true, sameSite: 'strict' });\n        } catch (error) {\n            console.error('Error sending authorization code:', error);\n        }\n    }, [dispatch]);\n\n    return sendCodeToBackend;\n};\n\n// 로그아웃\nexport const useLogout = () => {\n    const { dispatch } = useAuth();\n\n    const logout = useCallback(async () => {\n        try {\n            await api.get('/oauth2/logout');\n            dispatch({ type: 'LOGOUT' });\n            localStorage.removeItem('authDetails');\n            localStorage.removeItem('directoryData')\n        } catch (error) {\n            console.error('Error during logout:', error);\n        }\n    }, [dispatch]);\n\n    return logout;\n};",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 83,
        "depth": 1
      }
    },
    "dd805a5e-5ef4-4878-b9b1-ce6a66dc7eb2": {
      "id": "dd805a5e-5ef4-4878-b9b1-ce6a66dc7eb2",
      "value": [
        {
          "_id": "5d483b8c-4cfa-46ec-a060-f35f897a5891",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "de1693a4-592d-47b3-8096-827cfb401aac": {
      "id": "de1693a4-592d-47b3-8096-827cfb401aac",
      "value": [
        {
          "_id": "1d81c795-f255-4762-a957-7098fa26f7d8",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 48,
        "depth": 0
      }
    },
    "de32831f-889b-40dd-b6a0-f6d3fb8100c1": {
      "id": "de32831f-889b-40dd-b6a0-f6d3fb8100c1",
      "value": [
        {
          "_id": "dc851266-59fc-4ca5-84af-377f259c9268",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 34,
        "depth": 0
      }
    },
    "df3cec07-2e29-4c75-b7bb-45c1c9bb2339": {
      "id": "df3cec07-2e29-4c75-b7bb-45c1c9bb2339",
      "value": [
        {
          "_id": "270668da-38e5-48d2-b9f3-af3dc897b064",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nWarnings were encountered during compilation.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 46,
        "depth": 0
      }
    },
    "e12513f5-9fb8-4aef-a5ce-e6efa8a255fc": {
      "id": "e12513f5-9fb8-4aef-a5ce-e6efa8a255fc",
      "value": [
        {
          "_id": "bcadc2dd-96b8-4cc6-bfb0-dcbfb0257275",
          "type": "code",
          "children": [
            {
              "text": "[eslint] \r\nsrc\\api\\service\\user.ts\r\n  Line 2:8:  'Cookies' is defined but never used  @typescript-eslint/no-unused-vars\r\n\r\nSearch for the keywords to learn more about each warning.\r\nTo ignore, add // eslint-disable-next-line to the line before.\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 72,
        "depth": 0
      }
    },
    "e363b21f-30c5-4212-a9ff-c291a6251708": {
      "id": "e363b21f-30c5-4212-a9ff-c291a6251708",
      "value": [
        {
          "_id": "599bedc9-8667-4fac-8b19-f93446733d30",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 66,
        "depth": 0
      }
    },
    "e4d398e3-7379-4658-9b06-228fc2427707": {
      "id": "e4d398e3-7379-4658-9b06-228fc2427707",
      "value": [
        {
          "_id": "29f0b2a1-3def-4c69-87c3-075a66d27385",
          "type": "code",
          "children": [
            {
              "text": "(node:19112) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 33,
        "depth": 0
      }
    },
    "e73e12c1-75c6-43e4-8508-e29ab9b1e6c1": {
      "id": "e73e12c1-75c6-43e4-8508-e29ab9b1e6c1",
      "value": [
        {
          "_id": "bc4c4871-dd16-4438-a7bd-abd85ec23b15",
          "type": "code",
          "children": [
            {
              "text": "\r\n> fe_repo@0.1.0 start\r\n> react-scripts start\r\n\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 25,
        "depth": 0
      }
    },
    "e96f8e87-92c8-449f-94cd-02e06a2a5bdf": {
      "id": "e96f8e87-92c8-449f-94cd-02e06a2a5bdf",
      "value": [
        {
          "_id": "5cc02526-4088-4607-af05-b059d258480e",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 24,
        "depth": 0
      }
    },
    "f000e0b2-9a22-465e-a32d-21c3d2c437ab": {
      "id": "f000e0b2-9a22-465e-a32d-21c3d2c437ab",
      "value": [
        {
          "_id": "717da66f-c797-492f-9b0a-728fd0c77eb1",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n진행 중인 체크인 문제들.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 22,
        "depth": 0
      }
    },
    "f1ce22e6-94ae-4229-be53-551b719fb17e": {
      "id": "f1ce22e6-94ae-4229-be53-551b719fb17e",
      "value": [
        {
          "_id": "32e5aa51-1a15-4e70-953a-97edc2c1d4d8",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 63,
        "depth": 0
      }
    },
    "f32b99c0-4766-4649-9011-e03f0ea3142a": {
      "id": "f32b99c0-4766-4649-9011-e03f0ea3142a",
      "value": [
        {
          "_id": "4ab69af1-c0e0-4419-95e3-135b5b6ca817",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 37,
        "depth": 0
      }
    },
    "f35bac24-69c1-4575-895b-581e8d7c8276": {
      "id": "f35bac24-69c1-4575-895b-581e8d7c8276",
      "value": [
        {
          "_id": "3af7547c-a4c1-4c26-8623-296235815a7b",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 71,
        "depth": 0
      }
    },
    "f40076b0-ab7f-48f8-81b7-a0b8e0ffcaf8": {
      "id": "f40076b0-ab7f-48f8-81b7-a0b8e0ffcaf8",
      "value": [
        {
          "_id": "60f1f987-123b-4e89-8655-7dbd60f27e20",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 9,
        "depth": 0
      }
    },
    "f4d929f2-d8b4-4c1f-b058-f2ae24e5af2b": {
      "id": "f4d929f2-d8b4-4c1f-b058-f2ae24e5af2b",
      "value": [
        {
          "_id": "edbfb9fd-dd3c-461d-bdad-0b7821a25df7",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 86,
        "depth": 0
      }
    },
    "f6198ddf-35dc-4809-8c86-0036cce75c87": {
      "id": "f6198ddf-35dc-4809-8c86-0036cce75c87",
      "value": [
        {
          "_id": "b5d93ecd-a594-496d-a8e6-7c5e6b35abbc",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 31,
        "depth": 0
      }
    },
    "fadc957f-a999-4aa4-8c6b-9b61615a419d": {
      "id": "fadc957f-a999-4aa4-8c6b-9b61615a419d",
      "value": [
        {
          "_id": "27088d1b-0b36-4606-89e8-7c509bf9c7ab",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 73,
        "depth": 0
      }
    },
    "fcf9331d-251d-456c-9f07-3c74504626e0": {
      "id": "fcf9331d-251d-456c-9f07-3c74504626e0",
      "value": [
        {
          "_id": "16d06bb5-e909-4267-8434-3b405683950c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 80,
        "depth": 0
      }
    },
    "fdf7a848-8323-40d4-9450-8874cd28b294": {
      "id": "fdf7a848-8323-40d4-9450-8874cd28b294",
      "value": [
        {
          "_id": "e20ca6ed-4344-45e9-8b4a-bef749efd573",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 42,
        "depth": 0
      }
    },
    "ff280c37-02e6-4078-b76f-5537156f6415": {
      "id": "ff280c37-02e6-4078-b76f-5537156f6415",
      "value": [
        {
          "_id": "1f88de90-8db7-4d4e-8b1d-811d34c11c51",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 65,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a136afee7d1626031985f"
  },
  "directoryId": 342,
  "lastOrder": 92,
  "content": {
    "01bf1b62-3402-4d0e-9a1e-b6d6c13523bf": {
      "id": "01bf1b62-3402-4d0e-9a1e-b6d6c13523bf",
      "value": [
        {
          "_id": "569c1cf2-261a-4f13-aca5-fb1459398fc2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nIntelliJ에서 빌드 및 실행 시 발생하는 오류 및 출력 내용을 추적하여 서버에 전송하는 기능을 제공하는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 87,
        "depth": 1
      }
    },
    "0216f6af-be7f-4e4e-8484-23494050841b": {
      "id": "0216f6af-be7f-4e4e-8484-23494050841b",
      "value": [
        {
          "_id": "fbf72388-8847-4aed-b4bf-203d5d7f65ac",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOauth 로그인을 처리하는 창을 구현하여, 사용자가 카카오, 네이버, 구글 계정으로 로그인할 수 있도록 하였습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 29,
        "depth": 1
      }
    },
    "047564e1-c8d5-4464-abe3-789ac0cae1eb": {
      "id": "047564e1-c8d5-4464-abe3-789ac0cae1eb",
      "value": [
        {
          "_id": "2f0c0f36-bb3c-4bf0-b3da-68e22453b6d1",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.ModifyRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ContextMenu;\nimport javafx.scene.control.TextField;\nimport javafx.scene.control.TreeCell;\nimport javafx.scene.input.KeyCode;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\n\nimport java.util.Map;\n\npublic class FileAndFolderTreeCell extends TreeCell<FileInfo> {\n\n    private TextField textField;\n    private Runnable refreshCallback;\n    private ContextMenu folderContextMenu;\n    private ContextMenu fileContextMenu;\n    private Stage stage;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n\n    public FileAndFolderTreeCell(ContextMenu folderContextMenu, ContextMenu fileContextMenu, Stage stage,Runnable refreshCallback) {\n        this.fileContextMenu = fileContextMenu;\n        this.folderContextMenu = folderContextMenu;\n        this.stage = stage;\n        this.refreshCallback = refreshCallback;\n    }\n\n    @Override\n    protected void updateItem(FileInfo fileInfo, boolean empty) {\n        super.updateItem(fileInfo, empty);\n        if(empty || fileInfo == null) {\n            setText(null);\n            setGraphic(null);\n            setContextMenu(null);\n        } else{\n            if(isEditing()){\n                if(textField != null){\n                    textField.setText(getString());\n                }\n                setText(null);\n                setGraphic(textField);\n            }else{\n                setText(fileInfo.toString());\n                setGraphic(null);\n\n                if(fileInfo.getType().equals(\"FOLDER\")){\n                    setContextMenu(folderContextMenu);\n                }\n                else if (fileInfo.getType().equals(\"FILE\")){\n                    setContextMenu(fileContextMenu);\n                }\n            }\n        }\n    }\n\n    @Override\n    public void startEdit() {\n        super.startEdit();\n        if(textField == null){\n            createTextField();\n        }\n        setGraphic(textField);\n        setText(null);\n        textField.setText(getItem().getName());\n        textField.selectAll();\n        textField.requestFocus();\n    }\n\n    @Override\n    public void commitEdit(FileInfo fileInfo) {\n        super.commitEdit(fileInfo);\n        modifyFolderOrFile(fileInfo.getName());\n    }\n\n    @Override\n    public void cancelEdit() {\n        super.cancelEdit();\n        setText(getItem().getName());\n        setGraphic(null);\n    }\n\n    private void createTextField() {\n        textField = new TextField(getString());\n        textField.setOnKeyReleased(event -> {\n            if (event.getCode() == KeyCode.ENTER) {\n                commitEdit(new FileInfo(getItem().getId(), textField.getText(), getItem().getType()));\n            } else if (event.getCode() == KeyCode.ESCAPE) {\n                cancelEdit();\n            }\n        });\n    }\n\n    private void modifyFolderOrFile(String name) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        ModifyRequestDto createRequestDto = new ModifyRequestDto(getItem().getId(), name);\n\n        webClient.put()\n                .uri(\"/edit\")\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        if (refreshCallback != null) {\n                            refreshCallback.run();\n                        }\n                    }\n                    else if (result.getStatus() == 401){\n                        refreshAccessToken();\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                    else {\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                }, error ->{\n                    showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                    refreshCallback.run();\n                });\n    }\n    private void showAlert(String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"디렉토리\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private String getString() {\n        return getItem() == null ? \"\" : getItem().toString();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 43,
        "depth": 1
      }
    },
    "05902845-a492-42e2-8fb2-2a52e78aced1": {
      "id": "05902845-a492-42e2-8fb2-2a52e78aced1",
      "value": [
        {
          "_id": "6fc6234d-aa95-4574-9a12-08869280cdf0",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리 정보를 담고 있는 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 56,
        "depth": 1
      }
    },
    "0a7c7df3-a348-478e-a127-813390d32e83": {
      "id": "0a7c7df3-a348-478e-a127-813390d32e83",
      "value": [
        {
          "_id": "cf668197-9560-4843-b316-6660c84e509f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.stage.Stage;\nimport org.jvnet.winp.Main;\n\npublic class OpenOdodocPlugin extends AnAction {\n\n    @Override\n    public void actionPerformed(AnActionEvent e) {\n        Platform.runLater(() -> {\n            if(TokenManager.getInstance().getAccessToken() == null || TokenManager.getInstance().getRefreshToken() == null){\n                if(!MainLoginFrame.isFrameVisible()){\n                    new MainLoginFrame();\n                }\n            }\n            else {\n                new DirectoryFrame().start(new Stage());\n            }\n        });\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 34,
        "depth": 1
      }
    },
    "0a816f81-03b7-42ee-96ac-304c2a3c1104": {
      "id": "0a816f81-03b7-42ee-96ac-304c2a3c1104",
      "value": [
        {
          "_id": "adc0c410-dabd-43c9-8e0d-d671a3ad6821",
          "type": "bulleted-list",
          "children": [
            {
              "text": "WebSocketReConnectAlert.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "0e875cc9-1579-4426-8fd9-448befc4410d": {
      "id": "0e875cc9-1579-4426-8fd9-448befc4410d",
      "value": [
        {
          "_id": "9eb19cee-1b6e-447c-8a9f-33fafa0eaec6",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ErrorFileInfo {\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n    @JsonProperty\n    private int line;\n\n    public ErrorFileInfo(String fileName, String sourceCode, int line) {\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n        this.line = line;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 37,
        "depth": 1
      }
    },
    "12a5d5f0-8c63-4b7d-a8c8-610fe70d6065": {
      "id": "12a5d5f0-8c63-4b7d-a8c8-610fe70d6065",
      "value": [
        {
          "_id": "be385f49-131b-4ea9-98eb-16039e92fbd2",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class ModifyRequestDto {\n\n    private Long id;\n    private String name;\n\n    public ModifyRequestDto(Long id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "18b9e54b-6bb8-4c36-8638-3e43ab22e978": {
      "id": "18b9e54b-6bb8-4c36-8638-3e43ab22e978",
      "value": [
        {
          "_id": "c8d1fbcb-b140-46f2-9213-43b0d251866c",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "19a24dc8-93ac-4d74-8bbb-0da5fae85047": {
      "id": "19a24dc8-93ac-4d74-8bbb-0da5fae85047",
      "value": [
        {
          "_id": "0c816b91-d5fd-4aee-a0e5-96d2ff014656",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "1c99375b-f7e9-41f2-8f1b-e1ee4dc2f362": {
      "id": "1c99375b-f7e9-41f2-8f1b-e1ee4dc2f362",
      "value": [
        {
          "_id": "8076cda3-b953-4b23-8dde-c8a62f5dd378",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 83,
        "depth": 0
      }
    },
    "1d9e1942-a413-4ff2-a7ae-679844911994": {
      "id": "1d9e1942-a413-4ff2-a7ae-679844911994",
      "value": [
        {
          "_id": "d9eda6a0-409f-441d-8d11-5ab42bfa4c0c",
          "type": "code",
          "children": [
            {
              "text": "2024-05-19 23:56:41,223 [    639]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.intellij.ae.database.core.baseEvents.fus.AddStatisticsEventLogListenerTemporary, plugin=com.jetbrains.ae.database)\r\n2024-05-19 23:56:41,223 [    639]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.jetbrains.rdserver.statistics.BackendStatisticsManager, plugin=com.jetbrains.codeWithMe)\r\n2024-05-19 23:56:41,449 [    865]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.search.FilenameIndex initializer requests com.intellij.ide.plugins.PluginUtil instance\r\n2024-05-19 23:56:42,241 [   1657]   WARN - #c.i.s.ComponentManagerImpl - org.zmlx.hg4idea.provider.HgChangeProvider initializer requests com.intellij.openapi.vcs.FileStatusFactory instance\r\n2024-05-19 23:56:44,288 [   3704]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.codeInsight.daemon.LineMarkerProviders initializer requests com.intellij.codeInsight.daemon.LineMarkerProviders instance\r\n2024-05-19 23:56:45,524 [   4940]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.LanguageSubstitutors initializer requests com.intellij.psi.LanguageSubstitutors instance\r\n2024-05-19 23:56:47,344 [   6760]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable initializer requests com.intellij.util.LocaleSensitiveApplicationCacheService instance\r\n2024-05-19 23:56:48,561 [   7977]   WARN - #c.i.u.j.JBCefApp - JCEF is manually disabled in headless env via 'ide.browser.jcef.headless.enabled=false'\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 90,
        "depth": 0
      }
    },
    "2873232a-17fd-45dc-bc68-36b230dfde4e": {
      "id": "2873232a-17fd-45dc-bc68-36b230dfde4e",
      "value": [
        {
          "_id": "caacf54a-a489-4f12-b1f1-d271bfb7fb4e",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 82,
        "depth": 0
      }
    },
    "29e2c16e-e37c-4b09-b3e1-7fe50dfe31ad": {
      "id": "29e2c16e-e37c-4b09-b3e1-7fe50dfe31ad",
      "value": [
        {
          "_id": "848e9e33-4b4f-47a2-b516-7c57251922bb",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class ConnectedFileManager {\n\n    private Long directoryId = 0L;\n\n    private ConnectedFileManager() {}\n\n    private static class ConnectedFileManagerHolder {\n        private static final ConnectedFileManager INSTANCE = new ConnectedFileManager();\n    }\n\n    public static ConnectedFileManager getInstance() {\n        return ConnectedFileManager.ConnectedFileManagerHolder.INSTANCE;\n    }\n\n    public Long getDirectoryId() {\n        return directoryId;\n    }\n\n    public void setDirectoryId(Long directoryId) {\n        this.directoryId = directoryId;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 40,
        "depth": 1
      }
    },
    "2c2aa9d8-0fb9-42dc-b15c-b5a6bef461de": {
      "id": "2c2aa9d8-0fb9-42dc-b15c-b5a6bef461de",
      "value": [
        {
          "_id": "428e1597-08bb-4b76-9b30-4535ff49be2f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.project.Project;\n\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\n\npublic class ProjectProvider {\n\n    private Queue<Project> projects = new ArrayDeque<>();\n\n    private ProjectProvider() {}\n\n    private static class ProjectProviderHolder {\n        private static final ProjectProvider INSTANCE = new ProjectProvider();\n    }\n\n    public static ProjectProvider getInstance() {\n        return ProjectProviderHolder.INSTANCE;\n    }\n\n    public Queue<Project> getProjects() {\n        return projects;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 25,
        "depth": 1
      }
    },
    "303bf9e2-2e6e-4421-8fd3-2ddbf0b8f73b": {
      "id": "303bf9e2-2e6e-4421-8fd3-2ddbf0b8f73b",
      "value": [
        {
          "_id": "53e4186d-9e23-46b2-8754-dd52e5efea8f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n변경된 파일 정보를 저장하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "319ff85d-5183-4bec-b3a1-100cf0df3c9d": {
      "id": "319ff85d-5183-4bec-b3a1-100cf0df3c9d",
      "value": [
        {
          "_id": "29d7ba57-62b5-481c-8e38-13ab967a5260",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CreateRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 48,
        "depth": 1
      }
    },
    "41a46e40-7e6f-4108-9166-68a2654c5825": {
      "id": "41a46e40-7e6f-4108-9166-68a2654c5825",
      "value": [
        {
          "_id": "93c0854f-bfa5-4c41-9408-9d939807dd21",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "426ae06e-cd98-44be-87e1-9b45e743a513": {
      "id": "426ae06e-cd98-44be-87e1-9b45e743a513",
      "value": [
        {
          "_id": "fedda46f-ebab-4a67-8e69-ffa5a1ef218f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.intellij.execution.ExecutionListener;\nimport com.intellij.execution.process.ProcessEvent;\nimport com.intellij.execution.process.ProcessHandler;\nimport com.intellij.execution.process.ProcessListener;\nimport com.intellij.execution.process.ProcessOutputTypes;\nimport com.intellij.execution.runners.ExecutionEnvironment;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.diagnostic.Logger;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.util.Key;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.tracker.dto.BuildResultInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ErrorFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ModifiedFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.RequestDto;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class CodeListener implements ExecutionListener {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n    private List<ErrorFileInfo> errorFiles = new ArrayList<>();\n    private Map<String, ProjectInfo> currentProjectInfo = new HashMap<>();\n    private boolean capturingError;\n    private boolean errorFlag;\n\n    private static final Logger LOG = Logger.getInstance(CodeListener.class);\n    private static final Pattern ANSI_ESCAPE_PATTERN = Pattern.compile(\"\\u001B\\\\[[;\\\\d]*m\");\n\n    public CodeListener(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void processStarted(@NotNull String executorId, @NotNull ExecutionEnvironment env, @NotNull ProcessHandler handler) {\n        CompletableFuture.runAsync(() -> getCurrentProject())\n                .thenRun(this::initializeProjectTracker)\n                .thenRun(() -> {\n                    // 파일 연동이 되어있다면\n                    if (ConnectedFileManager.getInstance().getDirectoryId() != 0L) {\n                        startSignal();\n                    } else {\n                        Platform.runLater(() -> {\n                            Alert alert = AlertHelper.makeAlert(\n                                    Alert.AlertType.WARNING,\n                                    \" Ododoc\",\n                                    \"파일 연동 오류\",\n                                    \"파일이 연동되지 않았습니다.\\n해당 결과는 새로 생성된 파일에 기록됩니다.\",\n                                    \"/image/button/icon.png\"\n                            );\n                            alert.showAndWait();\n                        });\n                    }\n\n                    handler.addProcessListener(new OdodocProcessListener());\n                });\n    }\n\n    private void getCurrentProject() {\n        psiFiles = new ArrayList<>();\n        currentProjectInfo.clear();\n        ApplicationManager.getApplication().executeOnPooledThread(() -> {\n            ApplicationManager.getApplication().runReadAction(() -> {\n                GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n                Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n                PsiManager psiManager = PsiManager.getInstance(project);\n                psiFiles = files.stream()\n                        .map(psiManager::findFile)\n                        .collect(Collectors.toList());\n\n                psiFiles.forEach(file ->\n                        currentProjectInfo.put(file.getName(), new ProjectInfo(file, \"\", file.getText())));\n            });\n        });\n    }\n\n    private void initializeProjectTracker() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.currentHashStatus(project);\n    }\n\n    private void startSignal() {\n        RequestDto requestDto = new RequestDto();\n        requestDto.setSourceApplication(\"INTELLIJ\");\n        requestDto.setDataType(\"SIGNAL\");\n        requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n        requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n        requestDto.setTimestamp(LocalDateTime.now());\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            String output = objectMapper.writeValueAsString(requestDto);\n            BuildResultSender.sendMessage(output);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private List<ModifiedFileInfo> getModifiedFiles() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n\n        Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n        Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n        String allBeforeProjectStatus = projectTracker.getAllBeforeProjectStatus();\n        String allCurrentProjectStatus = projectTracker.getAllCurrentProjectStatus();\n\n        String before, current= \"\";\n        boolean isChange = false; // 변경된 파일이 있는지 확인\n        List<ModifiedFileInfo> modifiedFileInfoList = new ArrayList<>();\n\n        // 파일을 추가하거나 삭제하지 않은 경우\n        if(allBeforeProjectStatus.equals(allCurrentProjectStatus)){\n            for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n                before = entry.getValue().getHash();\n                current = currentProjectStatus.get(entry.getKey()).getHash();\n                // 바뀐 파일이라면 해당 파일\n                if(!before.equals(current)){\n                    isChange = true;\n                    PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                    addModifiedFile(modifiedFileInfoList, modifiedFile);\n                }\n            }\n        }\n\n        // 파일을 추가하거나 삭제한 경우\n        else{\n            int beforeSize = beforeProjectStatus.size();\n            int currentSize = currentProjectStatus.size();\n\n            // 추가한 경우\n            if(beforeSize <= currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : currentProjectStatus.entrySet()){\n\n                    // 추가된 파일이 아닐 경우\n                    if(beforeProjectStatus.containsKey(entry.getKey())){\n                        before = beforeProjectStatus.get(entry.getKey()).getHash();\n                        current = entry.getValue().getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = entry.getValue().getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 추가된 파일일 경우\n                    else{\n                        isChange = true;\n                        PsiFile modifiedFile = entry.getValue().getPsiFile();\n                        addModifiedFile(modifiedFileInfoList, modifiedFile);\n                    }\n\n                }\n            }\n            // 삭제한 경우\n            else if(beforeSize > currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n\n                    // 삭제된 파일이 아닐 경우\n                    if(currentProjectStatus.containsKey(entry.getKey())){\n                        before = entry.getValue().getHash();\n                        current = currentProjectStatus.get(entry.getKey()).getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 삭제된 파일일 경우\n                    else{\n                        isChange = true;\n                    }\n\n                }\n            }\n        }\n\n        // 변경된 파일이 있을 경우 현재 상태를 전 상태로 돌리기 (깊은 복사 )\n        if (isChange){\n            deepCopy(currentProjectStatus);\n        }\n\n        return modifiedFileInfoList;\n\n    }\n\n    private void addModifiedFile(List<ModifiedFileInfo> modifiedFileInfoList, PsiFile modifiedFile) {\n        String fileName = modifiedFile.getName();\n        String sourceCode = modifiedFile.getText();\n        modifiedFileInfoList.add(new ModifiedFileInfo(fileName, sourceCode));\n    }\n\n    private void deepCopy(Map<String, ProjectInfo> currentProjectStatus) {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.setBeforeProjectStatus(\n                currentProjectStatus.entrySet().stream()\n                        .collect(Collectors.toMap(Map.Entry::getKey, e -> {\n                            try {\n                                return (ProjectInfo) e.getValue().clone();\n                            } catch (CloneNotSupportedException ex) {\n                                throw new RuntimeException(ex);\n                            }\n                        }))\n        );\n    }\n\n    private class OdodocProcessListener implements ProcessListener {\n        StringBuilder allOutputLog = new StringBuilder();\n        StringBuilder errorLog = new StringBuilder();\n        StringBuilder stdOutLog = new StringBuilder();\n\n        @Override\n        public void processTerminated(@NotNull ProcessEvent event) {\n            RequestDto requestDto = new RequestDto();\n            BuildResultInfo buildResultInfo = new BuildResultInfo();\n\n            requestDto.setSourceApplication(\"INTELLIJ\");\n            requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n            requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n            requestDto.setTimestamp(LocalDateTime.now());\n\n            if (errorFlag) {\n                buildResultInfo.setDetails(errorLog.toString());\n                if (errorFiles.size() > 1) {\n                    buildResultInfo.setErrorFile(errorFiles.get(0));\n                }\n                buildResultInfo.setModifiedFiles(getModifiedFiles());\n\n                requestDto.setDataType(\"ERROR\");\n                requestDto.setContent(buildResultInfo);\n            } else {\n                buildResultInfo.setDetails(stdOutLog.toString());\n\n                List<ModifiedFileInfo> temp = getModifiedFiles();\n                buildResultInfo.setModifiedFiles(temp);\n\n                requestDto.setDataType(\"OUTPUT\");\n                requestDto.setContent(buildResultInfo);\n            }\n\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                String output = objectMapper.writeValueAsString(requestDto);\n                System.out.println(output);\n                BuildResultSender.sendMessage(output);\n            } catch (JsonProcessingException e) {\n                throw new RuntimeException(e);\n            }\n\n            allOutputLog.setLength(0);\n            errorLog.setLength(0);\n            stdOutLog.setLength(0);\n            errorFiles = new ArrayList<>();\n            errorFlag = false;\n            capturingError = false;\n        }\n\n        @Override\n        public void onTextAvailable(@NotNull ProcessEvent event, @NotNull Key outputType) {\n            String text = event.getText();\n\n            LOG.info(\"Output type: \" + outputType + \" Text: \" + text);\n            if (outputType.equals(ProcessOutputTypes.STDERR)) {\n                errorFlag = true;\n                errorLog.append(text);\n            }\n\n            else if (outputType.equals(ProcessOutputTypes.STDOUT)) {\n                if (text.contains(\"ERROR\")) {\n                    LOG.info(\"에러감지 !!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n                    errorFlag = true;\n                    errorLog.append(text);\n                    capturingError = true;\n                }\n                else if (capturingError) {\n                    if (text.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}\\\\+\\\\d{2}:\\\\d{2} .*\")) {\n                        capturingError = false;\n                    }\n                    else {\n                        errorLog.append(text);\n                        Pattern pattern = Pattern.compile(\"\\\\(([^)]+):(\\\\d+)\\\\)\");\n                        Matcher matcher = pattern.matcher(text);\n                        if (matcher.find()) {\n                            if (currentProjectInfo.containsKey(matcher.group(1))) {\n                                ProjectInfo projectInfo = currentProjectInfo.get(matcher.group(1));\n                                String fileName = projectInfo.getPsiFile().getName();\n                                String sourceCode = projectInfo.getSourceCode();\n                                int line = Integer.parseInt(matcher.group(2));\n                                errorFiles.add(new ErrorFileInfo(fileName, sourceCode, line));\n                            }\n                        }\n                    }\n                }\n                else {\n                    stdOutLog.append(text);\n                }\n            }\n            allOutputLog.append(text);\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 86,
        "depth": 1
      }
    },
    "4376676d-0563-4c83-aa46-d4f48ac33736": {
      "id": "4376676d-0563-4c83-aa46-d4f48ac33736",
      "value": [
        {
          "_id": "18eee280-d875-4e5e-a250-a1153b892bb7",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n부모 디렉토리 아이디, 이름, 타입 정보를 받는 생성 요청 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 50,
        "depth": 1
      }
    },
    "45ab1b31-4445-47bc-b450-9ce3f63e2b6b": {
      "id": "45ab1b31-4445-47bc-b450-9ce3f63e2b6b",
      "value": [
        {
          "_id": "e9db5b39-a62d-4bcd-9a4c-4829d89305b6",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultSender.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 57,
        "depth": 1
      }
    },
    "4c2612c1-06ee-4b4b-88d1-889ad3906b34": {
      "id": "4c2612c1-06ee-4b4b-88d1-889ad3906b34",
      "value": [
        {
          "_id": "1a619027-5aa8-4464-b671-ddb912d2e153",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 89,
        "depth": 0
      }
    },
    "5022f9f5-a605-408e-8d0b-4cdc7501a664": {
      "id": "5022f9f5-a605-408e-8d0b-4cdc7501a664",
      "value": [
        {
          "_id": "a739fa8b-bdb0-432c-b44b-b97da8f696c6",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ErrorFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 36,
        "depth": 1
      }
    },
    "512e5b55-ed1b-47c5-b3e2-0487425511ac": {
      "id": "512e5b55-ed1b-47c5-b3e2-0487425511ac",
      "value": [
        {
          "_id": "ca2a45a8-151c-49b5-ad1d-1b29262e016e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.application.ReadAction;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class ProjectTracker {\n\n    private List<PsiFile> psiFiles;\n    private Map<String, ProjectInfo> beforeProjectStatus = new HashMap<>();\n    private Map<String, ProjectInfo> currentProjectStatus = new HashMap<>();\n    private String allBeforeProjectStatus;\n    private String allCurrentProjectStatus;\n    private ProjectTracker(){}\n\n    private static class ProjectTrackerHolder {\n        private static final ProjectTracker INSTANCE = new ProjectTracker();\n    }\n\n    public static ProjectTracker getInstance() {\n        return ProjectTrackerHolder.INSTANCE;\n    }\n\n    // 프로젝트 생성시 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void initHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() ->{\n            String fileHash = \"\";\n            getProjectFileList(project);\n            beforeProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                beforeProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allBeforeProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    // 지금 현재 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void currentHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() -> {\n            String fileHash = \"\";\n            getProjectFileList(project);\n            currentProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                currentProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allCurrentProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    private void getProjectFileList(Project project){\n\n        ApplicationManager.getApplication().runReadAction(() -> {\n            GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n            Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n            PsiManager psiManager = PsiManager.getInstance(project);\n\n            psiFiles = files.stream()\n                    .map(file -> psiManager.findFile(file))\n                    .toList();\n        });\n    }\n\n    // 해쉬로 암호화\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try{\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for(byte b : hashCode){\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        }catch (NoSuchAlgorithmException e){\n            throw  new RuntimeException(e);\n        }\n\n        return result;\n    }\n\n    public Map<String, ProjectInfo> getBeforeProjectStatus() {\n        return beforeProjectStatus;\n    }\n\n    public Map<String, ProjectInfo> getCurrentProjectStatus() {\n        return currentProjectStatus;\n    }\n\n    public String getAllBeforeProjectStatus() {\n        return allBeforeProjectStatus;\n    }\n\n    public String getAllCurrentProjectStatus() {\n        return allCurrentProjectStatus;\n    }\n\n    public void setBeforeProjectStatus(Map<String, ProjectInfo> beforeProjectStatus) {\n        this.beforeProjectStatus = beforeProjectStatus;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 46,
        "depth": 1
      }
    },
    "51eddffb-a8fb-4d67-8912-207fe10e753d": {
      "id": "51eddffb-a8fb-4d67-8912-207fe10e753d",
      "value": [
        {
          "_id": "17024989-c820-4227-92cc-5ecfb98a4360",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "59995c42-bd92-431b-93fa-609378ebc1fe": {
      "id": "59995c42-bd92-431b-93fa-609378ebc1fe",
      "value": [
        {
          "_id": "9d6fdd17-ccc0-4cac-93fb-65500c87aff8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 18,
        "depth": 1
      }
    },
    "5bf1c1dc-6e0f-4f1d-a3ac-db0052febefa": {
      "id": "5bf1c1dc-6e0f-4f1d-a3ac-db0052febefa",
      "value": [
        {
          "_id": "adc63177-23d4-4c9c-8377-04ed7a7c017a",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.concurrent.Worker;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.ProgressIndicator;\nimport javafx.scene.image.Image;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.web.WebEngine;\nimport javafx.scene.web.WebView;\nimport javafx.stage.Stage;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\n\nimport java.net.CookieHandler;\nimport java.net.CookieManager;\nimport java.util.Optional;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\nimport static java.net.CookiePolicy.ACCEPT_ALL;\n\npublic class OauthLoginFrame extends Stage {\n\n    private String clientId;\n    private String redirectUri;\n    private String firstLocation;\n    private String lastLocation;\n    private String loginUri;\n    private final int TIME_OUT = 5; // 로그인 응답 대기 시간\n\n    private ScheduledExecutorService scheduler;\n    private MainLoginFrame mainLoginFrame = null;\n    private ProgressIndicator loadingIndicator;\n    private Alert alert;\n\n    public OauthLoginFrame(MainLoginFrame mainLoginFrame, String provider){\n        this.mainLoginFrame = mainLoginFrame;\n\n        // 제목 설정\n        setTitle(\" \" + provider);\n\n        String lowerProvider = provider.toLowerCase();\n        redirectUri = \"https://k10d209.p.ssafy.io/api/oauth2/authorization/\" + lowerProvider;\n\n        // 아이콘 설정\n        String iconImagePath = \"/image/button/\" + lowerProvider  + \"_icon.png\";\n        Image windowIcon = new Image(getClass().getResourceAsStream(iconImagePath));\n        getIcons().add(windowIcon);\n\n        StackPane layout = new StackPane();\n        WebView webView = new WebView();\n        WebEngine webEngine = webView.getEngine();\n        loadingIndicator = new ProgressIndicator();\n        loadingIndicator.setVisible(false);\n\n        layout.getChildren().addAll(webView, loadingIndicator);\n        Scene scene = new Scene(layout, 450, 600);\n        setScene(scene);\n        show();\n\n        // alert 초기화\n        alert = AlertHelper.makeAlert(\n                Alert.AlertType.WARNING,\n                \" \" + provider,\n                \"로그인 실패\",\n                \"다시 로그인 해주세요.\",\n                iconImagePath);\n\n        // oauth 플랫폼에 따라 필드 초기화\n        switch(provider) {\n            case \"KAKAO\" :\n                clientId = \"a23282fc18f2b445d559dfe93fa96e6b\";\n                firstLocation = \"kakaossotokenlogin.do\";\n                lastLocation = redirectUri;\n                loginUri = \"https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"NAVER\" :\n                clientId = \"DRnVNgGzq_x_6Q4apfhJ\";\n                firstLocation = \"oauth_token\";\n                lastLocation = \"nid\";\n                loginUri = \"https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"GOOGLE\" :\n                clientId = \"599323777848-68aq3cu9p98np6eml1m77mfc1ethpkrp.apps.googleusercontent.com\";\n                firstLocation = \"SetSID\";\n                lastLocation = \"Fuserinfo.profile\";\n                loginUri = \"https://accounts.google.com/o/oauth2/v2/auth?client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri\n                        + \"&scope=profile&response_type=code\";\n                break;\n        }\n\n        doOauthLogin(webEngine, provider);\n    }\n\n    private void doOauthLogin(WebEngine webEngine, String provider) {\n\n        CookieManager cookieManager = new CookieManager();\n        cookieManager.setCookiePolicy(ACCEPT_ALL);\n        CookieHandler.setDefault(cookieManager);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n\n        if(scheduler != null && !scheduler.isShutdown()){\n            scheduler.shutdownNow();\n        }\n        scheduler = Executors.newSingleThreadScheduledExecutor();\n        Runnable timeoutTask = () -> {\n            Platform.runLater(() -> {\n                alert.showAndWait();\n                close();\n                cookieManager.getCookieStore().removeAll();\n                webEngine.executeScript(\"localStorage.clear();\");\n            });\n        };\n\n        webEngine.getLoadWorker().stateProperty().addListener((obs, oldState, newState) -> {\n\n            // 화면이 성공적으로 전환이 되었을 때\n            if (newState == Worker.State.SUCCEEDED) {\n\n                // 로그인 응답 시간 스케쥴러 등록, 로딩 스피너 작동\n                if (webEngine.getLocation().contains(firstLocation)){\n                    scheduler.schedule(timeoutTask, TIME_OUT, TimeUnit.SECONDS);\n                    loadingIndicator.setVisible(true);\n                }\n\n                boolean shouldProcess = false;\n                switch (provider){\n                    case \"KAKAO\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri);\n                        break;\n                    case \"NAVER\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && !webEngine.getLocation().contains(lastLocation);\n                        break;\n                    case \"GOOGLE\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && webEngine.getLocation().contains(lastLocation);\n                        break;\n                }\n\n                // 응답을 받을 화면이 나온다면\n                if (shouldProcess) {\n\n                    scheduler.shutdownNow();\n                    loadingIndicator.setVisible(false);\n\n                    // javascript를 실행시켜 content 정보 가져오기\n                    String content = (String) webEngine.executeScript(\"document.body.textContent\");\n                    Long status;\n                    JSONParser jsonParser = new JSONParser();\n\n                    try {\n                        // String to Json\n                        JSONObject json = (JSONObject) jsonParser.parse(content);\n                        status = (Long) json.get(\"status\");\n                        JSONObject data = (JSONObject) json.get(\"data\");\n\n                        if (status != 200) {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        } else {\n                            // access 토큰을 싱글톤 객체에 저장\n                            tokenManager.setAccessToken((String) data.get(\"accessToken\"));\n                            directoryInfoManager.setRootId((long) data.get(\"rootId\"));\n                            directoryInfoManager.setTitle((String) data.get(\"title\"));\n                        }\n\n\n                    } catch (ParseException e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    webEngine.executeScript(\"document.body.style.display = 'none';\");\n\n                    // 쿠키의 refresh 토큰을 싱글톤 객체에 저장\n                    cookieManager.getCookieStore().getCookies().forEach(cookie -> {\n                        if (cookie.getName().equals(\"refreshToken\")) {\n                            tokenManager.setRefreshToken(cookie.getValue());\n                        }\n                    });\n\n                    // 로그인 성공 여부 다시 확인\n                    if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                        Platform.runLater(() -> {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        });\n\n                        return;\n                    }\n\n                    // 지금 현재 등록되어 있는 모든 프로젝트들에게 codeListener 추가하기\n                    addCodeListener(ProjectProvider.getInstance());\n\n                    try {\n                        new DirectoryFrame().start(mainLoginFrame);\n                        connectWebSocket();\n                    } catch (Exception e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    close();\n                }\n            }\n\n        });\n\n        webEngine.load(loginUri);\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n                projectTracker.initHashStatus(tempProject);\n            }\n        }\n    }\n\n    // 처리 서버와 webSocket 연결해주기\n    private void connectWebSocket() {\n        BuildResultSender.setINSTANCE(null);\n        BuildResultSender.getINSTANCE();\n\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n\n        if(!BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    connectWebSocket();\n                }\n                else {\n                    this.close();\n                }\n            });\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "5e921c3f-ee3e-4419-a7cf-9fcc4937cf9b": {
      "id": "5e921c3f-ee3e-4419-a7cf-9fcc4937cf9b",
      "value": [
        {
          "_id": "40dcaabe-da0e-4608-9a3e-391a17ae388d",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.handshake.ServerHandshake;\n\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class BuildResultSender {\n\n    // volatile 키워드를 사용하여 메모리 가시성 문제 해결, 멀티스레드 환경에서도 변수가 안전하게 사용할 수 있도록 함.\n    private static volatile WebSocketClient INSTANCE;\n\n    // 객체의 락을 위해 사용.\n    private static final Object lock = new Object();\n    private static final String WEBSOCKET_URI = \"wss://k10d209.p.ssafy.io/process/ws\";\n    private static boolean enableWhenPushBtn = false;\n    private static int count = 0;\n    private BuildResultSender() {}\n\n    public static WebSocketClient getINSTANCE() {\n\n        if(INSTANCE == null) {\n            // 두 번째로 null 체크를 한 후 다중 스레드 환경에서 동시에 여러 인스턴스가 생성되는 것을 방지\n            synchronized (lock) {\n                if(INSTANCE == null){\n                    try {\n\n                        INSTANCE = new WebSocketClient(new URI(WEBSOCKET_URI)) {\n                            @Override\n                            public void onOpen(ServerHandshake serverHandshake) {\n                                if(count > 0){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.INFORMATION,\n                                                \" Ododoc\",\n                                                \"서버 연결 성공\",\n                                                \"서버와의 연결에 성공했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                }\n                                count ++;\n                            }\n\n                            @Override\n                            public void onMessage(String s) {}\n\n                            @Override\n                            public void onClose(int i, String s, boolean b) {\n                                if(count > 0){\n                                    BuildResultSender.setINSTANCE(null);\n                                    Platform.runLater(() -> {\n                                        Alert alert = WebSocketReConnectAlert.makeAlert();\n                                        Optional<ButtonType> result = alert.showAndWait();\n                                        if(result.isPresent() && result.get() == ButtonType.OK) {\n                                            getINSTANCE();\n                                        }\n                                    });\n                                }\n                            }\n\n                            @Override\n                            public void onError(Exception e) {\n                                System.out.println(e.getMessage());\n                                if(enableWhenPushBtn){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.ERROR,\n                                                \" Ododoc\",\n                                                \"서버 연결 실패\",\n                                                \"서버와의 연결에 실패했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                    enableWhenPushBtn = false;\n                                }\n                            }\n                        };\n\n                        INSTANCE.connect();\n                    }catch (URISyntaxException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n\n        return INSTANCE;\n    }\n\n    public static void setINSTANCE(WebSocketClient INSTANCE) {\n        BuildResultSender.INSTANCE = INSTANCE;\n    }\n\n    public static void setEnableWhenPushBtn(boolean enableWhenPushBtn) {\n        BuildResultSender.enableWhenPushBtn = enableWhenPushBtn;\n    }\n\n    public static void sendMessage(String message) {\n        if(INSTANCE != null && INSTANCE.isOpen()){\n            INSTANCE.send(message);\n        }\n    }\n\n    public static boolean isConnected() {\n        return INSTANCE != null && INSTANCE.isOpen() ? true : false;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 58,
        "depth": 1
      }
    },
    "637e37d8-4bc2-49bf-8ddf-2df7bb965fcb": {
      "id": "637e37d8-4bc2-49bf-8ddf-2df7bb965fcb",
      "value": [
        {
          "_id": "f5f1365e-c7ed-4cb7-80d8-c038f8cc57c6",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.Disposable;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.components.ServiceManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.stream.Collectors;\n\npublic class DisposableService implements Disposable {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n\n    public DisposableService(@NotNull Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void dispose() {\n        System.out.println(\"종료: \" + project.getName());\n\n        CompletableFuture.runAsync(() -> {\n            getProjectFileList();\n            processProjectFiles();\n        }).exceptionally(ex -> {\n            ex.printStackTrace();\n            return null;\n        });\n    }\n\n    public static DisposableService getInstance(@NotNull Project project) {\n        return ServiceManager.getService(project, DisposableService.class);\n    }\n\n    private void getProjectFileList() {\n        GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n        Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n        PsiManager psiManager = PsiManager.getInstance(project);\n\n        psiFiles = files.stream()\n                .map(psiManager::findFile)\n                .collect(Collectors.toList());\n    }\n\n    private void processProjectFiles() {\n        ApplicationManager.getApplication().invokeLater(() -> {\n            if (project.isDisposed()) {\n                return;\n            }\n\n            ProjectTracker projectTracker = ProjectTracker.getInstance();\n            Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n            Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n\n            String allBeforeProjectStatus = \"\";\n            String allCurrentProjectStatus = \"\";\n\n            for (PsiFile file : psiFiles) {\n                if (beforeProjectStatus.containsKey(file.getName())) {\n                    System.out.println(\"삭제: \" + file.getName());\n                    beforeProjectStatus.remove(file.getName());\n                } else {\n                    allBeforeProjectStatus += getEncrypt(file.getName());\n                }\n\n                if (currentProjectStatus.containsKey(file.getName())) {\n                    currentProjectStatus.remove(file.getName());\n                } else {\n                    allCurrentProjectStatus += getEncrypt(file.getName());\n                }\n            }\n\n            allBeforeProjectStatus = getEncrypt(allBeforeProjectStatus);\n            allCurrentProjectStatus = getEncrypt(allCurrentProjectStatus);\n\n//            projectTracker.setAllBeforeProjectStatus(allBeforeProjectStatus);\n//            projectTracker.setAllCurrentProjectStatus(allCurrentProjectStatus);\n        });\n    }\n\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for (byte b : hashCode) {\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n        }\n\n        return result;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 67,
        "depth": 1
      }
    },
    "652736d3-8810-49f9-ba78-4cd277709d96": {
      "id": "652736d3-8810-49f9-ba78-4cd277709d96",
      "value": [
        {
          "_id": "07a51ef0-bf13-40ad-b9ca-1baa287b6ddc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nErrorFileInfo 클래스는 파일 이름, 소스 코드, 라인 정보를 갖는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 38,
        "depth": 1
      }
    },
    "6849d5b4-6649-4ad0-959a-c2bfd8a012a1": {
      "id": "6849d5b4-6649-4ad0-959a-c2bfd8a012a1",
      "value": [
        {
          "_id": "aed9fcdd-71e2-4009-9a7d-fd52145026dd",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n필수적인 핵심 서비스에만 preload=true를 사용해야 함.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 91,
        "depth": 0
      }
    },
    "684fe348-37e9-436c-a9d8-62b01875e657": {
      "id": "684fe348-37e9-436c-a9d8-62b01875e657",
      "value": [
        {
          "_id": "b00ba8ad-7ad8-4b59-9265-898e5b767c46",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifiedFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "6bdfcc9d-2269-4626-a7e1-d05236f3e2f2": {
      "id": "6bdfcc9d-2269-4626-a7e1-d05236f3e2f2",
      "value": [
        {
          "_id": "dbcc0f49-c53d-4c7d-821e-d74f73a3f37e",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 92,
        "depth": 0
      }
    },
    "7116f5a0-bae5-428b-ac06-4a87da39eae4": {
      "id": "7116f5a0-bae5-428b-ac06-4a87da39eae4",
      "value": [
        {
          "_id": "c3cc35ba-bf71-41fd-b316-ff32909198af",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CodeListener.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 85,
        "depth": 1
      }
    },
    "7421a3ec-adda-4ccd-bd25-1356591aa41e": {
      "id": "7421a3ec-adda-4ccd-bd25-1356591aa41e",
      "value": [
        {
          "_id": "1a5f038e-df78-41b9-b3df-1eff648450a2",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OpenOdodocPlugin.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "74b6616e-3834-433d-bdbc-1d1613118615": {
      "id": "74b6616e-3834-433d-bdbc-1d1613118615",
      "value": [
        {
          "_id": "6560cde8-0027-4be6-b310-776e80b32449",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n로그인 버튼을 눌러서 카카오, 네이버, 구글 등의 서비스로 로그인하여 애플리케이션을 이용할 수 있는 창이 표시됩니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 65,
        "depth": 1
      }
    },
    "74c80418-50e4-46e7-aa08-19bb905d24a7": {
      "id": "74c80418-50e4-46e7-aa08-19bb905d24a7",
      "value": [
        {
          "_id": "30570750-6e3c-4e2d-b8f4-16de51e566cc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nConnectedFileManager 클래스는 싱글톤 패턴으로 구현되어 있으며 디렉토리 ID를 관리한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 41,
        "depth": 1
      }
    },
    "7665c576-bf31-4b90-a013-061292755e7c": {
      "id": "7665c576-bf31-4b90-a013-061292755e7c",
      "value": [
        {
          "_id": "ef23f73b-e105-4ed4-b62b-1c4870246e7c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ResultDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 69,
        "depth": 1
      }
    },
    "7aba450b-88d3-4aba-9f67-72a00f664e2e": {
      "id": "7aba450b-88d3-4aba-9f67-72a00f664e2e",
      "value": [
        {
          "_id": "863e4bb3-c9aa-4964-b57b-f21f5017e19a",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class RequestDto {\n    @JsonProperty\n    private String sourceApplication;\n    @JsonProperty\n    private String accessToken;\n    @JsonProperty\n    private String dataType;\n    @JsonProperty\n    private Long connectedFileId;\n    @JsonProperty\n    private String timestamp;\n    @JsonProperty\n    private Object content;\n\n    private static final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\");\n\n    public void setSourceApplication(String sourceApplication) {\n        this.sourceApplication = sourceApplication;\n    }\n\n    public void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public void setDataType(String dataType) {\n        this.dataType = dataType;\n    }\n\n    public void setConnectedFileId(Long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n\n    public void setContent(Object content) {\n        this.content = content;\n    }\n\n    public void setTimestamp(LocalDateTime timestamp) {\n        this.timestamp = timestamp.format(formatter);\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 61,
        "depth": 1
      }
    },
    "7bf71cd3-238c-40ab-b248-892ae460e744": {
      "id": "7bf71cd3-238c-40ab-b248-892ae460e744",
      "value": [
        {
          "_id": "695f9f28-6e10-43e7-bec3-00a545f898f9",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트의 파일 상태를 해시 값으로 저장하여 추적하는 기능을 제공하는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 47,
        "depth": 1
      }
    },
    "7feb41ce-a486-42ed-a30a-69adb7d01b65": {
      "id": "7feb41ce-a486-42ed-a30a-69adb7d01b65",
      "value": [
        {
          "_id": "44077160-52df-4623-aa5e-752957af12d7",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nBuildResultSender 클래스는 WebSocket을 사용하여 서버와의 연결을 관리하고 메시지를 전송하는 기능을 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 59,
        "depth": 1
      }
    },
    "81c9e9b4-b4db-4e7b-bfa9-7c6c31d12cad": {
      "id": "81c9e9b4-b4db-4e7b-bfa9-7c6c31d12cad",
      "value": [
        {
          "_id": "2bb7b87c-cef0-41a4-9091-527225ba0931",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 84,
        "depth": 0
      }
    },
    "83c56b67-c611-49c9-bb59-33c10e67b5be": {
      "id": "83c56b67-c611-49c9-bb59-33c10e67b5be",
      "value": [
        {
          "_id": "da18ffa1-6507-4ec0-999d-624c9b62a76b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nAlert 창을 생성하는 AlertHelper 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 80,
        "depth": 1
      }
    },
    "872eb845-e5cf-4301-85b9-d165d57427a1": {
      "id": "872eb845-e5cf-4301-85b9-d165d57427a1",
      "value": [
        {
          "_id": "85a16533-50bc-45c9-a8e4-9e9a473336d3",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ModifiedFileInfo {\n\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n\n    public ModifiedFileInfo(String fileName, String sourceCode){\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "87324679-abab-4938-8039-1a89aee26a04": {
      "id": "87324679-abab-4938-8039-1a89aee26a04",
      "value": [
        {
          "_id": "f90ac31a-b8b6-45a3-8fd4-9fe74ea1795e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 54,
        "depth": 1
      }
    },
    "8964b6bc-92a0-4af9-b52a-830570bb55c1": {
      "id": "8964b6bc-92a0-4af9-b52a-830570bb55c1",
      "value": [
        {
          "_id": "e89b03f5-6f34-45df-bf75-c73276323ba5",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class DirectoryInfoManager {\n\n    private long rootId;\n    private String title;\n\n    private DirectoryInfoManager() {}\n\n    private static class DirectoryInfoManagerHolder {\n        private static final DirectoryInfoManager INSTANCE = new DirectoryInfoManager();\n    }\n\n    public static DirectoryInfoManager getInstance() {\n        return DirectoryInfoManagerHolder.INSTANCE;\n    }\n\n    public synchronized long getRootId() {\n        return rootId;\n    }\n    public synchronized String getTitle() {\n        return title;\n    }\n\n    public synchronized void setRootId(long rootId) {\n        this.rootId = rootId;\n    }\n\n    public synchronized void setTitle(String title) {\n        this.title = title;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 73,
        "depth": 1
      }
    },
    "8cd09bbb-8ab6-42a6-9aad-32ddf6d157ed": {
      "id": "8cd09bbb-8ab6-42a6-9aad-32ddf6d157ed",
      "value": [
        {
          "_id": "59145e9f-d7c5-4b11-998d-488403d30c27",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OauthLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "8d788819-7cb4-4dfa-96e4-9c5d26994690": {
      "id": "8d788819-7cb4-4dfa-96e4-9c5d26994690",
      "value": [
        {
          "_id": "22781173-0d24-442d-8294-a03c6ca85721",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\n\npublic class BuildResultInfo {\n\n    private boolean isSuccess;\n    private long connectedFileId;\n    private String contents;\n    private String timeStamp;\n    private List<ModifiedFileInfo> modifiedFiles;\n\n    public String getTimeStamp() {\n        return timeStamp;\n    }\n\n    public void setTimeStamp(String timeStamp) {\n        this.timeStamp = timeStamp;\n    }\n\n    public String getContents() {\n        return contents;\n    }\n\n    public void setContents(String contents) {\n        this.contents = contents;\n    }\n\n    public boolean isSuccess() {\n        return isSuccess;\n    }\n\n    public void setSuccess(boolean success) {\n        isSuccess = success;\n    }\n\n    public long getConnectedFileId() {\n        return connectedFileId;\n    }\n\n    public void setConnectedFileId(long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n    public List<ModifiedFileInfo> getModifiedFiles() {\n        return modifiedFiles;\n    }\n\n    public void setModifiedFiles(List<ModifiedFileInfo> modifiedFiles) {\n        this.modifiedFiles = modifiedFiles;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "8dd6b42b-a855-4438-a5c2-ce6cb63fb8af": {
      "id": "8dd6b42b-a855-4438-a5c2-ce6cb63fb8af",
      "value": [
        {
          "_id": "649267e2-7ec3-4784-a717-23804654e64f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nTokenManager는 싱글톤 패턴으로 구현된 클래스로, 액세스 토큰과 리프레시 토큰을 관리하며 동기화된 방식으로 값을 설정하고 반환한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 77,
        "depth": 1
      }
    },
    "939d4478-5e5f-4751-b0a9-63899c31ad46": {
      "id": "939d4478-5e5f-4751-b0a9-63899c31ad46",
      "value": [
        {
          "_id": "daa007ac-94b5-4565-a00b-dabc2b6e4c2b",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nRequestDto는 sourceApplication, accessToken, dataType, connectedFileId, timestamp 및 content를 포함하는 객체이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 62,
        "depth": 1
      }
    },
    "946665e4-252f-4d0f-9640-5e8a77f4c4d9": {
      "id": "946665e4-252f-4d0f-9640-5e8a77f4c4d9",
      "value": [
        {
          "_id": "47efddaa-3fcf-4c4b-8b3c-c3d90ed09bd7",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifyRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "97cb70d4-8060-42c8-99d4-01e97b66bce9": {
      "id": "97cb70d4-8060-42c8-99d4-01e97b66bce9",
      "value": [
        {
          "_id": "f5bba23d-f352-406c-8302-574ca4bada11",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.entity;\n\npublic class FileInfo {\n\n    private Long id;\n    private String name;\n    private String type;\n\n    public FileInfo(Long id, String name, String type) {\n        this.id = id;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    @Override\n    public String toString() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 52,
        "depth": 1
      }
    },
    "9b24cb16-66c4-4ec6-a606-f70c61c1201d": {
      "id": "9b24cb16-66c4-4ec6-a606-f70c61c1201d",
      "value": [
        {
          "_id": "6be51488-22b3-4526-ab31-840ca78cc553",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n수정 요청을 위한 DTO 클래스로, id와 이름 정보를 가지고 있다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "9c50c79e-8e25-4ad8-ba16-0a981c5cd739": {
      "id": "9c50c79e-8e25-4ad8-ba16-0a981c5cd739",
      "value": [
        {
          "_id": "7eaba1c2-b644-41d2-a372-41d9356d0246",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 81,
        "depth": 0
      }
    },
    "9dfe0371-d9bb-4185-b5f6-8f3dc515eda6": {
      "id": "9dfe0371-d9bb-4185-b5f6-8f3dc515eda6",
      "value": [
        {
          "_id": "a089776b-19bd-4fae-b149-ef35bbaf3be6",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 51,
        "depth": 1
      }
    },
    "a2c2285e-f2cf-418f-8698-e2b74bfb7ecb": {
      "id": "a2c2285e-f2cf-418f-8698-e2b74bfb7ecb",
      "value": [
        {
          "_id": "b13bdd3f-7b74-45d7-a8c2-61a08e59edf5",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender.alert;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.stage.Stage;\n\npublic class WebSocketReConnectAlert {\n\n    public static Alert makeAlert() {\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setTitle(\" Ododoc\");\n        alert.setHeaderText(\"서버 연결 실패\");\n        alert.setContentText(\"Ododoc 서비스를 이용하려면 서버와의 연결이 필요합니다.\\n다시 시도하시겠습니까?\");\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(\"/image/button/icon.png\")));\n        ImageView warningIcon = new ImageView(new Image(WebSocketReConnectAlert.class.getResourceAsStream(\"/image/button/warning.png\")));\n        alert.setGraphic(warningIcon);\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "a2dbbb3e-de60-4c7d-883c-c9a6c17e0527": {
      "id": "a2dbbb3e-de60-4c7d-883c-c9a6c17e0527",
      "value": [
        {
          "_id": "23c7da6b-e397-48e5-af94-7a1285b75de9",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryInfoManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 72,
        "depth": 1
      }
    },
    "a2eb37fd-7316-425d-bbd0-9f48f74a980e": {
      "id": "a2eb37fd-7316-425d-bbd0-9f48f74a980e",
      "value": [
        {
          "_id": "91fbed82-81ad-4a09-b066-ae6e9dc60260",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectTracker.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 45,
        "depth": 1
      }
    },
    "a98e0a56-e748-4250-972c-184da00ce19f": {
      "id": "a98e0a56-e748-4250-972c-184da00ce19f",
      "value": [
        {
          "_id": "a2b2a635-3692-486a-ad9f-1073e2040198",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.CreateRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.DirectoryDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.control.*;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseButton;\nimport javafx.scene.layout.BorderPane;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\nimport reactor.core.publisher.Mono;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\n\npublic class DirectoryFrame extends Application {\n\n    private Long currentDirectoryId;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n    private TreeView<FileInfo> treeView;\n    private ContextMenu folderContextMenu = new ContextMenu();\n    private ContextMenu fileContextMenu = new ContextMenu();\n    private Stage stage;\n\n    @Override\n    public void start(Stage initStage) {\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n        ResultDto resultDto = retrieveDirectory(directoryInfoManager.getRootId()).block();\n        this.stage = initStage;\n        // 제목 설정\n        stage.setTitle(\" \" + directoryInfoManager.getTitle());\n        currentDirectoryId = directoryInfoManager.getRootId();\n\n        // 오른쪽 마우스 이벤트 목록 생성\n        makeContextMenu();\n\n        // 디렉토리 UI 생성\n        TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n        invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n\n        treeView = new TreeView<>(invisibleRoot);\n        treeView.setShowRoot(false);\n        treeView.setEditable(true);\n        treeView.setCellFactory(tv -> new FileAndFolderTreeCell(folderContextMenu, fileContextMenu, stage, this::refreshDirectoryView));\n        treeView.setOnMouseClicked(event -> {\n            // 오른쪽 마우스 클릭 시 빈 공간 일 경우 파일 및 폴더 생성\n            if (event.getButton() == MouseButton.SECONDARY) {\n                if(treeView.getSelectionModel().getSelectedItem() == null){\n                    folderContextMenu.show(treeView, event.getScreenX(), event.getScreenY());\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                } else{\n                    currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                }\n            } else {\n                folderContextMenu.hide();\n            }\n\n            // 왼쪽 마우스 클릭 시\n            if(event.getButton() == MouseButton.PRIMARY){\n                // 빈공간일 경우 폴더 및 파일을 선택 비활성화\n                if(event.getTarget() instanceof TreeCell<?> && ((TreeCell) event.getTarget()).isEmpty()){\n                    treeView.getSelectionModel().clearSelection();\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                }\n                else{\n                    if(treeView.getSelectionModel().getSelectedItems().isEmpty()){\n                        currentDirectoryId = directoryInfoManager.getRootId();\n                    }\n                    else{\n                        currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                    }\n                }\n            }\n        });\n\n        Button refreshButton = new Button();\n        ImageView refreshIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/refresh.png\")));\n        refreshButton.setGraphic(refreshIcon);\n        refreshButton.setTooltip(new Tooltip(\"새로고침\"));\n        refreshButton.setOnAction(e -> refreshDirectoryView());\n\n        Button connectButton = new Button();\n        ImageView connectIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/connect.png\")));\n        connectButton.setGraphic(connectIcon);\n        connectButton.setTooltip(new Tooltip(\"서버 연결\"));\n        connectButton.setOnAction(e -> connectWebSocket());\n\n        Button homeButton = new Button();\n        ImageView homeIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/home.png\")));\n        homeButton.setGraphic(homeIcon);\n        homeButton.setTooltip(new Tooltip(\"Ododoc 홈페이지로 이동\"));\n        homeButton.setOnAction(e -> openWebPage());\n\n//        Button logoutButton = new Button();\n//        ImageView logoutIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logout.png\")));\n//        logoutButton.setGraphic(logoutIcon);\n//        logoutButton.setTooltip(new Tooltip(\"로그아웃\"));\n//        logoutButton.setOnAction(e -> logout());\n\n        ToolBar toolBar = new ToolBar();\n        toolBar.getItems().addAll(homeButton, connectButton, refreshButton);\n        BorderPane root = new BorderPane();\n        root.setBottom(toolBar);\n        root.setCenter(treeView);\n\n\n        Scene scene = new Scene(root, 300, 500);\n        stage.setScene(scene);\n        stage.show();\n    }\n\n    private Mono<ResultDto> retrieveDirectory(long rootId) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        return webClient.get()\n                .uri(\"/\" + rootId)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .doOnSuccess(result -> {\n                    // 성공했을 경우\n                    if(result.getStatus() == 200){\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        result.setData(objectMapper.convertValue(result.getData(), DirectoryDto.class));\n                    }\n                    // 토큰이 만료되었을 경우\n                    else if(result.getStatus() == 401){\n                        result.setData(new DirectoryDto());\n                        refreshAccessToken();\n                        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId());\n                    }\n                    else{\n                        result.setData(new DirectoryDto());\n                        showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\");\n                    }\n                })\n                .doOnError(error -> showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\"));\n    }\n\n    private TreeItem<FileInfo> LoadDirectory(List<DirectoryDto> children, TreeItem<FileInfo> invisibleRoot) {\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> fileItem = new TreeItem<>(fileInfo);\n            fileItem.setExpanded(true);\n            DFS(dto.getChildren(), fileItem);\n            invisibleRoot.getChildren().add(fileItem);\n        }\n\n        return invisibleRoot;\n    }\n\n    private void DFS(List<DirectoryDto> children, TreeItem<FileInfo> fileItem) {\n\n        if(children == null){\n            return;\n        }\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> childFileItem = new TreeItem<>(fileInfo);\n            fileItem.getChildren().add(childFileItem);\n\n            DFS(dto.getChildren(), childFileItem);\n        }\n\n    }\n\n    private void makeContextMenu() {\n        MenuItem addFolder = new MenuItem(\"폴더 생성\");\n        MenuItem addFile = new MenuItem(\"파일 생성\");\n        folderContextMenu.getItems().addAll(addFolder, addFile);\n\n        MenuItem connectFile = new MenuItem(\"파일 연동\");\n        fileContextMenu.getItems().add(connectFile);\n\n        addFolder.setOnAction(e -> createFolderOrFile(\"folder\"));\n        addFile.setOnAction(e -> createFolderOrFile(\"file\"));\n        connectFile.setOnAction(e -> connectFile());\n    }\n\n    private void connectFile() {\n        ConnectedFileManager connectedFileManager = ConnectedFileManager.getInstance();\n        connectedFileManager.setDirectoryId(currentDirectoryId);\n\n        if(connectedFileManager.getDirectoryId() != -1){\n            showAlert(Alert.AlertType.INFORMATION, \"연동 성공\", \"파일과 연동에 성공하였습니다.\");\n        }\n        else{\n            showAlert(Alert.AlertType.WARNING, \"연동 실패\", \"파일과의 연동에 실패하였습니다.\");\n        }\n    }\n\n    private void createFolderOrFile(String type){\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        CreateRequestDto createRequestDto = new CreateRequestDto(currentDirectoryId, \"\", type);\n\n        webClient.post()\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        refreshDirectoryView();\n                    }\n                    else if (result.getStatus() == 401) {\n                        refreshAccessToken();\n                        showAlert(Alert.AlertType.WARNING, \"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                    else {\n                        showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                }, error -> {\n                    showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                    refreshDirectoryView();\n                });\n    }\n\n    private void refreshDirectoryView() {\n        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId()).subscribe(resultDto -> {\n            Platform.runLater(() -> {\n                TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n                invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n                treeView.setRoot(invisibleRoot);\n                treeView.setShowRoot(false);\n                treeView.refresh();\n            });\n        });\n    }\n\n    private void showAlert(Alert.AlertType type, String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    type,\n                    \" Ododoc\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private void connectWebSocket(){\n        if(BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.INFORMATION,\n                        \" Ododoc\",\n                        \"서버 연결 확인\",\n                        \"이미 서버와 연결이 되어 있습니다.\",\n                        \"/image/button/icon.png\"\n                );\n                alert.showAndWait();\n            });\n        }\n\n        else {\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    BuildResultSender.setEnableWhenPushBtn(true);\n                    BuildResultSender.setINSTANCE(null);\n                    BuildResultSender.getINSTANCE();\n                }\n            });\n        }\n\n    }\n\n    private void openWebPage(){\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n//    private void logout(){\n//        TokenManager.getInstance().setRefreshToken(null);\n//        TokenManager.getInstance().setAccessToken(null);\n//    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 19,
        "depth": 1
      }
    },
    "a9de088d-7fe9-4c30-bdee-ac00b48f318f": {
      "id": "a9de088d-7fe9-4c30-bdee-ac00b48f318f",
      "value": [
        {
          "_id": "df40dd79-88f6-4cc7-97ad-d241bbd68bcc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n이 코드는 IntelliJ 플러그인이 시작될 때 로그인 여부를 확인하고 코드 변화를 감지하는 리스너를 추가하는 기능을 수행합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "a9dedb5a-84ac-4775-b5d8-f2e3212d34f4": {
      "id": "a9dedb5a-84ac-4775-b5d8-f2e3212d34f4",
      "value": [
        {
          "_id": "0a2342be-d44f-4cbe-bd7c-5f0b858bee51",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n자바FX TreeCell 클래스를 확장하여 파일 및 폴더 트리 셀을 구현하고, 이름 수정 기능을 추가한 코드입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 44,
        "depth": 1
      }
    },
    "ab552f1d-9bef-43bd-a507-3d049f90aefd": {
      "id": "ab552f1d-9bef-43bd-a507-3d049f90aefd",
      "value": [
        {
          "_id": "714548a2-1fac-48a9-b031-08c51561c61c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nIntelliJ에서 빌드 결과 및 오류를 추적하여 서버로 전송하는 기능을 하는 CodeListener 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "af098933-f8cc-4f73-a9f0-7c4a10d150a7": {
      "id": "af098933-f8cc-4f73-a9f0-7c4a10d150a7",
      "value": [
        {
          "_id": "36f484e6-18d2-43ad-ad66-8e5840581406",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 플러그인을 실행하여 로그인 상태에 따라 Directory 화면이나 로그인 화면이 열립니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 35,
        "depth": 1
      }
    },
    "aff29c77-1b72-4ab8-9866-826130438974": {
      "id": "aff29c77-1b72-4ab8-9866-826130438974",
      "value": [
        {
          "_id": "38ce6096-e1c8-4854-89fa-52b144d0653f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리와 파일을 생성하고 조회할 수 있는 프로그램이며, 서버 연결과 웹페이지 이동 기능을 제공하는 프레임입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "b021cbed-b73d-47b4-8b20-06906b5009af": {
      "id": "b021cbed-b73d-47b4-8b20-06906b5009af",
      "value": [
        {
          "_id": "b7799efa-9b45-450c-9cd3-fedd0c1f92d5",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileAndFolderTreeCell.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 42,
        "depth": 1
      }
    },
    "b05f63fe-29d9-4c5c-8304-cdf9a67af10f": {
      "id": "b05f63fe-29d9-4c5c-8304-cdf9a67af10f",
      "value": [
        {
          "_id": "be53ae76-9c25-4607-9138-460dbc22f780",
          "type": "bulleted-list",
          "children": [
            {
              "text": "StartUpActivity.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 30,
        "depth": 1
      }
    },
    "b06e1d25-0b40-445e-bc55-a7aa2eed6805": {
      "id": "b06e1d25-0b40-445e-bc55-a7aa2eed6805",
      "value": [
        {
          "_id": "cd4be071-7ba5-4409-a114-6eaf44c055a5",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class CreateRequestDto {\n\n    private Long parentId;\n    private String name;\n    private String type;\n\n    public CreateRequestDto(Long parentId, String name, String type) {\n        this.parentId = parentId;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getParentId() {\n        return parentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getType() {\n        return type;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 49,
        "depth": 1
      }
    },
    "b4cf052a-fe84-465a-836b-69036f0b9168": {
      "id": "b4cf052a-fe84-465a-836b-69036f0b9168",
      "value": [
        {
          "_id": "4939ee65-4be8-4421-8fa2-53c3fb89d889",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nResultDto는 상태 코드와 데이터를 가지고 있는 객체이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 71,
        "depth": 1
      }
    },
    "b86c0c97-c0f4-4f0a-b0f6-c40952c605c6": {
      "id": "b86c0c97-c0f4-4f0a-b0f6-c40952c605c6",
      "value": [
        {
          "_id": "51107461-7ceb-436e-b5e5-4d1900e5a44e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.entity;\n\nimport com.intellij.psi.PsiFile;\n\npublic class ProjectInfo implements Cloneable{\n\n    private PsiFile psiFile;\n    private String hash;\n    private String sourceCode;\n\n    public ProjectInfo(PsiFile psiFile, String hash, String sourceCode) {\n        this.psiFile = psiFile;\n        this.hash = hash;\n        this.sourceCode = sourceCode;\n    }\n\n    public PsiFile getPsiFile() {\n        return psiFile;\n    }\n\n    public String getHash() {\n        return hash;\n    }\n\n    public String getSourceCode() {\n        return sourceCode;\n    }\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "bde062f6-c777-40bf-9db0-7cd2a8514594": {
      "id": "bde062f6-c777-40bf-9db0-7cd2a8514594",
      "value": [
        {
          "_id": "c8ffe5c9-ddb5-4da9-9768-b120931714d3",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "c1144797-13d3-4029-bcc8-edbf8889fa31": {
      "id": "c1144797-13d3-4029-bcc8-edbf8889fa31",
      "value": [
        {
          "_id": "80cabe5a-3cdb-4853-8d32-9f652c6f6544",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.alert;\n\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.stage.Stage;\n\npublic class AlertHelper {\n\n    public static Alert makeAlert(Alert.AlertType alertType, String title, String header, String content, String imagePath) {\n        Alert alert = new Alert(alertType);\n        alert.setTitle(title);\n        alert.setHeaderText(header);\n        alert.setContentText(content);\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(imagePath)));\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 79,
        "depth": 1
      }
    },
    "c2234dfe-ce34-4116-a358-fe95c5a75040": {
      "id": "c2234dfe-ce34-4116-a358-fe95c5a75040",
      "value": [
        {
          "_id": "6c2e95d4-25d5-4d52-ba14-fb7173ee4c38",
          "type": "bulleted-list",
          "children": [
            {
              "text": "AlertHelper.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 78,
        "depth": 1
      }
    },
    "c3d69948-cf0c-4a11-ac2d-88fe85a776c7": {
      "id": "c3d69948-cf0c-4a11-ac2d-88fe85a776c7",
      "value": [
        {
          "_id": "9dbdec61-8576-4d57-9387-0b35f1bb641e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nDirectoryInfoManager는 rootId와 title을 관리하는 싱글톤 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 74,
        "depth": 1
      }
    },
    "c69ae036-a262-492a-98b0-e1d84ec08f92": {
      "id": "c69ae036-a262-492a-98b0-e1d84ec08f92",
      "value": [
        {
          "_id": "a872b2df-01b1-44bd-808e-a00c61403bfa",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectProvider.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 24,
        "depth": 1
      }
    },
    "caf57ccd-e87e-4657-bc02-10b24d55bd6f": {
      "id": "caf57ccd-e87e-4657-bc02-10b24d55bd6f",
      "value": [
        {
          "_id": "27342042-209e-4d7f-86ec-53b0f3efb144",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DirectoryDto {\n\n    private Long id = -1L;\n    private String name = \"\";\n    private String type = \"\";\n    private List<DirectoryDto> children = new ArrayList<>();\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    public List<DirectoryDto> getChildren() {\n        return children;\n    }\n\n    public void setChildren(List<DirectoryDto> children) {\n        this.children = children;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 55,
        "depth": 1
      }
    },
    "d0e37e2b-a884-4058-af28-c83e5e083afc": {
      "id": "d0e37e2b-a884-4058-af28-c83e5e083afc",
      "value": [
        {
          "_id": "77df2586-6f8a-40ed-9925-0702391d8b66",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 파일 변화를 추적하고 삭제된 파일을 확인하여 시큐어한 방식으로 저장하는 DisposableService 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 68,
        "depth": 1
      }
    },
    "d452bcd2-7e03-4f51-9aca-514604fbe333": {
      "id": "d452bcd2-7e03-4f51-9aca-514604fbe333",
      "value": [
        {
          "_id": "6a5a14cf-88dc-492e-807a-a64f57f9ffee",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.manager;\n\npublic class TokenManager {\n\n    private String accessToken;\n    private String refreshToken;\n\n    private TokenManager() {}\n\n    private static class TokenManagerHolder {\n        private static final TokenManager INSTANCE = new TokenManager();\n    }\n\n    public static TokenManager getInstance() {\n        return TokenManagerHolder.INSTANCE;\n    }\n\n    public synchronized String getAccessToken() {\n        return accessToken;\n    }\n\n    public synchronized String getRefreshToken() {\n        return refreshToken;\n    }\n\n    public synchronized void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public synchronized void setRefreshToken(String refreshToken) {\n        this.refreshToken = refreshToken;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 76,
        "depth": 1
      }
    },
    "d57f9ff0-488e-486e-a054-0748db64ca56": {
      "id": "d57f9ff0-488e-486e-a054-0748db64ca56",
      "value": [
        {
          "_id": "1e50ac91-58d9-4c9f-913f-3b0e689de830",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 서비스를 이용하려면 서버와의 연결이 필요하며, 연결 실패 시 다시 시도할 것을 안내하는 알림창을 만드는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 17,
        "depth": 1
      }
    },
    "d5837c2d-df00-4268-910b-0eba2a204533": {
      "id": "d5837c2d-df00-4268-910b-0eba2a204533",
      "value": [
        {
          "_id": "319b041f-dac2-4b9a-907f-cbee9cd593f7",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\npublic class ResultDto {\n\n    private int status;\n    private Object data;\n\n    public int getStatus() {\n        return status;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setStatus(int status) {\n        this.status = status;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 70,
        "depth": 1
      }
    },
    "d7139eec-c7ec-49cd-97e6-5b0912739a27": {
      "id": "d7139eec-c7ec-49cd-97e6-5b0912739a27",
      "value": [
        {
          "_id": "724d7f20-8b0d-40b9-bf6e-3b8fef6e6d5b",
          "type": "bulleted-list",
          "children": [
            {
              "text": "RequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 60,
        "depth": 1
      }
    },
    "db9fd0da-5906-46d5-8f20-50669ffbe3ff": {
      "id": "db9fd0da-5906-46d5-8f20-50669ffbe3ff",
      "value": [
        {
          "_id": "1e11cdfc-6342-46cc-92a0-18c3d0b5c623",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class MainLoginFrame extends Stage {\n\n    private static boolean isFrameVisible = false;\n\n    public MainLoginFrame() {\n        isFrameVisible = true;\n        setTitle(\" Ododoc\");\n        VBox layout = new VBox(10);\n        layout.setAlignment(Pos.CENTER);\n\n        Image windowIcon = new Image(getClass().getResourceAsStream(\"/image/button/icon.png\"));\n        getIcons().add(windowIcon);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        setOnCloseRequest(event -> {\n            if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.CONFIRMATION,\n                        \" Ododoc\",\n                        \"로그인 필요\",\n                        \"Ododoc 서비스를 이용하려면 로그인이 필요합니다.\\n정말 종료하시겠습니까?\",\n                        \"/image/button/icon.png\"\n                );\n\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() != ButtonType.OK) {\n                    event.consume();\n                }\n                else{\n                    isFrameVisible = false;\n                }\n            }\n        });\n\n        Button homeBtn = makeHomeButton();\n        Button kakaoLoginBtn = makeButton(\"kakao\"); // 카카오 로그인 버튼\n        Button naverLoginBtn = makeButton(\"naver\"); // 네이버 로그인 버튼\n        Button googleLoginBtn = makeButton(\"google\"); // 구글 로그인 버튼\n\n        layout.getChildren().addAll(homeBtn, kakaoLoginBtn, naverLoginBtn, googleLoginBtn);\n        layout.setPadding(new Insets(-15, 0, 0, 0));\n        Scene scene = new Scene(layout, 300, 400);\n        setScene(scene);\n        show();\n    }\n\n    private void onLogin(String provider) {\n        new OauthLoginFrame(this, provider);\n    }\n\n    private Button makeButton(String provider){\n        String iconImagePath = \"/image/button/\" + provider +\"_login.png\";\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(iconImagePath)));\n        btnImageView.setFitWidth(183);\n        btnImageView.setFitHeight(45);\n        Button loginBtn = new Button(\"\", btnImageView);\n        loginBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 3, 3, 3, 3;\");\n\n        String upperProvider = provider.toUpperCase();\n        loginBtn.setOnAction(e -> {\n            onLogin(upperProvider);\n        });\n\n        return loginBtn;\n    }\n\n    private Button makeHomeButton(){\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logo.png\")));\n        btnImageView.setFitWidth(184);\n        btnImageView.setFitHeight(60);\n        Button homeBtn = new Button(\"\", btnImageView);\n        homeBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 30, 0, 3, 3; -fx-border-color: transparent;\");\n\n        homeBtn.setOnAction(e -> {\n            openWebPage();\n        });\n\n        return homeBtn;\n    }\n\n    private void openWebPage() {\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n    public static boolean isFrameVisible() {\n        return isFrameVisible;\n    }\n\n\n}",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 64,
        "depth": 1
      }
    },
    "dca028ef-c47a-44b4-a7a8-df98069d8bcf": {
      "id": "dca028ef-c47a-44b4-a7a8-df98069d8bcf",
      "value": [
        {
          "_id": "b729e153-f1e2-440a-a6bc-5d63833b4701",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CodeListener.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "de5a8756-2c9c-443d-bfa6-d86a3ab41a6d": {
      "id": "de5a8756-2c9c-443d-bfa6-d86a3ab41a6d",
      "value": [
        {
          "_id": "babaeeb7-b104-408e-91d7-7f84d755601f",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "df6f65a5-1e7b-4c92-af81-f5880d13fff8": {
      "id": "df6f65a5-1e7b-4c92-af81-f5880d13fff8",
      "value": [
        {
          "_id": "ba2054af-b9de-49f1-9b07-168b425ec283",
          "type": "bulleted-list",
          "children": [
            {
              "text": "TokenManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 75,
        "depth": 1
      }
    },
    "e31ab607-c1fd-493a-887d-c152117b7900": {
      "id": "e31ab607-c1fd-493a-887d-c152117b7900",
      "value": [
        {
          "_id": "68e99da6-5352-4c03-9988-9e4ffb0988a2",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 정보를 나타내는 클래스.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "e4d97017-c684-4e18-b386-15e585044c94": {
      "id": "e4d97017-c684-4e18-b386-15e585044c94",
      "value": [
        {
          "_id": "a107ea71-3f24-4126-a055-cea90ba2ae8e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.intellij.execution.ExecutionListener;\nimport com.intellij.execution.process.ProcessEvent;\nimport com.intellij.execution.process.ProcessHandler;\nimport com.intellij.execution.process.ProcessListener;\nimport com.intellij.execution.process.ProcessOutputTypes;\nimport com.intellij.execution.runners.ExecutionEnvironment;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.diagnostic.Logger;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.util.Key;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.tracker.dto.BuildResultInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ErrorFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ModifiedFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.RequestDto;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class CodeListener implements ExecutionListener {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n    private List<ErrorFileInfo> errorFiles = new ArrayList<>();\n    private Map<String, ProjectInfo> currentProjectInfo = new HashMap<>();\n    private boolean capturingError;\n    private boolean errorFlag;\n\n    private static final Logger LOG = Logger.getInstance(CodeListener.class);\n    private static final Pattern ANSI_ESCAPE_PATTERN = Pattern.compile(\"\\u001B\\\\[[;\\\\d]*m\");\n\n    public CodeListener(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void processStarted(@NotNull String executorId, @NotNull ExecutionEnvironment env, @NotNull ProcessHandler handler) {\n        CompletableFuture.runAsync(() -> getCurrentProject())\n                .thenRun(this::initializeProjectTracker)\n                .thenRun(() -> {\n                    // 파일 연동이 되어있다면\n                    if (ConnectedFileManager.getInstance().getDirectoryId() != 0L) {\n                        startSignal();\n                    } else {\n                        Platform.runLater(() -> {\n                            Alert alert = AlertHelper.makeAlert(\n                                    Alert.AlertType.WARNING,\n                                    \" Ododoc\",\n                                    \"파일 연동 오류\",\n                                    \"파일이 연동되지 않았습니다.\\n해당 결과는 새로 생성된 파일에 기록됩니다.\",\n                                    \"/image/button/icon.png\"\n                            );\n                            alert.showAndWait();\n                        });\n                    }\n\n                    handler.addProcessListener(new OdodocProcessListener());\n                });\n    }\n\n    private void getCurrentProject() {\n        psiFiles = new ArrayList<>();\n        currentProjectInfo.clear();\n        ApplicationManager.getApplication().executeOnPooledThread(() -> {\n            ApplicationManager.getApplication().runReadAction(() -> {\n                GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n                Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n                PsiManager psiManager = PsiManager.getInstance(project);\n                psiFiles = files.stream()\n                        .map(psiManager::findFile)\n                        .collect(Collectors.toList());\n\n                psiFiles.forEach(file ->\n                        currentProjectInfo.put(file.getName(), new ProjectInfo(file, \"\", file.getText())));\n            });\n        });\n    }\n\n    private void initializeProjectTracker() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.currentHashStatus(project);\n    }\n\n    private void startSignal() {\n        RequestDto requestDto = new RequestDto();\n        requestDto.setSourceApplication(\"INTELLIJ\");\n        requestDto.setDataType(\"SIGNAL\");\n        requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n        requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n        requestDto.setTimestamp(LocalDateTime.now());\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            String output = objectMapper.writeValueAsString(requestDto);\n            BuildResultSender.sendMessage(output);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private List<ModifiedFileInfo> getModifiedFiles() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n\n        Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n        Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n        String allBeforeProjectStatus = projectTracker.getAllBeforeProjectStatus();\n        String allCurrentProjectStatus = projectTracker.getAllCurrentProjectStatus();\n\n        String before, current= \"\";\n        boolean isChange = false; // 변경된 파일이 있는지 확인\n        List<ModifiedFileInfo> modifiedFileInfoList = new ArrayList<>();\n\n        // 파일을 추가하거나 삭제하지 않은 경우\n        if(allBeforeProjectStatus.equals(allCurrentProjectStatus)){\n            for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n                before = entry.getValue().getHash();\n                current = currentProjectStatus.get(entry.getKey()).getHash();\n                // 바뀐 파일이라면 해당 파일\n                if(!before.equals(current)){\n                    isChange = true;\n                    PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                    addModifiedFile(modifiedFileInfoList, modifiedFile);\n                }\n            }\n        }\n\n        // 파일을 추가하거나 삭제한 경우\n        else{\n            int beforeSize = beforeProjectStatus.size();\n            int currentSize = currentProjectStatus.size();\n\n            // 추가한 경우\n            if(beforeSize <= currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : currentProjectStatus.entrySet()){\n\n                    // 추가된 파일이 아닐 경우\n                    if(beforeProjectStatus.containsKey(entry.getKey())){\n                        before = beforeProjectStatus.get(entry.getKey()).getHash();\n                        current = entry.getValue().getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = entry.getValue().getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 추가된 파일일 경우\n                    else{\n                        isChange = true;\n                        PsiFile modifiedFile = entry.getValue().getPsiFile();\n                        addModifiedFile(modifiedFileInfoList, modifiedFile);\n                    }\n\n                }\n            }\n            // 삭제한 경우\n            else if(beforeSize > currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n\n                    // 삭제된 파일이 아닐 경우\n                    if(currentProjectStatus.containsKey(entry.getKey())){\n                        before = entry.getValue().getHash();\n                        current = currentProjectStatus.get(entry.getKey()).getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 삭제된 파일일 경우\n                    else{\n                        isChange = true;\n                    }\n\n                }\n            }\n        }\n\n        // 변경된 파일이 있을 경우 현재 상태를 전 상태로 돌리기 (깊은 복사 )\n        if (isChange){\n            deepCopy(currentProjectStatus);\n        }\n\n        return modifiedFileInfoList;\n\n    }\n\n    private void addModifiedFile(List<ModifiedFileInfo> modifiedFileInfoList, PsiFile modifiedFile) {\n        String fileName = modifiedFile.getName();\n        String sourceCode = modifiedFile.getText();\n        modifiedFileInfoList.add(new ModifiedFileInfo(fileName, sourceCode));\n    }\n\n    private void deepCopy(Map<String, ProjectInfo> currentProjectStatus) {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.setBeforeProjectStatus(\n                currentProjectStatus.entrySet().stream()\n                        .collect(Collectors.toMap(Map.Entry::getKey, e -> {\n                            try {\n                                return (ProjectInfo) e.getValue().clone();\n                            } catch (CloneNotSupportedException ex) {\n                                throw new RuntimeException(ex);\n                            }\n                        }))\n        );\n    }\n\n    private class OdodocProcessListener implements ProcessListener {\n        StringBuilder allOutputLog = new StringBuilder();\n        StringBuilder errorLog = new StringBuilder();\n        StringBuilder stdOutLog = new StringBuilder();\n\n        @Override\n        public void processTerminated(@NotNull ProcessEvent event) {\n            RequestDto requestDto = new RequestDto();\n            BuildResultInfo buildResultInfo = new BuildResultInfo();\n\n            requestDto.setSourceApplication(\"INTELLIJ\");\n            requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n            requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n            requestDto.setTimestamp(LocalDateTime.now());\n\n            if (errorFlag) {\n                buildResultInfo.setDetails(errorLog.toString());\n                if (errorFiles.size() > 1) {\n                    buildResultInfo.setErrorFile(errorFiles.get(0));\n                }\n                buildResultInfo.setModifiedFiles(getModifiedFiles());\n\n                requestDto.setDataType(\"ERROR\");\n                requestDto.setContent(buildResultInfo);\n            } else {\n                buildResultInfo.setDetails(stdOutLog.toString());\n\n                List<ModifiedFileInfo> temp = getModifiedFiles();\n                buildResultInfo.setModifiedFiles(temp);\n\n                requestDto.setDataType(\"OUTPUT\");\n                requestDto.setContent(buildResultInfo);\n            }\n\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                String output = objectMapper.writeValueAsString(requestDto);\n                System.out.println(output);\n                BuildResultSender.sendMessage(output);\n            } catch (JsonProcessingException e) {\n                throw new RuntimeException(e);\n            }\n\n            allOutputLog.setLength(0);\n            errorLog.setLength(0);\n            stdOutLog.setLength(0);\n            errorFiles = new ArrayList<>();\n            errorFlag = false;\n            capturingError = false;\n        }\n\n        @Override\n        public void onTextAvailable(@NotNull ProcessEvent event, @NotNull Key outputType) {\n            String text = removeAnsiEscapeCodes(event.getText());\n\n            LOG.info(\"Output type: \" + outputType + \" Text: \" + text);\n            if (outputType.equals(ProcessOutputTypes.STDERR)) {\n                errorFlag = true;\n                errorLog.append(text);\n            }\n\n            else if (outputType.equals(ProcessOutputTypes.STDOUT)) {\n                if (text.contains(\"ERROR\")) {\n                    LOG.info(\"에러감지 !!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n                    errorFlag = true;\n                    errorLog.append(text);\n                    capturingError = true;\n                }\n                else if (capturingError) {\n                    if (text.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}\\\\+\\\\d{2}:\\\\d{2} .*\")) {\n                        capturingError = false;\n                    }\n                    else {\n                        errorLog.append(text);\n                        Pattern pattern = Pattern.compile(\"\\\\(([^)]+):(\\\\d+)\\\\)\");\n                        Matcher matcher = pattern.matcher(text);\n                        if (matcher.find()) {\n                            if (currentProjectInfo.containsKey(matcher.group(1))) {\n                                ProjectInfo projectInfo = currentProjectInfo.get(matcher.group(1));\n                                String fileName = projectInfo.getPsiFile().getName();\n                                String sourceCode = projectInfo.getSourceCode();\n                                int line = Integer.parseInt(matcher.group(2));\n                                errorFiles.add(new ErrorFileInfo(fileName, sourceCode, line));\n                            }\n                        }\n                    }\n                }\n                else {\n                    stdOutLog.append(text);\n                }\n            }\n            allOutputLog.append(text);\n        }\n    }\n\n    public static String removeAnsiEscapeCodes(String input) {\n        return ANSI_ESCAPE_PATTERN.matcher(input).replaceAll(\"\");\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "ea608fd2-6718-4bba-8acc-d0510e4c40d8": {
      "id": "ea608fd2-6718-4bba-8acc-d0510e4c40d8",
      "value": [
        {
          "_id": "31a4fbf2-1090-4d9c-b818-7b736d36e952",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.startup.ProjectActivity;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport kotlin.Unit;\nimport kotlin.coroutines.Continuation;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;\n\npublic class StartUpActivity implements ProjectActivity {\n    private static boolean javafxInitialized = false;\n\n\n    @Nullable\n    @Override\n    public Object execute(@NotNull Project project, @NotNull Continuation<? super Unit> continuation) {\n        TokenManager tokenManager = TokenManager.getInstance();\n        ProjectProvider projectProvider = ProjectProvider.getInstance();\n        projectProvider.getProjects().offer(project);\n//        project.getService(DisposableService.class);\n        initializeJavaFXPlatform();\n        checkAndAddCodeListener(tokenManager, projectProvider);\n\n        return null;\n    }\n\n\n\n    private synchronized void initializeJavaFXPlatform() {\n        // JavaFX 플랫폼 초기화 상태 체크 및 조건부 초기화\n        if(!javafxInitialized){\n            Platform.startup(() -> {\n                javafxInitialized = true;\n                Platform.setImplicitExit(false);\n                new MainLoginFrame();\n            });\n        }\n    }\n\n    private void checkAndAddCodeListener(TokenManager tokenManager, ProjectProvider projectProvider) {\n        if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n//            showLoginAlert();\n        }\n        else{\n            addCodeListener(projectProvider);\n        }\n    }\n\n    private void showLoginAlert() {\n        Platform.runLater(() -> {\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"Ododoc IntelliJ Plugin\",\n                    \"로그인 필요\",\n                    \"자동 정리 기능을 사용하려면 로그인이 필요합니다.\",\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n            }\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 31,
        "depth": 1
      }
    },
    "ea8f4b4f-b2c6-4895-a2c0-d2a09c1108ca": {
      "id": "ea8f4b4f-b2c6-4895-a2c0-d2a09c1108ca",
      "value": [
        {
          "_id": "e84b2072-1562-4f20-9e36-4e700ad3c1cc",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DisposableService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 66,
        "depth": 1
      }
    },
    "ec9971ed-b912-4d1a-88b8-c890defe7dfc": {
      "id": "ec9971ed-b912-4d1a-88b8-c890defe7dfc",
      "value": [
        {
          "_id": "db2a2e90-a037-4da3-8cc0-5e87708c8c4a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "MainLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 63,
        "depth": 1
      }
    },
    "f2129f80-36e4-4d86-8535-90cc42dfb026": {
      "id": "f2129f80-36e4-4d86-8535-90cc42dfb026",
      "value": [
        {
          "_id": "4561902a-a6eb-4e5d-be58-00c54261fe33",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ConnectedFileManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 39,
        "depth": 1
      }
    },
    "f387ea39-c7a2-46e7-99a6-da292053883c": {
      "id": "f387ea39-c7a2-46e7-99a6-da292053883c",
      "value": [
        {
          "_id": "0221f313-d76e-48fc-9f97-cc3e7afd7592",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트를 제공하는 싱글톤 클래스이며, 큐를 사용하여 프로젝트를 관리한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "f4a4832d-fb3c-4b44-b4b4-f9bd25567a6e": {
      "id": "f4a4832d-fb3c-4b44-b4b4-f9bd25567a6e",
      "value": [
        {
          "_id": "da367747-621a-4435-a575-e3bcb69d8dd4",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 88,
        "depth": 0
      }
    },
    "f670b3d8-494f-449f-b7db-39af9d5806d6": {
      "id": "f670b3d8-494f-449f-b7db-39af9d5806d6",
      "value": [
        {
          "_id": "4eb084fe-1f77-467f-b309-3f314906adfb",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nProjectInfo 클래스는 PsiFile, hash, sourceCode 필드를 가지고 있으며 이를 통해 프로젝트 정보를 저장하고 관리한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "fc74036c-5723-47c4-9c05-a0801639ab28": {
      "id": "fc74036c-5723-47c4-9c05-a0801639ab28",
      "value": [
        {
          "_id": "ace67327-d11e-42eb-9cbb-d7d02c17bb2d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nBuild 결과 정보를 담고 있는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 23,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a16f2e7f26a6e57b59b27"
  },
  "directoryId": 343,
  "lastOrder": 87,
  "content": {
    "006307e0-4894-4dff-9ee9-cf0233192a0e": {
      "id": "006307e0-4894-4dff-9ee9-cf0233192a0e",
      "value": [
        {
          "_id": "663f9c4f-cad4-496c-98eb-c95334670a9c",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ConnectedFileManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 39,
        "depth": 1
      }
    },
    "036f7d36-2012-4be9-8cbc-8208d9ef1236": {
      "id": "036f7d36-2012-4be9-8cbc-8208d9ef1236",
      "value": [
        {
          "_id": "bf7502f1-ec1b-4d1e-8945-3845dbabd366",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.CreateRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.DirectoryDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.control.*;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseButton;\nimport javafx.scene.layout.BorderPane;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\nimport reactor.core.publisher.Mono;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\n\npublic class DirectoryFrame extends Application {\n\n    private Long currentDirectoryId;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n    private TreeView<FileInfo> treeView;\n    private ContextMenu folderContextMenu = new ContextMenu();\n    private ContextMenu fileContextMenu = new ContextMenu();\n    private Stage stage;\n\n    @Override\n    public void start(Stage initStage) {\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n        ResultDto resultDto = retrieveDirectory(directoryInfoManager.getRootId()).block();\n        this.stage = initStage;\n        // 제목 설정\n        stage.setTitle(\" \" + directoryInfoManager.getTitle());\n        currentDirectoryId = directoryInfoManager.getRootId();\n\n        // 오른쪽 마우스 이벤트 목록 생성\n        makeContextMenu();\n\n        // 디렉토리 UI 생성\n        TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n        invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n\n        treeView = new TreeView<>(invisibleRoot);\n        treeView.setShowRoot(false);\n        treeView.setEditable(true);\n        treeView.setCellFactory(tv -> new FileAndFolderTreeCell(folderContextMenu, fileContextMenu, stage, this::refreshDirectoryView));\n        treeView.setOnMouseClicked(event -> {\n            // 오른쪽 마우스 클릭 시 빈 공간 일 경우 파일 및 폴더 생성\n            if (event.getButton() == MouseButton.SECONDARY) {\n                if(treeView.getSelectionModel().getSelectedItem() == null){\n                    folderContextMenu.show(treeView, event.getScreenX(), event.getScreenY());\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                } else{\n                    currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                }\n            } else {\n                folderContextMenu.hide();\n            }\n\n            // 왼쪽 마우스 클릭 시\n            if(event.getButton() == MouseButton.PRIMARY){\n                // 빈공간일 경우 폴더 및 파일을 선택 비활성화\n                if(event.getTarget() instanceof TreeCell<?> && ((TreeCell) event.getTarget()).isEmpty()){\n                    treeView.getSelectionModel().clearSelection();\n                    currentDirectoryId = directoryInfoManager.getRootId();\n                }\n                else{\n                    if(treeView.getSelectionModel().getSelectedItems().isEmpty()){\n                        currentDirectoryId = directoryInfoManager.getRootId();\n                    }\n                    else{\n                        currentDirectoryId = treeView.getSelectionModel().getSelectedItems().get(0).getValue().getId();\n                    }\n                }\n            }\n        });\n\n        Button refreshButton = new Button();\n        ImageView refreshIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/refresh.png\")));\n        refreshButton.setGraphic(refreshIcon);\n        refreshButton.setTooltip(new Tooltip(\"새로고침\"));\n        refreshButton.setOnAction(e -> refreshDirectoryView());\n\n        Button connectButton = new Button();\n        ImageView connectIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/connect.png\")));\n        connectButton.setGraphic(connectIcon);\n        connectButton.setTooltip(new Tooltip(\"서버 연결\"));\n        connectButton.setOnAction(e -> connectWebSocket());\n\n        Button homeButton = new Button();\n        ImageView homeIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/home.png\")));\n        homeButton.setGraphic(homeIcon);\n        homeButton.setTooltip(new Tooltip(\"Ododoc 홈페이지로 이동\"));\n        homeButton.setOnAction(e -> openWebPage());\n\n//        Button logoutButton = new Button();\n//        ImageView logoutIcon = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logout.png\")));\n//        logoutButton.setGraphic(logoutIcon);\n//        logoutButton.setTooltip(new Tooltip(\"로그아웃\"));\n//        logoutButton.setOnAction(e -> logout());\n\n        ToolBar toolBar = new ToolBar();\n        toolBar.getItems().addAll(homeButton, connectButton, refreshButton);\n        BorderPane root = new BorderPane();\n        root.setBottom(toolBar);\n        root.setCenter(treeView);\n\n\n        Scene scene = new Scene(root, 300, 500);\n        stage.setScene(scene);\n        stage.show();\n    }\n\n    private Mono<ResultDto> retrieveDirectory(long rootId) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        return webClient.get()\n                .uri(\"/\" + rootId)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .doOnSuccess(result -> {\n                    // 성공했을 경우\n                    if(result.getStatus() == 200){\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        result.setData(objectMapper.convertValue(result.getData(), DirectoryDto.class));\n                    }\n                    // 토큰이 만료되었을 경우\n                    else if(result.getStatus() == 401){\n                        result.setData(new DirectoryDto());\n                        refreshAccessToken();\n                        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId());\n                    }\n                    else{\n                        result.setData(new DirectoryDto());\n                        showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\");\n                    }\n                })\n                .doOnError(error -> showAlert(Alert.AlertType.WARNING,\"조회 실패\", \"디렉토리 조회에 실패했습니다.\\n 새로고침 버튼은 눌러 다시 시도해주세요.\"));\n    }\n\n    private TreeItem<FileInfo> LoadDirectory(List<DirectoryDto> children, TreeItem<FileInfo> invisibleRoot) {\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> fileItem = new TreeItem<>(fileInfo);\n            fileItem.setExpanded(true);\n            DFS(dto.getChildren(), fileItem);\n            invisibleRoot.getChildren().add(fileItem);\n        }\n\n        return invisibleRoot;\n    }\n\n    private void DFS(List<DirectoryDto> children, TreeItem<FileInfo> fileItem) {\n\n        if(children == null){\n            return;\n        }\n\n        for(DirectoryDto dto : children){\n            FileInfo fileInfo = new FileInfo(dto.getId(), dto.getName(), dto.getType());\n            TreeItem<FileInfo> childFileItem = new TreeItem<>(fileInfo);\n            fileItem.getChildren().add(childFileItem);\n\n            DFS(dto.getChildren(), childFileItem);\n        }\n\n    }\n\n    private void makeContextMenu() {\n        MenuItem addFolder = new MenuItem(\"폴더 생성\");\n        MenuItem addFile = new MenuItem(\"파일 생성\");\n        folderContextMenu.getItems().addAll(addFolder, addFile);\n\n        MenuItem connectFile = new MenuItem(\"파일 연동\");\n        fileContextMenu.getItems().add(connectFile);\n\n        addFolder.setOnAction(e -> createFolderOrFile(\"folder\"));\n        addFile.setOnAction(e -> createFolderOrFile(\"file\"));\n        connectFile.setOnAction(e -> connectFile());\n    }\n\n    private void connectFile() {\n        ConnectedFileManager connectedFileManager = ConnectedFileManager.getInstance();\n        connectedFileManager.setDirectoryId(currentDirectoryId);\n\n        if(connectedFileManager.getDirectoryId() != -1){\n            showAlert(Alert.AlertType.INFORMATION, \"연동 성공\", \"파일과 연동에 성공하였습니다.\");\n        }\n        else{\n            showAlert(Alert.AlertType.WARNING, \"연동 실패\", \"파일과의 연동에 실패하였습니다.\");\n        }\n    }\n\n    private void createFolderOrFile(String type){\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        CreateRequestDto createRequestDto = new CreateRequestDto(currentDirectoryId, \"\", type);\n\n        webClient.post()\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        refreshDirectoryView();\n                    }\n                    else if (result.getStatus() == 401) {\n                        refreshAccessToken();\n                        showAlert(Alert.AlertType.WARNING, \"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                    else {\n                        showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                        refreshDirectoryView();\n                    }\n                }, error -> {\n                    showAlert(Alert.AlertType.WARNING,\"생성 실패\", \"다시 시도해주세요.\");\n                    refreshDirectoryView();\n                });\n    }\n\n    private void refreshDirectoryView() {\n        retrieveDirectory(DirectoryInfoManager.getInstance().getRootId()).subscribe(resultDto -> {\n            Platform.runLater(() -> {\n                TreeItem<FileInfo> invisibleRoot = new TreeItem<>();\n                invisibleRoot = LoadDirectory(((DirectoryDto)resultDto.getData()).getChildren(), invisibleRoot);\n                treeView.setRoot(invisibleRoot);\n                treeView.setShowRoot(false);\n                treeView.refresh();\n            });\n        });\n    }\n\n    private void showAlert(Alert.AlertType type, String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    type,\n                    \" Ododoc\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private void connectWebSocket(){\n        if(BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.INFORMATION,\n                        \" Ododoc\",\n                        \"서버 연결 확인\",\n                        \"이미 서버와 연결이 되어 있습니다.\",\n                        \"/image/button/icon.png\"\n                );\n                alert.showAndWait();\n            });\n        }\n\n        else {\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    BuildResultSender.setEnableWhenPushBtn(true);\n                    BuildResultSender.setINSTANCE(null);\n                    BuildResultSender.getINSTANCE();\n                }\n            });\n        }\n\n    }\n\n    private void openWebPage(){\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n//    private void logout(){\n//        TokenManager.getInstance().setRefreshToken(null);\n//        TokenManager.getInstance().setAccessToken(null);\n//    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 19,
        "depth": 1
      }
    },
    "037130d2-4745-4493-9c25-eb22c4356808": {
      "id": "037130d2-4745-4493-9c25-eb22c4356808",
      "value": [
        {
          "_id": "9adcc9f4-b82e-493f-aaa1-5c6f4b5cd100",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "05276462-c096-4b01-b415-3a56caef7cff": {
      "id": "05276462-c096-4b01-b415-3a56caef7cff",
      "value": [
        {
          "_id": "d330ab30-8eca-4651-9f98-c0e21f15b6e0",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일과 폴더를 수정하는 TreeCell 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 44,
        "depth": 1
      }
    },
    "0769ba64-d049-4520-92a1-4fa453371c35": {
      "id": "0769ba64-d049-4520-92a1-4fa453371c35",
      "value": [
        {
          "_id": "a8f89f9b-8797-4352-9c8f-d3472fa97efd",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ErrorFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 36,
        "depth": 1
      }
    },
    "0841ce89-4959-4335-88e9-e2db0e1245da": {
      "id": "0841ce89-4959-4335-88e9-e2db0e1245da",
      "value": [
        {
          "_id": "9819cecc-ee3d-4a0d-a261-37631d6b7904",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifiedFileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 12,
        "depth": 1
      }
    },
    "10181501-3b72-44ed-9e48-ac6bed2be652": {
      "id": "10181501-3b72-44ed-9e48-ac6bed2be652",
      "value": [
        {
          "_id": "b35a4c49-8efb-46eb-9798-1d49012ad610",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ResultDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 69,
        "depth": 1
      }
    },
    "183a9a4d-5558-45d9-953c-9c221b29e793": {
      "id": "183a9a4d-5558-45d9-953c-9c221b29e793",
      "value": [
        {
          "_id": "024ca369-d80d-4aaf-bc6b-5c2aea4f98c7",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.startup.ProjectActivity;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport kotlin.Unit;\nimport kotlin.coroutines.Continuation;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;\n\npublic class StartUpActivity implements ProjectActivity {\n    private static boolean javafxInitialized = false;\n\n\n    @Nullable\n    @Override\n    public Object execute(@NotNull Project project, @NotNull Continuation<? super Unit> continuation) {\n        TokenManager tokenManager = TokenManager.getInstance();\n        ProjectProvider projectProvider = ProjectProvider.getInstance();\n        projectProvider.getProjects().offer(project);\n//        project.getService(DisposableService.class);\n        initializeJavaFXPlatform();\n        checkAndAddCodeListener(tokenManager, projectProvider);\n\n        return null;\n    }\n\n\n\n    private synchronized void initializeJavaFXPlatform() {\n        // JavaFX 플랫폼 초기화 상태 체크 및 조건부 초기화\n        if(!javafxInitialized){\n            Platform.startup(() -> {\n                javafxInitialized = true;\n                Platform.setImplicitExit(false);\n                new MainLoginFrame();\n            });\n        }\n    }\n\n    private void checkAndAddCodeListener(TokenManager tokenManager, ProjectProvider projectProvider) {\n        if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n//            showLoginAlert();\n        }\n        else{\n            addCodeListener(projectProvider);\n        }\n    }\n\n    private void showLoginAlert() {\n        Platform.runLater(() -> {\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"Ododoc IntelliJ Plugin\",\n                    \"로그인 필요\",\n                    \"자동 정리 기능을 사용하려면 로그인이 필요합니다.\",\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n            }\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 31,
        "depth": 1
      }
    },
    "1e7a3131-2fa5-4d74-a94f-992ef9605acb": {
      "id": "1e7a3131-2fa5-4d74-a94f-992ef9605acb",
      "value": [
        {
          "_id": "7a3124bb-edf9-4b56-8245-d56d92f126cf",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class ConnectedFileManager {\n\n    private Long directoryId = 0L;\n\n    private ConnectedFileManager() {}\n\n    private static class ConnectedFileManagerHolder {\n        private static final ConnectedFileManager INSTANCE = new ConnectedFileManager();\n    }\n\n    public static ConnectedFileManager getInstance() {\n        return ConnectedFileManager.ConnectedFileManagerHolder.INSTANCE;\n    }\n\n    public Long getDirectoryId() {\n        return directoryId;\n    }\n\n    public void setDirectoryId(Long directoryId) {\n        this.directoryId = directoryId;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 40,
        "depth": 1
      }
    },
    "23228f60-90ec-40ef-9799-90ea105db317": {
      "id": "23228f60-90ec-40ef-9799-90ea105db317",
      "value": [
        {
          "_id": "674a65c1-ab2e-42d5-83b4-8d4e9d8e5f4a",
          "type": "code",
          "children": [
            {
              "text": "2024-05-20 00:07:30,437 [    579]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.intellij.ae.database.core.baseEvents.fus.AddStatisticsEventLogListenerTemporary, plugin=com.jetbrains.ae.database)\r\n2024-05-20 00:07:30,438 [    580]   WARN - #c.i.s.ComponentManagerImpl - `preload=true` must be used only for core services (service=com.jetbrains.rdserver.statistics.BackendStatisticsManager, plugin=com.jetbrains.codeWithMe)\r\n2024-05-20 00:07:30,663 [    805]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.search.FilenameIndex initializer requests com.intellij.ide.plugins.PluginUtil instance\r\n2024-05-20 00:07:31,381 [   1523]   WARN - #c.i.s.ComponentManagerImpl - org.zmlx.hg4idea.provider.HgChangeProvider initializer requests com.intellij.openapi.vcs.FileStatusFactory instance\r\n2024-05-20 00:07:33,153 [   3295]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.codeInsight.daemon.LineMarkerProviders initializer requests com.intellij.codeInsight.daemon.LineMarkerProviders instance\r\n2024-05-20 00:07:34,183 [   4325]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.LanguageSubstitutors initializer requests com.intellij.psi.LanguageSubstitutors instance\r\n2024-05-20 00:07:35,918 [   6060]   WARN - #c.i.s.ComponentManagerImpl - com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable initializer requests com.intellij.util.LocaleSensitiveApplicationCacheService instance\r\n2024-05-20 00:07:36,857 [   6999]   WARN - #c.i.u.j.JBCefApp - JCEF is manually disabled in headless env via 'ide.browser.jcef.headless.enabled=false'\r\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 85,
        "depth": 0
      }
    },
    "235c6f78-efba-40e1-8aec-286ee43f0dc9": {
      "id": "235c6f78-efba-40e1-8aec-286ee43f0dc9",
      "value": [
        {
          "_id": "03afe484-c6b2-404f-909d-87e313b8110a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "243eae21-010c-4564-b460-ac16d3cd1a5e": {
      "id": "243eae21-010c-4564-b460-ac16d3cd1a5e",
      "value": [
        {
          "_id": "e4469e32-7344-4660-a7f5-030b3f913d26",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n필요한 핵심 서비스를 위해 잘못된 preloading 설정이 되어 발생한 에러.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 86,
        "depth": 0
      }
    },
    "24b7aae8-8e60-4b3f-abea-df297c8e7b0c": {
      "id": "24b7aae8-8e60-4b3f-abea-df297c8e7b0c",
      "value": [
        {
          "_id": "b4c88d6f-bbce-461e-a42a-c8a69b8a5549",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.application.ReadAction;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class ProjectTracker {\n\n    private List<PsiFile> psiFiles;\n    private Map<String, ProjectInfo> beforeProjectStatus = new HashMap<>();\n    private Map<String, ProjectInfo> currentProjectStatus = new HashMap<>();\n    private String allBeforeProjectStatus;\n    private String allCurrentProjectStatus;\n    private ProjectTracker(){}\n\n    private static class ProjectTrackerHolder {\n        private static final ProjectTracker INSTANCE = new ProjectTracker();\n    }\n\n    public static ProjectTracker getInstance() {\n        return ProjectTrackerHolder.INSTANCE;\n    }\n\n    // 프로젝트 생성시 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void initHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() ->{\n            String fileHash = \"\";\n            getProjectFileList(project);\n            beforeProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                beforeProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allBeforeProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    // 지금 현재 프로젝트 파일 상태들을 해쉬 값으로 저장\n    public void currentHashStatus(Project project) {\n        ApplicationManager.getApplication().runReadAction(() -> {\n            String fileHash = \"\";\n            getProjectFileList(project);\n            currentProjectStatus.clear();\n\n            for(PsiFile file : psiFiles){\n                String codeHash = getEncrypt(file.getText());\n                currentProjectStatus.put(file.getName(), new ProjectInfo(file, codeHash, file.getText()));\n                fileHash += getEncrypt(file.getName());\n            }\n            allCurrentProjectStatus = getEncrypt(fileHash);\n        });\n    }\n\n    private void getProjectFileList(Project project){\n\n        ApplicationManager.getApplication().runReadAction(() -> {\n            GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n            Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n            PsiManager psiManager = PsiManager.getInstance(project);\n\n            psiFiles = files.stream()\n                    .map(file -> psiManager.findFile(file))\n                    .toList();\n        });\n    }\n\n    // 해쉬로 암호화\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try{\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for(byte b : hashCode){\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        }catch (NoSuchAlgorithmException e){\n            throw  new RuntimeException(e);\n        }\n\n        return result;\n    }\n\n    public Map<String, ProjectInfo> getBeforeProjectStatus() {\n        return beforeProjectStatus;\n    }\n\n    public Map<String, ProjectInfo> getCurrentProjectStatus() {\n        return currentProjectStatus;\n    }\n\n    public String getAllBeforeProjectStatus() {\n        return allBeforeProjectStatus;\n    }\n\n    public String getAllCurrentProjectStatus() {\n        return allCurrentProjectStatus;\n    }\n\n    public void setBeforeProjectStatus(Map<String, ProjectInfo> beforeProjectStatus) {\n        this.beforeProjectStatus = beforeProjectStatus;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 46,
        "depth": 1
      }
    },
    "25339c16-96b4-4401-a4f6-f47d23201b3a": {
      "id": "25339c16-96b4-4401-a4f6-f47d23201b3a",
      "value": [
        {
          "_id": "df0af64d-dcd2-4069-8eeb-03ef75b4db91",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OauthLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 27,
        "depth": 1
      }
    },
    "27324528-c722-492f-9cc1-7a382a2b4f7c": {
      "id": "27324528-c722-492f-9cc1-7a382a2b4f7c",
      "value": [
        {
          "_id": "e663c043-5e1f-4794-b5f0-aeb4b5b1caff",
          "type": "bulleted-list",
          "children": [
            {
              "text": "TokenManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 75,
        "depth": 1
      }
    },
    "27de17bb-9887-4936-abf2-1797fd01cabf": {
      "id": "27de17bb-9887-4936-abf2-1797fd01cabf",
      "value": [
        {
          "_id": "6640ac92-ed8d-43aa-8434-f58845953836",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\n\npublic class BuildResultInfo {\n\n    private boolean isSuccess;\n    private long connectedFileId;\n    private String contents;\n    private String timeStamp;\n    private List<ModifiedFileInfo> modifiedFiles;\n\n    public String getTimeStamp() {\n        return timeStamp;\n    }\n\n    public void setTimeStamp(String timeStamp) {\n        this.timeStamp = timeStamp;\n    }\n\n    public String getContents() {\n        return contents;\n    }\n\n    public void setContents(String contents) {\n        this.contents = contents;\n    }\n\n    public boolean isSuccess() {\n        return isSuccess;\n    }\n\n    public void setSuccess(boolean success) {\n        isSuccess = success;\n    }\n\n    public long getConnectedFileId() {\n        return connectedFileId;\n    }\n\n    public void setConnectedFileId(long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n    public List<ModifiedFileInfo> getModifiedFiles() {\n        return modifiedFiles;\n    }\n\n    public void setModifiedFiles(List<ModifiedFileInfo> modifiedFiles) {\n        this.modifiedFiles = modifiedFiles;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 22,
        "depth": 1
      }
    },
    "28b9e90f-c348-4c73-aa02-04a55bddc993": {
      "id": "28b9e90f-c348-4c73-aa02-04a55bddc993",
      "value": [
        {
          "_id": "1b0ea32b-8788-40d0-bc32-a1c158d6c3e1",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "28bba14a-9d75-4617-b382-4184a3426d61": {
      "id": "28bba14a-9d75-4617-b382-4184a3426d61",
      "value": [
        {
          "_id": "50ccf650-7590-489d-91f1-5adb94cb6bb0",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CodeListener.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "3feceb10-5560-4578-8a62-7f70dd58acaf": {
      "id": "3feceb10-5560-4578-8a62-7f70dd58acaf",
      "value": [
        {
          "_id": "2ef9a017-6a50-420d-9d68-a3c154e2fae1",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nAlertHelper 클래스는 다양한 종류의 알림을 생성하는데 도움을 주는 유틸리티 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 80,
        "depth": 1
      }
    },
    "40edd973-2079-4fb5-a46e-d7fcf1cd5789": {
      "id": "40edd973-2079-4fb5-a46e-d7fcf1cd5789",
      "value": [
        {
          "_id": "15e761f3-fd4b-40b0-9315-cadcfd4b6373",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.response;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ModifiedFileInfo {\n\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n\n    public ModifiedFileInfo(String fileName, String sourceCode){\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 1
      }
    },
    "488b6790-54fc-48ea-a634-d652fd83ee3c": {
      "id": "488b6790-54fc-48ea-a634-d652fd83ee3c",
      "value": [
        {
          "_id": "bc6f0454-7f36-40d4-a9f3-b4468d20939c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nRequestDto 클래스는 응답에 필요한 정보와 데이터를 담고 있는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 62,
        "depth": 1
      }
    },
    "4d13c070-bec3-4198-876a-323aae3998f4": {
      "id": "4d13c070-bec3-4198-876a-323aae3998f4",
      "value": [
        {
          "_id": "80f9170a-8d97-40b1-b6e2-c408529311e8",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nIntelliJ 프로젝트 파일 상태를 해싱하여 추적하고 비교하는 기능을 제공하는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 47,
        "depth": 1
      }
    },
    "4d929b97-12df-4bf1-8f46-bffe3eb0f087": {
      "id": "4d929b97-12df-4bf1-8f46-bffe3eb0f087",
      "value": [
        {
          "_id": "cb63485e-ac5a-4341-bce3-e34cf63ac6d0",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nResultDto는 status와 data 속성을 가지고 있는데, 이를 반환하는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 71,
        "depth": 1
      }
    },
    "4eab6eaf-4902-4d19-b704-2b040202e58b": {
      "id": "4eab6eaf-4902-4d19-b704-2b040202e58b",
      "value": [
        {
          "_id": "3dc0113d-eac8-413e-bc61-785328cf26dc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n싱글톤 패턴을 활용하여 액세스 토큰과 리프레시 토큰을 관리하는 TokenManager 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 77,
        "depth": 1
      }
    },
    "516b4a64-c312-4914-9f4c-9a5175ab1b7a": {
      "id": "516b4a64-c312-4914-9f4c-9a5175ab1b7a",
      "value": [
        {
          "_id": "a11f314e-1edc-4444-a8ed-4201ed14fdbb",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.stage.Stage;\nimport org.jvnet.winp.Main;\n\npublic class OpenOdodocPlugin extends AnAction {\n\n    @Override\n    public void actionPerformed(AnActionEvent e) {\n        Platform.runLater(() -> {\n            if(TokenManager.getInstance().getAccessToken() == null || TokenManager.getInstance().getRefreshToken() == null){\n                if(!MainLoginFrame.isFrameVisible()){\n                    new MainLoginFrame();\n                }\n            }\n            else {\n                new DirectoryFrame().start(new Stage());\n            }\n        });\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 34,
        "depth": 1
      }
    },
    "5197584e-54bd-419f-94c3-79d614c05f51": {
      "id": "5197584e-54bd-419f-94c3-79d614c05f51",
      "value": [
        {
          "_id": "b463de97-496f-42ba-969c-1b97c9e298ea",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DisposableService.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 66,
        "depth": 1
      }
    },
    "55b31681-5a16-443c-9668-019db2343d55": {
      "id": "55b31681-5a16-443c-9668-019db2343d55",
      "value": [
        {
          "_id": "cad31026-a97f-4871-9397-698978085eae",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.intellij.execution.ExecutionListener;\nimport com.intellij.execution.process.ProcessEvent;\nimport com.intellij.execution.process.ProcessHandler;\nimport com.intellij.execution.process.ProcessListener;\nimport com.intellij.execution.process.ProcessOutputTypes;\nimport com.intellij.execution.runners.ExecutionEnvironment;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.diagnostic.Logger;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.util.Key;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.directory.manager.ConnectedFileManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.tracker.dto.BuildResultInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ErrorFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.ModifiedFileInfo;\nimport com.ssafy.ododocintellij.tracker.dto.RequestDto;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class CodeListener implements ExecutionListener {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n    private List<ErrorFileInfo> errorFiles = new ArrayList<>();\n    private Map<String, ProjectInfo> currentProjectInfo = new HashMap<>();\n    private boolean capturingError;\n    private boolean errorFlag;\n\n    private static final Logger LOG = Logger.getInstance(CodeListener.class);\n    private static final Pattern ANSI_ESCAPE_PATTERN = Pattern.compile(\"\\u001B\\\\[[;\\\\d]*m\");\n\n    public CodeListener(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void processStarted(@NotNull String executorId, @NotNull ExecutionEnvironment env, @NotNull ProcessHandler handler) {\n        CompletableFuture.runAsync(() -> getCurrentProject())\n                .thenRun(this::initializeProjectTracker)\n                .thenRun(() -> {\n                    // 파일 연동이 되어있다면\n                    if (ConnectedFileManager.getInstance().getDirectoryId() != 0L) {\n                        startSignal();\n                    } else {\n                        Platform.runLater(() -> {\n                            Alert alert = AlertHelper.makeAlert(\n                                    Alert.AlertType.WARNING,\n                                    \" Ododoc\",\n                                    \"파일 연동 오류\",\n                                    \"파일이 연동되지 않았습니다.\\n해당 결과는 새로 생성된 파일에 기록됩니다.\",\n                                    \"/image/button/icon.png\"\n                            );\n                            alert.showAndWait();\n                        });\n                    }\n\n                    handler.addProcessListener(new OdodocProcessListener());\n                });\n    }\n\n    private void getCurrentProject() {\n        psiFiles = new ArrayList<>();\n        currentProjectInfo.clear();\n        ApplicationManager.getApplication().executeOnPooledThread(() -> {\n            ApplicationManager.getApplication().runReadAction(() -> {\n                GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n                Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n                PsiManager psiManager = PsiManager.getInstance(project);\n                psiFiles = files.stream()\n                        .map(psiManager::findFile)\n                        .collect(Collectors.toList());\n\n                psiFiles.forEach(file ->\n                        currentProjectInfo.put(file.getName(), new ProjectInfo(file, \"\", file.getText())));\n            });\n        });\n    }\n\n    private void initializeProjectTracker() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.currentHashStatus(project);\n    }\n\n    private void startSignal() {\n        RequestDto requestDto = new RequestDto();\n        requestDto.setSourceApplication(\"INTELLIJ\");\n        requestDto.setDataType(\"SIGNAL\");\n        requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n        requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n        requestDto.setTimestamp(LocalDateTime.now());\n\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            String output = objectMapper.writeValueAsString(requestDto);\n            BuildResultSender.sendMessage(output);\n        } catch (JsonProcessingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private List<ModifiedFileInfo> getModifiedFiles() {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n\n        Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n        Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n        String allBeforeProjectStatus = projectTracker.getAllBeforeProjectStatus();\n        String allCurrentProjectStatus = projectTracker.getAllCurrentProjectStatus();\n\n        String before, current= \"\";\n        boolean isChange = false; // 변경된 파일이 있는지 확인\n        List<ModifiedFileInfo> modifiedFileInfoList = new ArrayList<>();\n\n        // 파일을 추가하거나 삭제하지 않은 경우\n        if(allBeforeProjectStatus.equals(allCurrentProjectStatus)){\n            for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n                before = entry.getValue().getHash();\n                current = currentProjectStatus.get(entry.getKey()).getHash();\n                // 바뀐 파일이라면 해당 파일\n                if(!before.equals(current)){\n                    isChange = true;\n                    PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                    addModifiedFile(modifiedFileInfoList, modifiedFile);\n                }\n            }\n        }\n\n        // 파일을 추가하거나 삭제한 경우\n        else{\n            int beforeSize = beforeProjectStatus.size();\n            int currentSize = currentProjectStatus.size();\n\n            // 추가한 경우\n            if(beforeSize <= currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : currentProjectStatus.entrySet()){\n\n                    // 추가된 파일이 아닐 경우\n                    if(beforeProjectStatus.containsKey(entry.getKey())){\n                        before = beforeProjectStatus.get(entry.getKey()).getHash();\n                        current = entry.getValue().getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = entry.getValue().getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 추가된 파일일 경우\n                    else{\n                        isChange = true;\n                        PsiFile modifiedFile = entry.getValue().getPsiFile();\n                        addModifiedFile(modifiedFileInfoList, modifiedFile);\n                    }\n\n                }\n            }\n            // 삭제한 경우\n            else if(beforeSize > currentSize){\n                for(Map.Entry<String, ProjectInfo> entry : beforeProjectStatus.entrySet()){\n\n                    // 삭제된 파일이 아닐 경우\n                    if(currentProjectStatus.containsKey(entry.getKey())){\n                        before = entry.getValue().getHash();\n                        current = currentProjectStatus.get(entry.getKey()).getHash();\n\n                        // 바뀐 파일이라면 해당 파일 저장\n                        if(!before.equals(current)){\n                            isChange = true;\n                            PsiFile modifiedFile = currentProjectStatus.get(entry.getKey()).getPsiFile();\n                            addModifiedFile(modifiedFileInfoList, modifiedFile);\n                        }\n                    }\n\n                    // 삭제된 파일일 경우\n                    else{\n                        isChange = true;\n                    }\n\n                }\n            }\n        }\n\n        // 변경된 파일이 있을 경우 현재 상태를 전 상태로 돌리기 (깊은 복사 )\n        if (isChange){\n            deepCopy(currentProjectStatus);\n        }\n\n        return modifiedFileInfoList;\n\n    }\n\n    private void addModifiedFile(List<ModifiedFileInfo> modifiedFileInfoList, PsiFile modifiedFile) {\n        String fileName = modifiedFile.getName();\n        String sourceCode = modifiedFile.getText();\n        modifiedFileInfoList.add(new ModifiedFileInfo(fileName, sourceCode));\n    }\n\n    private void deepCopy(Map<String, ProjectInfo> currentProjectStatus) {\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        projectTracker.setBeforeProjectStatus(\n                currentProjectStatus.entrySet().stream()\n                        .collect(Collectors.toMap(Map.Entry::getKey, e -> {\n                            try {\n                                return (ProjectInfo) e.getValue().clone();\n                            } catch (CloneNotSupportedException ex) {\n                                throw new RuntimeException(ex);\n                            }\n                        }))\n        );\n    }\n\n    private class OdodocProcessListener implements ProcessListener {\n        StringBuilder allOutputLog = new StringBuilder();\n        StringBuilder errorLog = new StringBuilder();\n        StringBuilder stdOutLog = new StringBuilder();\n\n        @Override\n        public void processTerminated(@NotNull ProcessEvent event) {\n            RequestDto requestDto = new RequestDto();\n            BuildResultInfo buildResultInfo = new BuildResultInfo();\n\n            requestDto.setSourceApplication(\"INTELLIJ\");\n            requestDto.setAccessToken(TokenManager.getInstance().getAccessToken());\n            requestDto.setConnectedFileId(ConnectedFileManager.getInstance().getDirectoryId());\n            requestDto.setTimestamp(LocalDateTime.now());\n\n            if (errorFlag) {\n                buildResultInfo.setDetails(errorLog.toString());\n                if (errorFiles.size() > 1) {\n                    buildResultInfo.setErrorFile(errorFiles.get(0));\n                }\n                buildResultInfo.setModifiedFiles(getModifiedFiles());\n\n                requestDto.setDataType(\"ERROR\");\n                requestDto.setContent(buildResultInfo);\n            } else {\n                buildResultInfo.setDetails(stdOutLog.toString());\n\n                List<ModifiedFileInfo> temp = getModifiedFiles();\n                buildResultInfo.setModifiedFiles(temp);\n\n                requestDto.setDataType(\"OUTPUT\");\n                requestDto.setContent(buildResultInfo);\n            }\n\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                String output = objectMapper.writeValueAsString(requestDto);\n                System.out.println(output);\n                BuildResultSender.sendMessage(output);\n            } catch (JsonProcessingException e) {\n                throw new RuntimeException(e);\n            }\n\n            allOutputLog.setLength(0);\n            errorLog.setLength(0);\n            stdOutLog.setLength(0);\n            errorFiles = new ArrayList<>();\n            errorFlag = false;\n            capturingError = false;\n        }\n\n        @Override\n        public void onTextAvailable(@NotNull ProcessEvent event, @NotNull Key outputType) {\n            String rawText = event.getText();\n            String text = removeAnsiEscapeCodes(rawText);\n\n            LOG.info(\"Raw output: \" + rawText);\n            LOG.info(\"Cleaned output: \" + text);\n            LOG.info(\"Output type: \" + outputType + \" Text: \" + text);\n\n            if (outputType.equals(ProcessOutputTypes.STDERR)) {\n                errorFlag = true;\n                errorLog.append(text);\n            }\n\n            else if (outputType.equals(ProcessOutputTypes.STDOUT)) {\n                if (text.contains(\"ERROR\")) {\n                    errorFlag = true;\n                    errorLog.append(text);\n                    capturingError = true;\n                }\n                else if (capturingError) {\n                    if (text.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}\\\\+\\\\d{2}:\\\\d{2} .*\")) {\n                        capturingError = false;\n                    }\n                    else {\n                        errorLog.append(text);\n                        Pattern pattern = Pattern.compile(\"\\\\(([^)]+):(\\\\d+)\\\\)\");\n                        Matcher matcher = pattern.matcher(text);\n                        if (matcher.find()) {\n                            if (currentProjectInfo.containsKey(matcher.group(1))) {\n                                ProjectInfo projectInfo = currentProjectInfo.get(matcher.group(1));\n                                String fileName = projectInfo.getPsiFile().getName();\n                                String sourceCode = projectInfo.getSourceCode();\n                                int line = Integer.parseInt(matcher.group(2));\n                                errorFiles.add(new ErrorFileInfo(fileName, sourceCode, line));\n                            }\n                        }\n                    }\n                }\n                else {\n                    stdOutLog.append(text);\n                }\n            }\n            allOutputLog.append(text);\n        }\n    }\n\n    public static String removeAnsiEscapeCodes(String input) {\n        return ANSI_ESCAPE_PATTERN.matcher(input).replaceAll(\"\");\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "568f377c-c029-4f22-aa4a-619f3ee7091d": {
      "id": "568f377c-c029-4f22-aa4a-619f3ee7091d",
      "value": [
        {
          "_id": "f67489c4-7aad-4e90-b2d8-cb1c9a5f6709",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryInfoManager.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 72,
        "depth": 1
      }
    },
    "62e3430d-4a31-4872-a504-899a45297494": {
      "id": "62e3430d-4a31-4872-a504-899a45297494",
      "value": [
        {
          "_id": "0f9e601f-f0f7-4e25-bde6-cb4ffdb0692f",
          "type": "bulleted-list",
          "children": [
            {
              "text": "MainLoginFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 63,
        "depth": 1
      }
    },
    "647dca12-aecb-48ed-85da-b2b8bc28e884": {
      "id": "647dca12-aecb-48ed-85da-b2b8bc28e884",
      "value": [
        {
          "_id": "28a655e2-0ebe-4796-bf0f-a0392c7aa8bc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nWebSocket 서버와 연결이 실패한 경우 다시 시도할 것을 확인하는 알림을 생성하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 17,
        "depth": 1
      }
    },
    "673de705-da66-4276-bd27-310fda4cfecd": {
      "id": "673de705-da66-4276-bd27-310fda4cfecd",
      "value": [
        {
          "_id": "cc7fc5d7-4093-48e4-9221-821e1725d30a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "AlertHelper.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 78,
        "depth": 1
      }
    },
    "691d8ce4-7434-4bb1-b7d9-3598a4c8250d": {
      "id": "691d8ce4-7434-4bb1-b7d9-3598a4c8250d",
      "value": [
        {
          "_id": "56d4c039-7fa2-4e6e-9398-2e6419c5bd7e",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 21,
        "depth": 1
      }
    },
    "6dcd99ba-2f08-4eec-bf31-acdc74f1b8a6": {
      "id": "6dcd99ba-2f08-4eec-bf31-acdc74f1b8a6",
      "value": [
        {
          "_id": "98ec3154-254e-4a30-a3a3-ccf09b8e7ecc",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 파일 변경사항을 추적하여 암호화하여 저장하는 기능을 하는 DisposableService 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 68,
        "depth": 1
      }
    },
    "6e341d3d-d14c-4ab4-8941-707094820432": {
      "id": "6e341d3d-d14c-4ab4-8941-707094820432",
      "value": [
        {
          "_id": "28448d14-af84-439d-aaa5-5219c2c60065",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\npublic class ResultDto {\n\n    private int status;\n    private Object data;\n\n    public int getStatus() {\n        return status;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setStatus(int status) {\n        this.status = status;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 70,
        "depth": 1
      }
    },
    "700031b6-66a5-45ab-97e2-ed83f794aeaf": {
      "id": "700031b6-66a5-45ab-97e2-ed83f794aeaf",
      "value": [
        {
          "_id": "550bcc89-d6e0-47b7-a780-3ac5c8e14e7d",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.alert;\n\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.stage.Stage;\n\npublic class AlertHelper {\n\n    public static Alert makeAlert(Alert.AlertType alertType, String title, String header, String content, String imagePath) {\n        Alert alert = new Alert(alertType);\n        alert.setTitle(title);\n        alert.setHeaderText(header);\n        alert.setContentText(content);\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(imagePath)));\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 79,
        "depth": 1
      }
    },
    "70ba54f5-afe5-4101-a629-afe074a1b286": {
      "id": "70ba54f5-afe5-4101-a629-afe074a1b286",
      "value": [
        {
          "_id": "5d75afdc-6699-42fd-a97e-bb2433256a89",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.manager;\n\npublic class DirectoryInfoManager {\n\n    private long rootId;\n    private String title;\n\n    private DirectoryInfoManager() {}\n\n    private static class DirectoryInfoManagerHolder {\n        private static final DirectoryInfoManager INSTANCE = new DirectoryInfoManager();\n    }\n\n    public static DirectoryInfoManager getInstance() {\n        return DirectoryInfoManagerHolder.INSTANCE;\n    }\n\n    public synchronized long getRootId() {\n        return rootId;\n    }\n    public synchronized String getTitle() {\n        return title;\n    }\n\n    public synchronized void setRootId(long rootId) {\n        this.rootId = rootId;\n    }\n\n    public synchronized void setTitle(String title) {\n        this.title = title;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 73,
        "depth": 1
      }
    },
    "74ebfe81-3b5b-4e62-b898-b76ef08d5fce": {
      "id": "74ebfe81-3b5b-4e62-b898-b76ef08d5fce",
      "value": [
        {
          "_id": "105ced3f-22e9-42ae-b759-a7bc260bf136",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ModifyRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 6,
        "depth": 1
      }
    },
    "753f1afd-91f0-45b1-986b-9bc7ff546409": {
      "id": "753f1afd-91f0-45b1-986b-9bc7ff546409",
      "value": [
        {
          "_id": "be153441-4c35-4273-be88-8a265d179cf3",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 84,
        "depth": 0
      }
    },
    "7a2ae11f-7378-4b7d-9269-2f1f26f26e53": {
      "id": "7a2ae11f-7378-4b7d-9269-2f1f26f26e53",
      "value": [
        {
          "_id": "d181f1a3-3945-45c8-8fc2-afded1b1ea0e",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.handshake.ServerHandshake;\n\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class BuildResultSender {\n\n    // volatile 키워드를 사용하여 메모리 가시성 문제 해결, 멀티스레드 환경에서도 변수가 안전하게 사용할 수 있도록 함.\n    private static volatile WebSocketClient INSTANCE;\n\n    // 객체의 락을 위해 사용.\n    private static final Object lock = new Object();\n    private static final String WEBSOCKET_URI = \"wss://k10d209.p.ssafy.io/process/ws\";\n    private static boolean enableWhenPushBtn = false;\n    private static int count = 0;\n    private BuildResultSender() {}\n\n    public static WebSocketClient getINSTANCE() {\n\n        if(INSTANCE == null) {\n            // 두 번째로 null 체크를 한 후 다중 스레드 환경에서 동시에 여러 인스턴스가 생성되는 것을 방지\n            synchronized (lock) {\n                if(INSTANCE == null){\n                    try {\n\n                        INSTANCE = new WebSocketClient(new URI(WEBSOCKET_URI)) {\n                            @Override\n                            public void onOpen(ServerHandshake serverHandshake) {\n                                if(count > 0){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.INFORMATION,\n                                                \" Ododoc\",\n                                                \"서버 연결 성공\",\n                                                \"서버와의 연결에 성공했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                }\n                                count ++;\n                            }\n\n                            @Override\n                            public void onMessage(String s) {}\n\n                            @Override\n                            public void onClose(int i, String s, boolean b) {\n                                if(count > 0){\n                                    BuildResultSender.setINSTANCE(null);\n                                    Platform.runLater(() -> {\n                                        Alert alert = WebSocketReConnectAlert.makeAlert();\n                                        Optional<ButtonType> result = alert.showAndWait();\n                                        if(result.isPresent() && result.get() == ButtonType.OK) {\n                                            getINSTANCE();\n                                        }\n                                    });\n                                }\n                            }\n\n                            @Override\n                            public void onError(Exception e) {\n                                System.out.println(e.getMessage());\n                                if(enableWhenPushBtn){\n                                    Platform.runLater(() -> {\n                                        Alert alert = AlertHelper.makeAlert(\n                                                Alert.AlertType.ERROR,\n                                                \" Ododoc\",\n                                                \"서버 연결 실패\",\n                                                \"서버와의 연결에 실패했습니다.\",\n                                                \"/image/button/icon.png\"\n                                        );\n\n                                        alert.showAndWait();\n                                    });\n                                    enableWhenPushBtn = false;\n                                }\n                            }\n                        };\n\n                        INSTANCE.connect();\n                    }catch (URISyntaxException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n\n        return INSTANCE;\n    }\n\n    public static void setINSTANCE(WebSocketClient INSTANCE) {\n        BuildResultSender.INSTANCE = INSTANCE;\n    }\n\n    public static void setEnableWhenPushBtn(boolean enableWhenPushBtn) {\n        BuildResultSender.enableWhenPushBtn = enableWhenPushBtn;\n    }\n\n    public static void sendMessage(String message) {\n        if(INSTANCE != null && INSTANCE.isOpen()){\n            INSTANCE.send(message);\n        }\n    }\n\n    public static boolean isConnected() {\n        return INSTANCE != null && INSTANCE.isOpen() ? true : false;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 58,
        "depth": 1
      }
    },
    "7d4a4704-8bc4-49ee-a08d-17e7792883f2": {
      "id": "7d4a4704-8bc4-49ee-a08d-17e7792883f2",
      "value": [
        {
          "_id": "ff2eb74c-74ec-4fe6-ab72-500ec2bc0554",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOauth 로그인을 수행하고 성공적이면 프로젝트에 코드 리스너를 추가하여 디렉토리 화면을 연다.로그인이 실패하면 다시 로그인하라는 알림이 나온다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 29,
        "depth": 1
      }
    },
    "7da540dd-cef8-4f34-84e8-86a094542b7c": {
      "id": "7da540dd-cef8-4f34-84e8-86a094542b7c",
      "value": [
        {
          "_id": "c3e9715c-8d88-4e44-902e-61c49403225f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.intellij.execution.ExecutionManager;\nimport com.intellij.openapi.project.Project;\nimport com.ssafy.ododocintellij.directory.frame.DirectoryFrame;\nimport com.ssafy.ododocintellij.directory.manager.DirectoryInfoManager;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport com.ssafy.ododocintellij.sender.BuildResultSender;\nimport com.ssafy.ododocintellij.sender.alert.WebSocketReConnectAlert;\nimport com.ssafy.ododocintellij.tracker.CodeListener;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectProvider;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport javafx.application.Platform;\nimport javafx.concurrent.Worker;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.ProgressIndicator;\nimport javafx.scene.image.Image;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.web.WebEngine;\nimport javafx.scene.web.WebView;\nimport javafx.stage.Stage;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\n\nimport java.net.CookieHandler;\nimport java.net.CookieManager;\nimport java.util.Optional;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\nimport static java.net.CookiePolicy.ACCEPT_ALL;\n\npublic class OauthLoginFrame extends Stage {\n\n    private String clientId;\n    private String redirectUri;\n    private String firstLocation;\n    private String lastLocation;\n    private String loginUri;\n    private final int TIME_OUT = 5; // 로그인 응답 대기 시간\n\n    private ScheduledExecutorService scheduler;\n    private MainLoginFrame mainLoginFrame = null;\n    private ProgressIndicator loadingIndicator;\n    private Alert alert;\n\n    public OauthLoginFrame(MainLoginFrame mainLoginFrame, String provider){\n        this.mainLoginFrame = mainLoginFrame;\n\n        // 제목 설정\n        setTitle(\" \" + provider);\n\n        String lowerProvider = provider.toLowerCase();\n        redirectUri = \"https://k10d209.p.ssafy.io/api/oauth2/authorization/\" + lowerProvider;\n\n        // 아이콘 설정\n        String iconImagePath = \"/image/button/\" + lowerProvider  + \"_icon.png\";\n        Image windowIcon = new Image(getClass().getResourceAsStream(iconImagePath));\n        getIcons().add(windowIcon);\n\n        StackPane layout = new StackPane();\n        WebView webView = new WebView();\n        WebEngine webEngine = webView.getEngine();\n        loadingIndicator = new ProgressIndicator();\n        loadingIndicator.setVisible(false);\n\n        layout.getChildren().addAll(webView, loadingIndicator);\n        Scene scene = new Scene(layout, 450, 600);\n        setScene(scene);\n        show();\n\n        // alert 초기화\n        alert = AlertHelper.makeAlert(\n                Alert.AlertType.WARNING,\n                \" \" + provider,\n                \"로그인 실패\",\n                \"다시 로그인 해주세요.\",\n                iconImagePath);\n\n        // oauth 플랫폼에 따라 필드 초기화\n        switch(provider) {\n            case \"KAKAO\" :\n                clientId = \"a23282fc18f2b445d559dfe93fa96e6b\";\n                firstLocation = \"kakaossotokenlogin.do\";\n                lastLocation = redirectUri;\n                loginUri = \"https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"NAVER\" :\n                clientId = \"DRnVNgGzq_x_6Q4apfhJ\";\n                firstLocation = \"oauth_token\";\n                lastLocation = \"nid\";\n                loginUri = \"https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri;\n                break;\n            case \"GOOGLE\" :\n                clientId = \"599323777848-68aq3cu9p98np6eml1m77mfc1ethpkrp.apps.googleusercontent.com\";\n                firstLocation = \"SetSID\";\n                lastLocation = \"Fuserinfo.profile\";\n                loginUri = \"https://accounts.google.com/o/oauth2/v2/auth?client_id=\"\n                        + clientId\n                        + \"&redirect_uri=\"\n                        + redirectUri\n                        + \"&scope=profile&response_type=code\";\n                break;\n        }\n\n        doOauthLogin(webEngine, provider);\n    }\n\n    private void doOauthLogin(WebEngine webEngine, String provider) {\n\n        CookieManager cookieManager = new CookieManager();\n        cookieManager.setCookiePolicy(ACCEPT_ALL);\n        CookieHandler.setDefault(cookieManager);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        DirectoryInfoManager directoryInfoManager = DirectoryInfoManager.getInstance();\n\n        if(scheduler != null && !scheduler.isShutdown()){\n            scheduler.shutdownNow();\n        }\n        scheduler = Executors.newSingleThreadScheduledExecutor();\n        Runnable timeoutTask = () -> {\n            Platform.runLater(() -> {\n                alert.showAndWait();\n                close();\n                cookieManager.getCookieStore().removeAll();\n                webEngine.executeScript(\"localStorage.clear();\");\n            });\n        };\n\n        webEngine.getLoadWorker().stateProperty().addListener((obs, oldState, newState) -> {\n\n            // 화면이 성공적으로 전환이 되었을 때\n            if (newState == Worker.State.SUCCEEDED) {\n\n                // 로그인 응답 시간 스케쥴러 등록, 로딩 스피너 작동\n                if (webEngine.getLocation().contains(firstLocation)){\n                    scheduler.schedule(timeoutTask, TIME_OUT, TimeUnit.SECONDS);\n                    loadingIndicator.setVisible(true);\n                }\n\n                boolean shouldProcess = false;\n                switch (provider){\n                    case \"KAKAO\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri);\n                        break;\n                    case \"NAVER\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && !webEngine.getLocation().contains(lastLocation);\n                        break;\n                    case \"GOOGLE\" :\n                        shouldProcess = webEngine.getLocation().contains(redirectUri) && webEngine.getLocation().contains(lastLocation);\n                        break;\n                }\n\n                // 응답을 받을 화면이 나온다면\n                if (shouldProcess) {\n\n                    scheduler.shutdownNow();\n                    loadingIndicator.setVisible(false);\n\n                    // javascript를 실행시켜 content 정보 가져오기\n                    String content = (String) webEngine.executeScript(\"document.body.textContent\");\n                    Long status;\n                    JSONParser jsonParser = new JSONParser();\n\n                    try {\n                        // String to Json\n                        JSONObject json = (JSONObject) jsonParser.parse(content);\n                        status = (Long) json.get(\"status\");\n                        JSONObject data = (JSONObject) json.get(\"data\");\n\n                        if (status != 200) {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        } else {\n                            // access 토큰을 싱글톤 객체에 저장\n                            tokenManager.setAccessToken((String) data.get(\"accessToken\"));\n                            directoryInfoManager.setRootId((long) data.get(\"rootId\"));\n                            directoryInfoManager.setTitle((String) data.get(\"title\"));\n                        }\n\n\n                    } catch (ParseException e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    webEngine.executeScript(\"document.body.style.display = 'none';\");\n\n                    // 쿠키의 refresh 토큰을 싱글톤 객체에 저장\n                    cookieManager.getCookieStore().getCookies().forEach(cookie -> {\n                        if (cookie.getName().equals(\"refreshToken\")) {\n                            tokenManager.setRefreshToken(cookie.getValue());\n                        }\n                    });\n\n                    // 로그인 성공 여부 다시 확인\n                    if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                        Platform.runLater(() -> {\n                            alert.showAndWait();\n                            close();\n                            cookieManager.getCookieStore().removeAll();\n                        });\n\n                        return;\n                    }\n\n                    // 지금 현재 등록되어 있는 모든 프로젝트들에게 codeListener 추가하기\n                    addCodeListener(ProjectProvider.getInstance());\n\n                    try {\n                        new DirectoryFrame().start(mainLoginFrame);\n                        connectWebSocket();\n                    } catch (Exception e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    close();\n                }\n            }\n\n        });\n\n        webEngine.load(loginUri);\n    }\n\n    // Queue에 있는 project 객체에 codeListener 추가해주기.\n    private void addCodeListener(ProjectProvider projectProvider){\n        int size = projectProvider.getProjects().size();\n        ProjectTracker projectTracker = ProjectTracker.getInstance();\n        Project tempProject = null;\n        for(int i = 0; i < size; i++){\n            tempProject = projectProvider.getProjects().poll();\n            if(tempProject.isOpen()){\n                tempProject.getMessageBus().connect().subscribe(ExecutionManager.EXECUTION_TOPIC, new CodeListener(tempProject));\n                projectTracker.initHashStatus(tempProject);\n            }\n        }\n    }\n\n    // 처리 서버와 webSocket 연결해주기\n    private void connectWebSocket() {\n        BuildResultSender.setINSTANCE(null);\n        BuildResultSender.getINSTANCE();\n\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n\n        if(!BuildResultSender.isConnected()){\n            Platform.runLater(() -> {\n                Alert alert = WebSocketReConnectAlert.makeAlert();\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() == ButtonType.OK) {\n                    connectWebSocket();\n                }\n                else {\n                    this.close();\n                }\n            });\n        }\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 28,
        "depth": 1
      }
    },
    "7e372f9f-6c9a-402c-ae68-da2e7b017a00": {
      "id": "7e372f9f-6c9a-402c-ae68-da2e7b017a00",
      "value": [
        {
          "_id": "cacca4f5-eae1-4bcc-afb8-c10a0e5d79a7",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n수정 요청 DTO에는 id와 이름이 포함되어 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "7f7215a2-de01-4b8c-8f27-88cfeb84ec30": {
      "id": "7f7215a2-de01-4b8c-8f27-88cfeb84ec30",
      "value": [
        {
          "_id": "9451dcfa-4be3-47f0-8e8a-f43ef1e712b6",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class RequestDto {\n    @JsonProperty\n    private String sourceApplication;\n    @JsonProperty\n    private String accessToken;\n    @JsonProperty\n    private String dataType;\n    @JsonProperty\n    private Long connectedFileId;\n    @JsonProperty\n    private String timestamp;\n    @JsonProperty\n    private Object content;\n\n    private static final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\");\n\n    public void setSourceApplication(String sourceApplication) {\n        this.sourceApplication = sourceApplication;\n    }\n\n    public void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public void setDataType(String dataType) {\n        this.dataType = dataType;\n    }\n\n    public void setConnectedFileId(Long connectedFileId) {\n        this.connectedFileId = connectedFileId;\n    }\n\n\n    public void setContent(Object content) {\n        this.content = content;\n    }\n\n    public void setTimestamp(LocalDateTime timestamp) {\n        this.timestamp = timestamp.format(formatter);\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 61,
        "depth": 1
      }
    },
    "82cef1ad-51f2-4a36-b6fb-7c53ed436d96": {
      "id": "82cef1ad-51f2-4a36-b6fb-7c53ed436d96",
      "value": [
        {
          "_id": "1d19fe7c-e6cc-41a2-b0ad-fb1efa263ad7",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nConnectedFileManager 클래스는 싱글톤으로 구현되어 있고 directoryId를 관리하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 41,
        "depth": 1
      }
    },
    "85bd77e0-46b6-4ee5-b5fd-0170bd3ef136": {
      "id": "85bd77e0-46b6-4ee5-b5fd-0170bd3ef136",
      "value": [
        {
          "_id": "f0b54602-247f-406c-be90-5c6cca837890",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.entity;\n\npublic class FileInfo {\n\n    private Long id;\n    private String name;\n    private String type;\n\n    public FileInfo(Long id, String name, String type) {\n        this.id = id;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    @Override\n    public String toString() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 52,
        "depth": 1
      }
    },
    "86856c5d-9225-4af1-9bd3-96a28d8198e5": {
      "id": "86856c5d-9225-4af1-9bd3-96a28d8198e5",
      "value": [
        {
          "_id": "a0d10296-f5bb-4e04-b6f8-29e1533c3fc6",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nDirectoryInfoManager는 싱글톤 패턴을 이용하여 디렉토리 정보를 관리하는 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 74,
        "depth": 1
      }
    },
    "9212f52e-a138-4823-888b-676a337e98f4": {
      "id": "9212f52e-a138-4823-888b-676a337e98f4",
      "value": [
        {
          "_id": "4e7dccdb-d925-4426-86fb-8fe28e75e825",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트 정보를 저장하는 클래스이며 파일, 해시코드, 소스 코드를 포함합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "9665bba6-0348-455e-9a85-7b8b4d3bfd52": {
      "id": "9665bba6-0348-455e-9a85-7b8b4d3bfd52",
      "value": [
        {
          "_id": "6df81dd7-51ec-4116-9e96-eb53ca4f3ab5",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc IntelliJ 플러그인은 프로젝트를 시작할 때 자동으로 JavaFX 플랫폼을 초기화하고 로그인 여부를 확인하여 코드 리스너를 추가합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 32,
        "depth": 1
      }
    },
    "982c229c-955f-4667-955c-3d61589721b9": {
      "id": "982c229c-955f-4667-955c-3d61589721b9",
      "value": [
        {
          "_id": "92b19164-8d22-4906-b409-335a80469d50",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.dto;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class ErrorFileInfo {\n    @JsonProperty\n    private String fileName;\n    @JsonProperty\n    private String sourceCode;\n    @JsonProperty\n    private int line;\n\n    public ErrorFileInfo(String fileName, String sourceCode, int line) {\n        this.fileName = fileName;\n        this.sourceCode = sourceCode;\n        this.line = line;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 37,
        "depth": 1
      }
    },
    "999eead0-3b83-42f3-afb0-848713af9440": {
      "id": "999eead0-3b83-42f3-afb0-848713af9440",
      "value": [
        {
          "_id": "153b1ea8-de99-4190-85c0-f38a60e5ccbd",
          "type": "bulleted-list",
          "children": [
            {
              "text": "CreateRequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 48,
        "depth": 1
      }
    },
    "9a554598-6491-4a4b-918b-d9c910445739": {
      "id": "9a554598-6491-4a4b-918b-d9c910445739",
      "value": [
        {
          "_id": "1df2bfac-4d96-417f-95f0-ac7e50b73621",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 플러그인을 실행하여 디렉토리 프레임을 열 수 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 35,
        "depth": 1
      }
    },
    "9cf49599-17c5-4d99-93e1-36abc55cf6c2": {
      "id": "9cf49599-17c5-4d99-93e1-36abc55cf6c2",
      "value": [
        {
          "_id": "c7d38e93-d221-4e4e-9063-2e496685f41e",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n프로젝트를 제공하는 싱글톤 클래스인 ProjectProvider 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 26,
        "depth": 1
      }
    },
    "a007219f-3805-4195-8ed3-1096f4dca1b8": {
      "id": "a007219f-3805-4195-8ed3-1096f4dca1b8",
      "value": [
        {
          "_id": "92150229-2a61-49a4-b80d-9aa92da2cb56",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "a7ff18e3-0957-4b8e-bf94-5504e8e36006": {
      "id": "a7ff18e3-0957-4b8e-bf94-5504e8e36006",
      "value": [
        {
          "_id": "502040d7-0dc1-48ed-9d4c-0231e8f18008",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileAndFolderTreeCell.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 42,
        "depth": 1
      }
    },
    "adb4f18d-9844-468d-843c-154ab93ba149": {
      "id": "adb4f18d-9844-468d-843c-154ab93ba149",
      "value": [
        {
          "_id": "f0784558-d694-46f5-ad79-2ecc31577905",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.frame;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododocintellij.directory.dto.request.ModifyRequestDto;\nimport com.ssafy.ododocintellij.directory.dto.response.ResultDto;\nimport com.ssafy.ododocintellij.directory.entity.FileInfo;\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.frame.MainLoginFrame;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ContextMenu;\nimport javafx.scene.control.TextField;\nimport javafx.scene.control.TreeCell;\nimport javafx.scene.input.KeyCode;\nimport javafx.stage.Stage;\nimport org.springframework.web.reactive.function.client.WebClient;\n\nimport java.util.Map;\n\npublic class FileAndFolderTreeCell extends TreeCell<FileInfo> {\n\n    private TextField textField;\n    private Runnable refreshCallback;\n    private ContextMenu folderContextMenu;\n    private ContextMenu fileContextMenu;\n    private Stage stage;\n    private final String baseUrl = \"https://k10d209.p.ssafy.io/api/directory\";\n\n    public FileAndFolderTreeCell(ContextMenu folderContextMenu, ContextMenu fileContextMenu, Stage stage,Runnable refreshCallback) {\n        this.fileContextMenu = fileContextMenu;\n        this.folderContextMenu = folderContextMenu;\n        this.stage = stage;\n        this.refreshCallback = refreshCallback;\n    }\n\n    @Override\n    protected void updateItem(FileInfo fileInfo, boolean empty) {\n        super.updateItem(fileInfo, empty);\n        if(empty || fileInfo == null) {\n            setText(null);\n            setGraphic(null);\n            setContextMenu(null);\n        } else{\n            if(isEditing()){\n                if(textField != null){\n                    textField.setText(getString());\n                }\n                setText(null);\n                setGraphic(textField);\n            }else{\n                setText(fileInfo.toString());\n                setGraphic(null);\n\n                if(fileInfo.getType().equals(\"FOLDER\")){\n                    setContextMenu(folderContextMenu);\n                }\n                else if (fileInfo.getType().equals(\"FILE\")){\n                    setContextMenu(fileContextMenu);\n                }\n            }\n        }\n    }\n\n    @Override\n    public void startEdit() {\n        super.startEdit();\n        if(textField == null){\n            createTextField();\n        }\n        setGraphic(textField);\n        setText(null);\n        textField.setText(getItem().getName());\n        textField.selectAll();\n        textField.requestFocus();\n    }\n\n    @Override\n    public void commitEdit(FileInfo fileInfo) {\n        super.commitEdit(fileInfo);\n        modifyFolderOrFile(fileInfo.getName());\n    }\n\n    @Override\n    public void cancelEdit() {\n        super.cancelEdit();\n        setText(getItem().getName());\n        setGraphic(null);\n    }\n\n    private void createTextField() {\n        textField = new TextField(getString());\n        textField.setOnKeyReleased(event -> {\n            if (event.getCode() == KeyCode.ENTER) {\n                commitEdit(new FileInfo(getItem().getId(), textField.getText(), getItem().getType()));\n            } else if (event.getCode() == KeyCode.ESCAPE) {\n                cancelEdit();\n            }\n        });\n    }\n\n    private void modifyFolderOrFile(String name) {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(baseUrl)\n                .defaultHeader(\"Content-type\", \"application/json\")\n                .defaultHeader(\"Authorization\", TokenManager.getInstance().getAccessToken())\n                .build();\n\n        ModifyRequestDto createRequestDto = new ModifyRequestDto(getItem().getId(), name);\n\n        webClient.put()\n                .uri(\"/edit\")\n                .bodyValue(createRequestDto)\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        if (refreshCallback != null) {\n                            refreshCallback.run();\n                        }\n                    }\n                    else if (result.getStatus() == 401){\n                        refreshAccessToken();\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                    else {\n                        showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                        refreshCallback.run();\n                    }\n                }, error ->{\n                    showAlert(\"수정 실패\", \"다시 시도해주세요.\");\n                    refreshCallback.run();\n                });\n    }\n    private void showAlert(String header, String content){\n        Platform.runLater(() ->{\n            Alert alert = AlertHelper.makeAlert(\n                    Alert.AlertType.WARNING,\n                    \"디렉토리\",\n                    header,\n                    content,\n                    \"/image/button/icon.png\"\n            );\n            alert.showAndWait();\n        });\n    }\n\n    private void refreshAccessToken() {\n        WebClient webClient = WebClient.builder()\n                .baseUrl(\"https://k10d209.p.ssafy.io/api\")\n                .defaultCookie(\"refreshToken\", TokenManager.getInstance().getRefreshToken())\n                .build();\n\n        webClient.post()\n                .uri(\"/oauth2/issue/access-token\")\n                .retrieve()\n                .bodyToMono(ResultDto.class)\n                .subscribe(result -> {\n                    if (result.getStatus() == 200) {\n                        ObjectMapper objectMapper = new ObjectMapper();\n                        Map<String, String> data = objectMapper.convertValue(result.getData(), Map.class);\n                        TokenManager.getInstance().setAccessToken(data.get(\"accessToken\"));\n                    } else {\n                        reLogin();\n                    }\n                }, error -> reLogin());\n\n    }\n\n    private void reLogin() {\n        Platform.runLater(() -> {\n            TokenManager.getInstance().setAccessToken(null);\n            TokenManager.getInstance().setRefreshToken(null);\n\n            stage.close();\n            MainLoginFrame mainLoginFrame = new MainLoginFrame();\n            mainLoginFrame.show();\n        });\n    }\n\n    private String getString() {\n        return getItem() == null ? \"\" : getItem().toString();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 43,
        "depth": 1
      }
    },
    "af00a65f-0e39-4bf8-a5b9-3e30a1630dfa": {
      "id": "af00a65f-0e39-4bf8-a5b9-3e30a1630dfa",
      "value": [
        {
          "_id": "e23793bb-3d36-4578-9f76-6e1ca6e59a7a",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 54,
        "depth": 1
      }
    },
    "b43306c4-510b-4b2f-ad77-637cdc66aa0c": {
      "id": "b43306c4-510b-4b2f-ad77-637cdc66aa0c",
      "value": [
        {
          "_id": "d0ffa09d-ae69-43e4-9c12-d2dc7ec6d313",
          "type": "bulleted-list",
          "children": [
            {
              "text": "StartUpActivity.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 30,
        "depth": 1
      }
    },
    "b6291a19-0b81-441d-8cfa-3f4de2c39545": {
      "id": "b6291a19-0b81-441d-8cfa-3f4de2c39545",
      "value": [
        {
          "_id": "829f86da-2d21-41ce-af7d-f298c74dfb3d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n수정된 파일의 정보를 담은 객체입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 14,
        "depth": 1
      }
    },
    "b7588c1a-0ca4-49b4-a908-bbdffbefd498": {
      "id": "b7588c1a-0ca4-49b4-a908-bbdffbefd498",
      "value": [
        {
          "_id": "88d96890-f490-49ab-a5f0-fc25a8512518",
          "type": "bulleted-list",
          "children": [
            {
              "text": "WebSocketReConnectAlert.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 15,
        "depth": 1
      }
    },
    "b7fa8f70-8894-4dda-aa7c-64e69f4e65c5": {
      "id": "b7fa8f70-8894-4dda-aa7c-64e69f4e65c5",
      "value": [
        {
          "_id": "e2490ab7-68fe-4754-b40f-76004aa9c463",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.sender.alert;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport javafx.scene.control.Alert;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.stage.Stage;\n\npublic class WebSocketReConnectAlert {\n\n    public static Alert makeAlert() {\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setTitle(\" Ododoc\");\n        alert.setHeaderText(\"서버 연결 실패\");\n        alert.setContentText(\"Ododoc 서비스를 이용하려면 서버와의 연결이 필요합니다.\\n다시 시도하시겠습니까?\");\n        Stage alertStage = (Stage) alert.getDialogPane().getScene().getWindow();\n        alertStage.getIcons().add(new Image(AlertHelper.class.getResourceAsStream(\"/image/button/icon.png\")));\n        ImageView warningIcon = new ImageView(new Image(WebSocketReConnectAlert.class.getResourceAsStream(\"/image/button/warning.png\")));\n        alert.setGraphic(warningIcon);\n\n        return alert;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 16,
        "depth": 1
      }
    },
    "b9d10135-57b8-4ca9-9d4c-ed0eb9fb371d": {
      "id": "b9d10135-57b8-4ca9-9d4c-ed0eb9fb371d",
      "value": [
        {
          "_id": "ea5438cd-c8ff-4030-84ca-b3f62df6e8b8",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileInfo.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 51,
        "depth": 1
      }
    },
    "be822a7f-2b53-485b-a7fa-1240afd6df24": {
      "id": "be822a7f-2b53-485b-a7fa-1240afd6df24",
      "value": [
        {
          "_id": "ac5c97ec-54fd-4f60-a4db-14928f37d974",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.response;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DirectoryDto {\n\n    private Long id = -1L;\n    private String name = \"\";\n    private String type = \"\";\n    private List<DirectoryDto> children = new ArrayList<>();\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    public List<DirectoryDto> getChildren() {\n        return children;\n    }\n\n    public void setChildren(List<DirectoryDto> children) {\n        this.children = children;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 55,
        "depth": 1
      }
    },
    "c1419add-c696-497d-8e95-8a967c6efe71": {
      "id": "c1419add-c696-497d-8e95-8a967c6efe71",
      "value": [
        {
          "_id": "955217e5-1efc-47f3-a03f-39f0df439c27",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class CreateRequestDto {\n\n    private Long parentId;\n    private String name;\n    private String type;\n\n    public CreateRequestDto(Long parentId, String name, String type) {\n        this.parentId = parentId;\n        this.name = name;\n        this.type = type;\n    }\n\n    public Long getParentId() {\n        return parentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getType() {\n        return type;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 49,
        "depth": 1
      }
    },
    "c4edf4c5-af61-4beb-bc09-9f10c59d3214": {
      "id": "c4edf4c5-af61-4beb-bc09-9f10c59d3214",
      "value": [
        {
          "_id": "6c9dac59-0b34-46b7-b595-89744b3410ec",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 87,
        "depth": 0
      }
    },
    "c60dee59-ff3a-45c4-aa2f-0a2310c89dd7": {
      "id": "c60dee59-ff3a-45c4-aa2f-0a2310c89dd7",
      "value": [
        {
          "_id": "79401c7b-7107-4383-a247-779d4a7124cd",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 83,
        "depth": 0
      }
    },
    "c692394b-dbea-4e48-b4f9-c97ac358f0af": {
      "id": "c692394b-dbea-4e48-b4f9-c97ac358f0af",
      "value": [
        {
          "_id": "a0f0b391-5423-4de6-a036-c3c0d4adff9a",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n빌드 결과 정보를 담은 객체입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 23,
        "depth": 1
      }
    },
    "cbc052b7-2cda-4ead-a8fe-2022b6af139b": {
      "id": "cbc052b7-2cda-4ead-a8fe-2022b6af139b",
      "value": [
        {
          "_id": "cad4c572-6e15-4f62-bd40-92704abcc36d",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nBuildResultSender 클래스는 웹소켓을 이용하여 서버와의 연결을 관리하고, 메시지를 전송하는 기능을 제공합니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 59,
        "depth": 1
      }
    },
    "cd9688e1-8aab-4e98-9ffe-89e59b8c84b9": {
      "id": "cd9688e1-8aab-4e98-9ffe-89e59b8c84b9",
      "value": [
        {
          "_id": "cb14cfa9-a293-43a8-8473-23fbf1f21396",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nErrorFileInfo는 파일 이름, 소스 코드 내용, 라인을 가지고 있는 DTO 클래스이다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 38,
        "depth": 1
      }
    },
    "d09812ab-8d0b-4825-a04a-629da25d6a91": {
      "id": "d09812ab-8d0b-4825-a04a-629da25d6a91",
      "value": [
        {
          "_id": "4d97967a-be51-4571-9e47-8b78cbce09e1",
          "type": "bulleted-list",
          "children": [
            {
              "text": "BuildResultSender.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 57,
        "depth": 1
      }
    },
    "d41d1ccc-90bf-47fe-9405-85ebd0fb2029": {
      "id": "d41d1ccc-90bf-47fe-9405-85ebd0fb2029",
      "value": [
        {
          "_id": "fd0fd3b4-e83d-48ad-a678-d18e8de972ad",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 81,
        "depth": 0
      }
    },
    "d4e7dd5a-fd58-49f2-9038-80291279c7c8": {
      "id": "d4e7dd5a-fd58-49f2-9038-80291279c7c8",
      "value": [
        {
          "_id": "62920743-4c74-41f3-85bc-a3d9655eb36f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij;\n\nimport com.intellij.openapi.Disposable;\nimport com.intellij.openapi.application.ApplicationManager;\nimport com.intellij.openapi.components.ServiceManager;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.intellij.psi.PsiFile;\nimport com.intellij.psi.PsiManager;\nimport com.intellij.psi.search.FilenameIndex;\nimport com.intellij.psi.search.GlobalSearchScope;\nimport com.ssafy.ododocintellij.tracker.entity.ProjectInfo;\nimport com.ssafy.ododocintellij.tracker.manager.ProjectTracker;\nimport org.jetbrains.annotations.NotNull;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.stream.Collectors;\n\npublic class DisposableService implements Disposable {\n\n    private final Project project;\n    private List<PsiFile> psiFiles;\n\n    public DisposableService(@NotNull Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public void dispose() {\n        System.out.println(\"종료: \" + project.getName());\n\n        CompletableFuture.runAsync(() -> {\n            getProjectFileList();\n            processProjectFiles();\n        }).exceptionally(ex -> {\n            ex.printStackTrace();\n            return null;\n        });\n    }\n\n    public static DisposableService getInstance(@NotNull Project project) {\n        return ServiceManager.getService(project, DisposableService.class);\n    }\n\n    private void getProjectFileList() {\n        GlobalSearchScope scope = GlobalSearchScope.projectScope(project);\n        Collection<VirtualFile> files = FilenameIndex.getAllFilesByExt(project, \"java\", scope);\n\n        PsiManager psiManager = PsiManager.getInstance(project);\n\n        psiFiles = files.stream()\n                .map(psiManager::findFile)\n                .collect(Collectors.toList());\n    }\n\n    private void processProjectFiles() {\n        ApplicationManager.getApplication().invokeLater(() -> {\n            if (project.isDisposed()) {\n                return;\n            }\n\n            ProjectTracker projectTracker = ProjectTracker.getInstance();\n            Map<String, ProjectInfo> beforeProjectStatus = projectTracker.getBeforeProjectStatus();\n            Map<String, ProjectInfo> currentProjectStatus = projectTracker.getCurrentProjectStatus();\n\n            String allBeforeProjectStatus = \"\";\n            String allCurrentProjectStatus = \"\";\n\n            for (PsiFile file : psiFiles) {\n                if (beforeProjectStatus.containsKey(file.getName())) {\n                    System.out.println(\"삭제: \" + file.getName());\n                    beforeProjectStatus.remove(file.getName());\n                } else {\n                    allBeforeProjectStatus += getEncrypt(file.getName());\n                }\n\n                if (currentProjectStatus.containsKey(file.getName())) {\n                    currentProjectStatus.remove(file.getName());\n                } else {\n                    allCurrentProjectStatus += getEncrypt(file.getName());\n                }\n            }\n\n            allBeforeProjectStatus = getEncrypt(allBeforeProjectStatus);\n            allCurrentProjectStatus = getEncrypt(allCurrentProjectStatus);\n\n//            projectTracker.setAllBeforeProjectStatus(allBeforeProjectStatus);\n//            projectTracker.setAllCurrentProjectStatus(allCurrentProjectStatus);\n        });\n    }\n\n    private String getEncrypt(String code) {\n        String result = null;\n\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(code.getBytes());\n            byte[] hashCode = md.digest();\n\n            StringBuffer sb = new StringBuffer();\n            for (byte b : hashCode) {\n                sb.append(String.format(\"%02x\", b));\n            }\n            result = sb.toString();\n\n        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n        }\n\n        return result;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 67,
        "depth": 1
      }
    },
    "d6a5bb22-4589-4745-a6c6-fc782f36a521": {
      "id": "d6a5bb22-4589-4745-a6c6-fc782f36a521",
      "value": [
        {
          "_id": "7bf8ca83-48c3-479c-adcb-a5b674f6fd2d",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 82,
        "depth": 0
      }
    },
    "d9f3d306-4b8b-4ac0-a98b-b1ae692e834f": {
      "id": "d9f3d306-4b8b-4ac0-a98b-b1ae692e834f",
      "value": [
        {
          "_id": "a378cd2f-fa59-4c92-a142-df2266f9761f",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.directory.dto.request;\n\npublic class ModifyRequestDto {\n\n    private Long id;\n    private String name;\n\n    public ModifyRequestDto(Long id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 7,
        "depth": 1
      }
    },
    "da24992a-f28e-4996-bd4a-1f3273d44c23": {
      "id": "da24992a-f28e-4996-bd4a-1f3273d44c23",
      "value": [
        {
          "_id": "795174e4-7a10-4787-b40c-8a5fbf62913a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "dad7356e-f1cb-4ba2-9d02-c825caeb620d": {
      "id": "dad7356e-f1cb-4ba2-9d02-c825caeb620d",
      "value": [
        {
          "_id": "01c3b0fe-452c-4c9b-8f21-4aad8950e085",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectProvider.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 24,
        "depth": 1
      }
    },
    "dc4eb5d1-2bd4-45e8-a626-2c0abe1f811d": {
      "id": "dc4eb5d1-2bd4-45e8-a626-2c0abe1f811d",
      "value": [
        {
          "_id": "1ea8f137-efec-4413-afa1-f9d9f57aee9f",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉터리 정보를 담고 있는 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 56,
        "depth": 1
      }
    },
    "df6ec590-b414-46fe-90ae-c07cca948cf1": {
      "id": "df6ec590-b414-46fe-90ae-c07cca948cf1",
      "value": [
        {
          "_id": "fa339814-79f4-4d31-aa0f-94591fe8d179",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n로그인을 위한 화면을 담고 있는 MainLoginFrame 클래스가 구현되어 있습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 65,
        "depth": 1
      }
    },
    "e0333713-c6ea-4895-a9d4-188732f1c3ea": {
      "id": "e0333713-c6ea-4895-a9d4-188732f1c3ea",
      "value": [
        {
          "_id": "743e2787-cc33-46b4-a48e-4806c0a39934",
          "type": "bulleted-list",
          "children": [
            {
              "text": "RequestDto.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 60,
        "depth": 1
      }
    },
    "e09634d6-2c00-473a-9073-051d05f7ce10": {
      "id": "e09634d6-2c00-473a-9073-051d05f7ce10",
      "value": [
        {
          "_id": "8ca93014-9d92-4af1-9e4d-1a431430e82c",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.manager;\n\npublic class TokenManager {\n\n    private String accessToken;\n    private String refreshToken;\n\n    private TokenManager() {}\n\n    private static class TokenManagerHolder {\n        private static final TokenManager INSTANCE = new TokenManager();\n    }\n\n    public static TokenManager getInstance() {\n        return TokenManagerHolder.INSTANCE;\n    }\n\n    public synchronized String getAccessToken() {\n        return accessToken;\n    }\n\n    public synchronized String getRefreshToken() {\n        return refreshToken;\n    }\n\n    public synchronized void setAccessToken(String accessToken) {\n        this.accessToken = accessToken;\n    }\n\n    public synchronized void setRefreshToken(String refreshToken) {\n        this.refreshToken = refreshToken;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 76,
        "depth": 1
      }
    },
    "e1eac5db-baab-4f73-85ec-77d29eb196ff": {
      "id": "e1eac5db-baab-4f73-85ec-77d29eb196ff",
      "value": [
        {
          "_id": "df988404-d241-4538-b4a8-a6eb98994282",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nIntelliJ 실행 중 발생한 빌드 결과와 오류 정보를 추적하여 서버로 전송하는 코드입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 11,
        "depth": 1
      }
    },
    "e2f9abea-321e-4907-9604-6e3f34391221": {
      "id": "e2f9abea-321e-4907-9604-6e3f34391221",
      "value": [
        {
          "_id": "73320dbc-f195-4435-bd4f-6822166b465c",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n파일 정보를 나타내는 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 53,
        "depth": 1
      }
    },
    "e5b1f9fe-6557-4b10-900f-dcbdcdf273ce": {
      "id": "e5b1f9fe-6557-4b10-900f-dcbdcdf273ce",
      "value": [
        {
          "_id": "2413d783-7c62-44c7-a814-eea7457b7230",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.manager;\n\nimport com.intellij.openapi.project.Project;\n\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\n\npublic class ProjectProvider {\n\n    private Queue<Project> projects = new ArrayDeque<>();\n\n    private ProjectProvider() {}\n\n    private static class ProjectProviderHolder {\n        private static final ProjectProvider INSTANCE = new ProjectProvider();\n    }\n\n    public static ProjectProvider getInstance() {\n        return ProjectProviderHolder.INSTANCE;\n    }\n\n    public Queue<Project> getProjects() {\n        return projects;\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 25,
        "depth": 1
      }
    },
    "e7efd8a8-8da0-498f-acf5-bfef7c1b5366": {
      "id": "e7efd8a8-8da0-498f-acf5-bfef7c1b5366",
      "value": [
        {
          "_id": "b9c32598-1783-4005-8e36-d9c0e6445cca",
          "type": "bulleted-list",
          "children": [
            {
              "text": "ProjectTracker.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 45,
        "depth": 1
      }
    },
    "e93e071e-a1be-4398-8bfd-eabee5bab389": {
      "id": "e93e071e-a1be-4398-8bfd-eabee5bab389",
      "value": [
        {
          "_id": "8039daca-15ca-4b57-bb4d-2a649de76a25",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.tracker.entity;\n\nimport com.intellij.psi.PsiFile;\n\npublic class ProjectInfo implements Cloneable{\n\n    private PsiFile psiFile;\n    private String hash;\n    private String sourceCode;\n\n    public ProjectInfo(PsiFile psiFile, String hash, String sourceCode) {\n        this.psiFile = psiFile;\n        this.hash = hash;\n        this.sourceCode = sourceCode;\n    }\n\n    public PsiFile getPsiFile() {\n        return psiFile;\n    }\n\n    public String getHash() {\n        return hash;\n    }\n\n    public String getSourceCode() {\n        return sourceCode;\n    }\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "f1431adf-fcdf-456e-b8fc-cbe56ba856c0": {
      "id": "f1431adf-fcdf-456e-b8fc-cbe56ba856c0",
      "value": [
        {
          "_id": "2fa14bd6-d6a6-4567-a755-ce4039e776d3",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nOdodoc 디렉토리를 관리하는 프레임을 구현한 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 20,
        "depth": 1
      }
    },
    "f269f54e-203a-479a-af56-ab4dd75fb8f2": {
      "id": "f269f54e-203a-479a-af56-ab4dd75fb8f2",
      "value": [
        {
          "_id": "12f69136-fd2c-4326-8eca-509f2178c1ab",
          "type": "bulleted-list",
          "children": [
            {
              "text": "OpenOdodocPlugin.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 33,
        "depth": 1
      }
    },
    "f8a925a4-1d93-4754-ad41-f8fe2ba820e3": {
      "id": "f8a925a4-1d93-4754-ad41-f8fe2ba820e3",
      "value": [
        {
          "_id": "d14b32c6-b6ae-4020-9ca9-4b5a6489bf3d",
          "type": "bulleted-list",
          "children": [
            {
              "text": "DirectoryFrame.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 18,
        "depth": 1
      }
    },
    "f9f79438-e3f6-490e-a255-cea763724a90": {
      "id": "f9f79438-e3f6-490e-a255-cea763724a90",
      "value": [
        {
          "_id": "536afd2d-7dfe-4b1e-b655-3ebe9d65bc0b",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododocintellij.login.frame;\n\nimport com.ssafy.ododocintellij.login.alert.AlertHelper;\nimport com.ssafy.ododocintellij.login.manager.TokenManager;\nimport javafx.application.Platform;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\nimport java.awt.*;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Optional;\n\npublic class MainLoginFrame extends Stage {\n\n    private static boolean isFrameVisible = false;\n\n    public MainLoginFrame() {\n        isFrameVisible = true;\n        setTitle(\" Ododoc\");\n        VBox layout = new VBox(10);\n        layout.setAlignment(Pos.CENTER);\n\n        Image windowIcon = new Image(getClass().getResourceAsStream(\"/image/button/icon.png\"));\n        getIcons().add(windowIcon);\n\n        TokenManager tokenManager = TokenManager.getInstance();\n        setOnCloseRequest(event -> {\n            if(tokenManager.getAccessToken() == null || tokenManager.getRefreshToken() == null){\n                Alert alert = AlertHelper.makeAlert(\n                        Alert.AlertType.CONFIRMATION,\n                        \" Ododoc\",\n                        \"로그인 필요\",\n                        \"Ododoc 서비스를 이용하려면 로그인이 필요합니다.\\n정말 종료하시겠습니까?\",\n                        \"/image/button/icon.png\"\n                );\n\n                Optional<ButtonType> result = alert.showAndWait();\n                if(result.isPresent() && result.get() != ButtonType.OK) {\n                    event.consume();\n                }\n                else{\n                    isFrameVisible = false;\n                }\n            }\n        });\n\n        Button homeBtn = makeHomeButton();\n        Button kakaoLoginBtn = makeButton(\"kakao\"); // 카카오 로그인 버튼\n        Button naverLoginBtn = makeButton(\"naver\"); // 네이버 로그인 버튼\n        Button googleLoginBtn = makeButton(\"google\"); // 구글 로그인 버튼\n\n        layout.getChildren().addAll(homeBtn, kakaoLoginBtn, naverLoginBtn, googleLoginBtn);\n        layout.setPadding(new Insets(-15, 0, 0, 0));\n        Scene scene = new Scene(layout, 300, 400);\n        setScene(scene);\n        show();\n    }\n\n    private void onLogin(String provider) {\n        new OauthLoginFrame(this, provider);\n    }\n\n    private Button makeButton(String provider){\n        String iconImagePath = \"/image/button/\" + provider +\"_login.png\";\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(iconImagePath)));\n        btnImageView.setFitWidth(183);\n        btnImageView.setFitHeight(45);\n        Button loginBtn = new Button(\"\", btnImageView);\n        loginBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 3, 3, 3, 3;\");\n\n        String upperProvider = provider.toUpperCase();\n        loginBtn.setOnAction(e -> {\n            onLogin(upperProvider);\n        });\n\n        return loginBtn;\n    }\n\n    private Button makeHomeButton(){\n        ImageView btnImageView = new ImageView(new Image(getClass().getResourceAsStream(\"/image/button/logo.png\")));\n        btnImageView.setFitWidth(184);\n        btnImageView.setFitHeight(60);\n        Button homeBtn = new Button(\"\", btnImageView);\n        homeBtn.setStyle(\"-fx-background-color: transparent; -fx-padding: 30, 0, 3, 3; -fx-border-color: transparent;\");\n\n        homeBtn.setOnAction(e -> {\n            openWebPage();\n        });\n\n        return homeBtn;\n    }\n\n    private void openWebPage() {\n        Platform.runLater(() -> {\n            try{\n                if(Desktop.isDesktopSupported()){\n                    Desktop desktop = Desktop.getDesktop();\n                    desktop.browse(new URI(\"https://k10d209.p.ssafy.io/\"));\n                }\n            } catch (IOException | URISyntaxException e){\n                e.printStackTrace();\n            }\n        });\n    }\n\n    public static boolean isFrameVisible() {\n        return isFrameVisible;\n    }\n\n\n}",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 64,
        "depth": 1
      }
    },
    "fc55bebe-dbdd-4fcb-8592-68073dec023a": {
      "id": "fc55bebe-dbdd-4fcb-8592-68073dec023a",
      "value": [
        {
          "_id": "c6ac356a-8bc8-418c-a679-cf1e5b46bcc6",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\n디렉토리 생성 요청 DTO 클래스입니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 50,
        "depth": 1
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a16f2e7f26a6e57b59b28"
  },
  "directoryId": 344,
  "lastOrder": -1,
  "content": {
    "11be2829-fe34-46d3-92ff-3c33fcb8a8d9": {
      "id": "11be2829-fe34-46d3-92ff-3c33fcb8a8d9",
      "value": [
        {
          "_id": "44d55988-0fa9-42ba-83bb-2df618ea48b0",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a1a2644125b4b1b89c1f2"
  },
  "directoryId": 345,
  "lastOrder": -1,
  "content": {
    "81bf56ef-9ccd-4509-92a8-b1d88647597c": {
      "id": "81bf56ef-9ccd-4509-92a8-b1d88647597c",
      "value": [
        {
          "_id": "16460700-0454-486a-b3d6-f64792ee0dbb",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
},
{
  "_id": {
    "$oid": "664a1b4061013e7c3bd65d35"
  },
  "directoryId": 347,
  "lastOrder": 15,
  "content": {
    "03813213-9808-4ff1-93a2-b274e2969641": {
      "id": "03813213-9808-4ff1-93a2-b274e2969641",
      "value": [
        {
          "_id": "29b87f45-caad-4596-9213-3babbfc21a31",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nFileController는 파일 서비스를 이용하여 파일을 저장하는 API를 제공한다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 5,
        "depth": 1
      }
    },
    "22ee03ae-2ffd-4162-92b1-a88a64000520": {
      "id": "22ee03ae-2ffd-4162-92b1-a88a64000520",
      "value": [
        {
          "_id": "5010a36a-9a94-4199-82b6-798fa9d3934a",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 1,
        "depth": 0
      }
    },
    "23fa782f-ca70-4e66-9519-d4b4542b05c5": {
      "id": "23fa782f-ca70-4e66-9519-d4b4542b05c5",
      "value": [
        {
          "_id": "07aedb2a-9e72-42ba-8d26-3164aade2981",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileController.java",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 3,
        "depth": 1
      }
    },
    "3241ae79-8aa7-4e0d-8215-b558f3402dc6": {
      "id": "3241ae79-8aa7-4e0d-8215-b558f3402dc6",
      "value": [
        {
          "_id": "6cf7724e-8964-4a95-b12c-b9e51a8fee8b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 6,
        "depth": 0
      }
    },
    "352bf0b0-e819-4e47-8454-56e7e5afdb55": {
      "id": "352bf0b0-e819-4e47-8454-56e7e5afdb55",
      "value": [
        {
          "_id": "e921592b-bc4f-44c0-ac57-07b3063ba377",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 11,
        "depth": 0
      }
    },
    "83c69cb5-654d-4f97-bcc5-fdafa91edb87": {
      "id": "83c69cb5-654d-4f97-bcc5-fdafa91edb87",
      "value": [
        {
          "_id": "344f33b2-53a6-4558-a16a-8c59501c5eab",
          "type": "bulleted-list",
          "children": [
            {
              "text": "FileService.java : 27",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "BulletedList",
      "meta": {
        "order": 8,
        "depth": 1
      }
    },
    "85446173-4575-4bd9-9559-8352d3ee9c3d": {
      "id": "85446173-4575-4bd9-9559-8352d3ee9c3d",
      "value": [
        {
          "_id": "0191211e-ca70-4696-9cb5-b7698721b32b",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 15,
        "depth": 0
      }
    },
    "a0a05673-0856-4cf6-b79e-fd74ee9a36e7": {
      "id": "a0a05673-0856-4cf6-b79e-fd74ee9a36e7",
      "value": [
        {
          "_id": "00e7762f-6b78-4971-9236-bf8af2656196",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nObjectMapper의 convertValue 메서드에서 List로의 변환에 실패하여 에러가 발생함.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 10,
        "depth": 1
      }
    },
    "a19a7b13-06ee-467b-97f1-db7c9346a495": {
      "id": "a19a7b13-06ee-467b-97f1-db7c9346a495",
      "value": [
        {
          "_id": "ff02d230-cabb-4f58-a205-e83a0a0c7660",
          "type": "heading-three",
          "children": [
            {
              "text": "터미널 로그",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 12,
        "depth": 0
      }
    },
    "a8e1524e-c71d-4b0e-9c3e-6daf9e69b27e": {
      "id": "a8e1524e-c71d-4b0e-9c3e-6daf9e69b27e",
      "value": [
        {
          "_id": "c08f3691-9959-45ea-b1f9-162a9959c568",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.controller;\n\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport com.ssafy.ododoc.file.service.FileService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequiredArgsConstructor\npublic class FileController {\n\n    private final FileService fileService;\n\n    @PostMapping(\"/save\")\n    public void saveFile(@RequestBody FileRequest fileRequest){\n        fileService.doFileSave(fileRequest);\n        System.out.println(\"하이\");\n    }\n\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 4,
        "depth": 1
      }
    },
    "b4be138c-1254-441b-ad1a-f5bf64aa2a5e": {
      "id": "b4be138c-1254-441b-ad1a-f5bf64aa2a5e",
      "value": [
        {
          "_id": "3bc93366-578d-46e7-864e-dc129d840978",
          "type": "paragraph",
          "children": [
            {
              "text": "",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Paragraph",
      "meta": {
        "order": 0,
        "depth": 0
      }
    },
    "c1beb1ec-b2b8-4afb-8d74-4288cf96628a": {
      "id": "c1beb1ec-b2b8-4afb-8d74-4288cf96628a",
      "value": [
        {
          "_id": "2fb4b598-ad17-4dd2-a226-9e7989e935c2",
          "type": "heading-three",
          "children": [
            {
              "text": "에러 발생 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 7,
        "depth": 0
      }
    },
    "c4f40810-b92a-48c5-bf92-3de71b4a212d": {
      "id": "c4f40810-b92a-48c5-bf92-3de71b4a212d",
      "value": [
        {
          "_id": "0c9fb576-b811-4a44-b3c4-8bf7b6ca5eda",
          "type": "code",
          "children": [
            {
              "text": "package com.ssafy.ododoc.file.service;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.ssafy.ododoc.file.dto.FileRequest;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Service\n@RequiredArgsConstructor\n@Slf4j\npublic class FileService {\n\n    private final ObjectMapper objectMapper;\n\n    public void doFileSave(FileRequest fileRequest) {\n\n        Map<String, String> map = new HashMap<>();\n        map.put(\"id\", fileRequest.getId());\n        map.put(\"title\", fileRequest.getTitle());\n        map.put(\"content\", fileRequest.getContent());\n\n        List<String> list = objectMapper.convertValue(map, List.class);\n        log.info(\"파일 저장 호출 : {}\", list);\n\n    }\n}\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubLight",
            "language": "java",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 9,
        "depth": 1
      }
    },
    "c53b77f3-7eec-4f6c-9dc4-c737307ce0f5": {
      "id": "c53b77f3-7eec-4f6c-9dc4-c737307ce0f5",
      "value": [
        {
          "_id": "aec2c54c-0f52-4578-8758-a80556fdb0e1",
          "type": "code",
          "children": [
            {
              "text": "2024-05-20T00:29:42.338+09:00 ERROR 6780 --- [OdodocProject] [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]] with root cause\n\ncom.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.Object>` from Object value (token `JsonToken.START_OBJECT`)\n at [Source: UNKNOWN; byte offset: #UNKNOWN]\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:396) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:4539) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:4475) ~[jackson-databind-2.15.4.jar:2.15.4]\n\tat com.ssafy.ododoc.file.service.FileService.doFileSave(FileService.java:27) ~[classes/:na]\n\tat com.ssafy.ododoc.file.controller.FileController.saveFile(FileController.java:18) ~[classes/:na]\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.6.jar:6.1.6]\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.20.jar:6.0]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.6.jar:6.1.6]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.20.jar:10.1.20]\n\tat java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]\n\n",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "void",
            "theme": "GithubDark",
            "language": "yaml",
            "checked": false
          }
        }
      ],
      "type": "Code",
      "meta": {
        "order": 13,
        "depth": 0
      }
    },
    "e085c4ae-216f-43f7-9e5c-5e6f7ebe748f": {
      "id": "e085c4ae-216f-43f7-9e5c-5e6f7ebe748f",
      "value": [
        {
          "_id": "a1baacaa-587b-411b-ab54-16f4522ebd97",
          "type": "heading-three",
          "children": [
            {
              "text": "변경된 코드",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingThree",
      "meta": {
        "order": 2,
        "depth": 0
      }
    },
    "eac944c1-c7a9-42b7-a7ba-6216f10f1a5a": {
      "id": "eac944c1-c7a9-42b7-a7ba-6216f10f1a5a",
      "value": [
        {
          "_id": "d0b524d9-61c0-47f2-b690-a903221f82be",
          "type": "blockquote",
          "children": [
            {
              "text": "GPT 요약",
              "bold": true,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            },
            {
              "text": "\nJSON 데이터를 ArrayList<Object>로 역직렬화할 수 없는 타입 불일치 에러가 발생했습니다.",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "Blockquote",
      "meta": {
        "order": 14,
        "depth": 0
      }
    },
    "f39d3aa8-ce24-49f3-b60c-527230497fab": {
      "id": "f39d3aa8-ce24-49f3-b60c-527230497fab",
      "value": [
        {
          "_id": "2cf7b200-83c2-476c-b15d-a0f4cd59aa45",
          "type": "heading-two",
          "children": [
            {
              "text": "개발 결과 : 에러 발생",
              "bold": false,
              "italic": false,
              "underline": false,
              "strike": false,
              "code": false
            }
          ],
          "props": {
            "nodeType": "block",
            "checked": false
          }
        }
      ],
      "type": "HeadingTwo",
      "meta": {
        "order": 0,
        "depth": 0
      }
    }
  },
  "_class": "com.ssafy.ododoc.file.entity.File"
}]